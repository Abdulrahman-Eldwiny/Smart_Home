

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Feb 18 17:03:15 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   102                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   103   000000                     
   104                           ; Generated 09/02/2023 GMT
   105                           ; 
   106                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F46K20 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138   000000                     
   139 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   140   000000                     
   141 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   142   000000                     
   143 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   144   000000                     
   145                           	psect	idataCOMRAM
   146   0022A0                     __pidataCOMRAM:
   147                           	callstack 0
   148                           
   149                           ;initializer for _Password_Check
   150   0022A0  FF                 	db	255
   151   0022A1  FF                 	db	255
   152   0022A2  FF                 	db	255
   153   0022A3  FF                 	db	255
   154                           
   155                           ;initializer for _Full_Password
   156   0022A4  FF                 	db	255
   157   0022A5  FF                 	db	255
   158   0022A6  FF                 	db	255
   159   0022A7  FF                 	db	255
   160                           
   161                           ;initializer for _rows
   162   0022A8  01                 	db	1
   163   0022A9  02                 	db	2
   164   0022AA  03                 	db	3
   165   0022AB  04                 	db	4
   166                           
   167                           ;initializer for _back_to_safety
   168   0022AC  FF                 	db	255
   169                           
   170                           ;initializer for _pressed_button
   171   0022AD  FF                 	db	255
   172                           
   173                           ;initializer for _Input_temp
   174   0022AE  1E                 	db	30
   175                           
   176                           	psect	idataBANK0
   177   00237E                     __pidataBANK0:
   178                           	callstack 0
   179                           
   180                           ;initializer for _columns
   181   00237E  01                 	db	1
   182   00237F  02                 	db	2
   183   002380  03                 	db	3
   184   002381  04                 	db	4
   185                           
   186                           	psect	mediumconst
   187   00FE2A                     __pmediumconst:
   188                           	callstack 0
   189   00FE2A  00                 	db	0
   190   00FE2B                     _i2c_fsmStateTable:
   191                           	callstack 0
   192   00FE2B  D6                 	db	low _I2C_DO_IDLE
   193   00FE2C  22                 	db	high _I2C_DO_IDLE
   194   00FE2D  90                 	db	low _I2C_DO_SEND_ADR_READ
   195   00FE2E  22                 	db	high _I2C_DO_SEND_ADR_READ
   196   00FE2F  B0                 	db	low _I2C_DO_SEND_ADR_WRITE
   197   00FE30  22                 	db	high _I2C_DO_SEND_ADR_WRITE
   198   00FE31  6E                 	db	low _I2C_DO_TX
   199   00FE32  16                 	db	high _I2C_DO_TX
   200   00FE33  A4                 	db	low _I2C_DO_RX
   201   00FE34  18                 	db	high _I2C_DO_RX
   202   00FE35  CA                 	db	low _I2C_DO_RCEN
   203   00FE36  22                 	db	high _I2C_DO_RCEN
   204   00FE37  6E                 	db	low _I2C_DO_TX_EMPTY
   205   00FE38  1B                 	db	high _I2C_DO_TX_EMPTY
   206   00FE39  5C                 	db	low _I2C_DO_SEND_RESTART_READ
   207   00FE3A  23                 	db	high _I2C_DO_SEND_RESTART_READ
   208   00FE3B  54                 	db	low _I2C_DO_SEND_RESTART_WRITE
   209   00FE3C  23                 	db	high _I2C_DO_SEND_RESTART_WRITE
   210   00FE3D  4C                 	db	low _I2C_DO_SEND_RESTART
   211   00FE3E  23                 	db	high _I2C_DO_SEND_RESTART
   212   00FE3F  44                 	db	low _I2C_DO_SEND_STOP
   213   00FE40  23                 	db	high _I2C_DO_SEND_STOP
   214   00FE41  3C                 	db	low _I2C_DO_RX_ACK
   215   00FE42  23                 	db	high _I2C_DO_RX_ACK
   216   00FE43  34                 	db	low _I2C_DO_RX_NACK_STOP
   217   00FE44  23                 	db	high _I2C_DO_RX_NACK_STOP
   218   00FE45  2C                 	db	low _I2C_DO_RX_NACK_RESTART
   219   00FE46  23                 	db	high _I2C_DO_RX_NACK_RESTART
   220   00FE47  BE                 	db	low _I2C_DO_RESET
   221   00FE48  22                 	db	high _I2C_DO_RESET
   222   00FE49  B0                 	db	low _I2C_DO_ADDRESS_NACK
   223   00FE4A  1D                 	db	high _I2C_DO_ADDRESS_NACK
   224   00FE4B                     __end_of_i2c_fsmStateTable:
   225                           	callstack 0
   226   00FE4B                     _btn_values:
   227                           	callstack 0
   228   00FE4B  4E                 	db	78
   229   00FE4C  30                 	db	48
   230   00FE4D  3D                 	db	61
   231   00FE4E  2B                 	db	43
   232   00FE4F  31                 	db	49
   233   00FE50  32                 	db	50
   234   00FE51  33                 	db	51
   235   00FE52  2D                 	db	45
   236   00FE53  34                 	db	52
   237   00FE54  35                 	db	53
   238   00FE55  36                 	db	54
   239   00FE56  2A                 	db	42
   240   00FE57  37                 	db	55
   241   00FE58  38                 	db	56
   242   00FE59  39                 	db	57
   243   00FE5A  2F                 	db	47
   244   00FE5B                     __end_of_btn_values:
   245                           	callstack 0
   246   000000                     _EEDATA	set	4008
   247   000000                     _EEADR	set	4009
   248   000000                     _EEADRH	set	4010
   249   000000                     _EECON2	set	4007
   250   000000                     _TXREG	set	4013
   251   000000                     _RCREG	set	4014
   252   000000                     _SPBRG	set	4015
   253   000000                     _TXSTA	set	4012
   254   000000                     _PIE2bits	set	4000
   255   000000                     _IPR1bits	set	3999
   256   000000                     _PIR1bits	set	3998
   257   000000                     _PORTA	set	3968
   258   000000                     _ANSELH	set	3967
   259   000000                     _TRISD	set	3989
   260   000000                     _TRISC	set	3988
   261   000000                     _TRISB	set	3987
   262   000000                     _LATD	set	3980
   263   000000                     _LATE	set	3981
   264   000000                     _LATCbits	set	3979
   265   000000                     _RCSTAbits	set	4011
   266   000000                     _TXSTAbits	set	4012
   267   000000                     _SSPSTATbits	set	4039
   268   000000                     _SSPCON2bits	set	4037
   269   000000                     _SSPCON1bits	set	4038
   270   000000                     _PORTB	set	3969
   271   000000                     _LATC	set	3979
   272   000000                     _LATB	set	3978
   273   000000                     _WPUB	set	3964
   274   000000                     _ANSEL	set	3966
   275   000000                     _PORTBbits	set	3969
   276   000000                     _LATBbits	set	3978
   277   000000                     _PORTD	set	3971
   278   000000                     _PORTC	set	3970
   279   000000                     _LATA	set	3977
   280   000000                     _TRISA	set	3986
   281   000000                     _TRISE	set	3990
   282   000000                     _OSCTUNE	set	3995
   283   000000                     _OSCCON	set	4051
   284   000000                     _INTCON2bits	set	4081
   285   000000                     _TABLAT	set	4085
   286   000000                     _TBLPTRL	set	4086
   287   000000                     _TBLPTRH	set	4087
   288   000000                     _TBLPTRU	set	4088
   289   000000                     _INTCONbits	set	4082
   290   000000                     _PIE1bits	set	3997
   291   000000                     _PIR2bits	set	4001
   292   000000                     _SSPCON2	set	4037
   293   000000                     _SSPCON1	set	4038
   294   000000                     _SSPSTAT	set	4039
   295   000000                     _RCONbits	set	4048
   296   000000                     _SSPBUF	set	4041
   297   000000                     _SSPADD	set	4040
   298   000000                     _EECON1bits	set	4006
   299   000000                     _RCSTA	set	4011
   300   000000                     _BAUDCON	set	4024
   301   000000                     _IPR2bits	set	4002
   302   000000                     _SPBRGH	set	4016
   303   00FE5B                     STR_46:
   304   00FE5B  70                 	db	112	;'p'
   305   00FE5C  6C                 	db	108	;'l'
   306   00FE5D  65                 	db	101	;'e'
   307   00FE5E  61                 	db	97	;'a'
   308   00FE5F  73                 	db	115	;'s'
   309   00FE60  65                 	db	101	;'e'
   310   00FE61  20                 	db	32
   311   00FE62  73                 	db	115	;'s'
   312   00FE63  65                 	db	101	;'e'
   313   00FE64  6C                 	db	108	;'l'
   314   00FE65  65                 	db	101	;'e'
   315   00FE66  63                 	db	99	;'c'
   316   00FE67  74                 	db	116	;'t'
   317   00FE68  20                 	db	32
   318   00FE69  6F                 	db	111	;'o'
   319   00FE6A  6E                 	db	110	;'n'
   320   00FE6B  65                 	db	101	;'e'
   321   00FE6C  00                 	db	0
   322   00FE6D                     STR_21:
   323   00FE6D  33                 	db	51	;'3'
   324   00FE6E  2D                 	db	45
   325   00FE6F  53                 	db	83	;'S'
   326   00FE70  65                 	db	101	;'e'
   327   00FE71  74                 	db	116	;'t'
   328   00FE72  20                 	db	32
   329   00FE73  74                 	db	116	;'t'
   330   00FE74  65                 	db	101	;'e'
   331   00FE75  6D                 	db	109	;'m'
   332   00FE76  70                 	db	112	;'p'
   333   00FE77  65                 	db	101	;'e'
   334   00FE78  72                 	db	114	;'r'
   335   00FE79  61                 	db	97	;'a'
   336   00FE7A  74                 	db	116	;'t'
   337   00FE7B  75                 	db	117	;'u'
   338   00FE7C  72                 	db	114	;'r'
   339   00FE7D  65                 	db	101	;'e'
   340   00FE7E  00                 	db	0
   341   00FE7F                     STR_20:
   342   00FE7F  31                 	db	49	;'1'
   343   00FE80  3A                 	db	58	;':'
   344   00FE81  43                 	db	67	;'C'
   345   00FE82  6F                 	db	111	;'o'
   346   00FE83  6E                 	db	110	;'n'
   347   00FE84  74                 	db	116	;'t'
   348   00FE85  72                 	db	114	;'r'
   349   00FE86  6F                 	db	111	;'o'
   350   00FE87  6C                 	db	108	;'l'
   351   00FE88  20                 	db	32
   352   00FE89  32                 	db	50	;'2'
   353   00FE8A  3A                 	db	58	;':'
   354   00FE8B  73                 	db	115	;'s'
   355   00FE8C  74                 	db	116	;'t'
   356   00FE8D  61                 	db	97	;'a'
   357   00FE8E  74                 	db	116	;'t'
   358   00FE8F  65                 	db	101	;'e'
   359   00FE90  00                 	db	0
   360   00FE91                     STR_31:
   361   00FE91  31                 	db	49	;'1'
   362   00FE92  3A                 	db	58	;':'
   363   00FE93  4C                 	db	76	;'L'
   364   00FE94  69                 	db	105	;'i'
   365   00FE95  67                 	db	103	;'g'
   366   00FE96  68                 	db	104	;'h'
   367   00FE97  74                 	db	116	;'t'
   368   00FE98  20                 	db	32
   369   00FE99  32                 	db	50	;'2'
   370   00FE9A  3A                 	db	58	;':'
   371   00FE9B  57                 	db	87	;'W'
   372   00FE9C  69                 	db	105	;'i'
   373   00FE9D  6E                 	db	110	;'n'
   374   00FE9E  64                 	db	100	;'d'
   375   00FE9F  6F                 	db	111	;'o'
   376   00FEA0  77                 	db	119	;'w'
   377   00FEA1  73                 	db	115	;'s'
   378   00FEA2  00                 	db	0
   379   00FEA3                     STR_36:
   380   00FEA3  31                 	db	49	;'1'
   381   00FEA4  3A                 	db	58	;':'
   382   00FEA5  4C                 	db	76	;'L'
   383   00FEA6  69                 	db	105	;'i'
   384   00FEA7  67                 	db	103	;'g'
   385   00FEA8  68                 	db	104	;'h'
   386   00FEA9  74                 	db	116	;'t'
   387   00FEAA  20                 	db	32
   388   00FEAB  32                 	db	50	;'2'
   389   00FEAC  3A                 	db	58	;':'
   390   00FEAD  77                 	db	119	;'w'
   391   00FEAE  69                 	db	105	;'i'
   392   00FEAF  6E                 	db	110	;'n'
   393   00FEB0  64                 	db	100	;'d'
   394   00FEB1  6F                 	db	111	;'o'
   395   00FEB2  77                 	db	119	;'w'
   396   00FEB3  73                 	db	115	;'s'
   397   00FEB4  00                 	db	0
   398   00FEB5                     STR_15:
   399   00FEB5  33                 	db	51	;'3'
   400   00FEB6  3A                 	db	58	;':'
   401   00FEB7  52                 	db	82	;'R'
   402   00FEB8  6F                 	db	111	;'o'
   403   00FEB9  6F                 	db	111	;'o'
   404   00FEBA  6D                 	db	109	;'m'
   405   00FEBB  33                 	db	51	;'3'
   406   00FEBC  20                 	db	32
   407   00FEBD  4F                 	db	79	;'O'
   408   00FEBE  4E                 	db	78	;'N'
   409   00FEBF  2F                 	db	47
   410   00FEC0  43                 	db	67	;'C'
   411   00FEC1  3A                 	db	58	;':'
   412   00FEC2  4F                 	db	79	;'O'
   413   00FEC3  66                 	db	102	;'f'
   414   00FEC4  66                 	db	102	;'f'
   415   00FEC5  00                 	db	0
   416   00FEC6                     STR_9:
   417   00FEC6  45                 	db	69	;'E'
   418   00FEC7  6E                 	db	110	;'n'
   419   00FEC8  74                 	db	116	;'t'
   420   00FEC9  65                 	db	101	;'e'
   421   00FECA  72                 	db	114	;'r'
   422   00FECB  20                 	db	32
   423   00FECC  67                 	db	103	;'g'
   424   00FECD  75                 	db	117	;'u'
   425   00FECE  65                 	db	101	;'e'
   426   00FECF  73                 	db	115	;'s'
   427   00FED0  74                 	db	116	;'t'
   428   00FED1  20                 	db	32
   429   00FED2  70                 	db	112	;'p'
   430   00FED3  61                 	db	97	;'a'
   431   00FED4  73                 	db	115	;'s'
   432   00FED5  73                 	db	115	;'s'
   433   00FED6  00                 	db	0
   434   00FED7                     STR_7:
   435   00FED7  57                 	db	87	;'W'
   436   00FED8  65                 	db	101	;'e'
   437   00FED9  6C                 	db	108	;'l'
   438   00FEDA  63                 	db	99	;'c'
   439   00FEDB  6F                 	db	111	;'o'
   440   00FEDC  6D                 	db	109	;'m'
   441   00FEDD  65                 	db	101	;'e'
   442   00FEDE  20                 	db	32
   443   00FEDF  74                 	db	116	;'t'
   444   00FEE0  6F                 	db	111	;'o'
   445   00FEE1  20                 	db	32
   446   00FEE2  73                 	db	115	;'s'
   447   00FEE3  6D                 	db	109	;'m'
   448   00FEE4  61                 	db	97	;'a'
   449   00FEE5  72                 	db	114	;'r'
   450   00FEE6  74                 	db	116	;'t'
   451   00FEE7  00                 	db	0
   452   00FEE8                     STR_14:
   453   00FEE8  31                 	db	49	;'1'
   454   00FEE9  3A                 	db	58	;':'
   455   00FEEA  52                 	db	82	;'R'
   456   00FEEB  6F                 	db	111	;'o'
   457   00FEEC  6F                 	db	111	;'o'
   458   00FEED  6D                 	db	109	;'m'
   459   00FEEE  31                 	db	49	;'1'
   460   00FEEF  20                 	db	32
   461   00FEF0  32                 	db	50	;'2'
   462   00FEF1  3A                 	db	58	;':'
   463   00FEF2  52                 	db	82	;'R'
   464   00FEF3  6F                 	db	111	;'o'
   465   00FEF4  6F                 	db	111	;'o'
   466   00FEF5  6D                 	db	109	;'m'
   467   00FEF6  32                 	db	50	;'2'
   468   00FEF7  00                 	db	0
   469   00FEF8                     STR_11:
   470   00FEF8  4C                 	db	76	;'L'
   471   00FEF9  6F                 	db	111	;'o'
   472   00FEFA  67                 	db	103	;'g'
   473   00FEFB  69                 	db	105	;'i'
   474   00FEFC  6E                 	db	110	;'n'
   475   00FEFD  20                 	db	32
   476   00FEFE  41                 	db	65	;'A'
   477   00FEFF  70                 	db	112	;'p'
   478   00FF00  70                 	db	112	;'p'
   479   00FF01  72                 	db	114	;'r'
   480   00FF02  6F                 	db	111	;'o'
   481   00FF03  76                 	db	118	;'v'
   482   00FF04  65                 	db	101	;'e'
   483   00FF05  64                 	db	100	;'d'
   484   00FF06  00                 	db	0
   485   00FF07                     STR_12:
   486   00FF07  57                 	db	87	;'W'
   487   00FF08  72                 	db	114	;'r'
   488   00FF09  6F                 	db	111	;'o'
   489   00FF0A  6E                 	db	110	;'n'
   490   00FF0B  67                 	db	103	;'g'
   491   00FF0C  20                 	db	32
   492   00FF0D  50                 	db	80	;'P'
   493   00FF0E  61                 	db	97	;'a'
   494   00FF0F  73                 	db	115	;'s'
   495   00FF10  73                 	db	115	;'s'
   496   00FF11  77                 	db	119	;'w'
   497   00FF12  6F                 	db	111	;'o'
   498   00FF13  72                 	db	114	;'r'
   499   00FF14  64                 	db	100	;'d'
   500   00FF15  00                 	db	0
   501   00FF16                     STR_47:
   502   00FF16  6F                 	db	111	;'o'
   503   00FF17  66                 	db	102	;'f'
   504   00FF18  20                 	db	32
   505   00FF19  74                 	db	116	;'t'
   506   00FF1A  68                 	db	104	;'h'
   507   00FF1B  65                 	db	101	;'e'
   508   00FF1C  20                 	db	32
   509   00FF1D  6F                 	db	111	;'o'
   510   00FF1E  70                 	db	112	;'p'
   511   00FF1F  74                 	db	116	;'t'
   512   00FF20  69                 	db	105	;'i'
   513   00FF21  6F                 	db	111	;'o'
   514   00FF22  6E                 	db	110	;'n'
   515   00FF23  73                 	db	115	;'s'
   516   00FF24  00                 	db	0
   517   00FF25                     STR_4:
   518   00FF25  53                 	db	83	;'S'
   519   00FF26  65                 	db	101	;'e'
   520   00FF27  74                 	db	116	;'t'
   521   00FF28  20                 	db	32
   522   00FF29  67                 	db	103	;'g'
   523   00FF2A  75                 	db	117	;'u'
   524   00FF2B  65                 	db	101	;'e'
   525   00FF2C  73                 	db	115	;'s'
   526   00FF2D  74                 	db	116	;'t'
   527   00FF2E  20                 	db	32
   528   00FF2F  70                 	db	112	;'p'
   529   00FF30  61                 	db	97	;'a'
   530   00FF31  73                 	db	115	;'s'
   531   00FF32  73                 	db	115	;'s'
   532   00FF33  00                 	db	0
   533   00FF34                     STR_13:
   534   00FF34  50                 	db	80	;'P'
   535   00FF35  6C                 	db	108	;'l'
   536   00FF36  65                 	db	101	;'e'
   537   00FF37  61                 	db	97	;'a'
   538   00FF38  73                 	db	115	;'s'
   539   00FF39  65                 	db	101	;'e'
   540   00FF3A  20                 	db	32
   541   00FF3B  77                 	db	119	;'w'
   542   00FF3C  61                 	db	97	;'a'
   543   00FF3D  69                 	db	105	;'i'
   544   00FF3E  74                 	db	116	;'t'
   545   00FF3F  3A                 	db	58	;':'
   546   00FF40  20                 	db	32
   547   00FF41  00                 	db	0
   548   00FF42                     STR_27:
   549   00FF42  53                 	db	83	;'S'
   550   00FF43  65                 	db	101	;'e'
   551   00FF44  74                 	db	116	;'t'
   552   00FF45  20                 	db	32
   553   00FF46  74                 	db	116	;'t'
   554   00FF47  65                 	db	101	;'e'
   555   00FF48  6D                 	db	109	;'m'
   556   00FF49  70                 	db	112	;'p'
   557   00FF4A  2E                 	db	46
   558   00FF4B  3A                 	db	58	;':'
   559   00FF4C  5F                 	db	95	;'_'
   560   00FF4D  5F                 	db	95	;'_'
   561   00FF4E  20                 	db	32
   562   00FF4F  00                 	db	0
   563   00FF50                     STR_37:
   564   00FF50  33                 	db	51	;'3'
   565   00FF51  3A                 	db	58	;':'
   566   00FF52  54                 	db	84	;'T'
   567   00FF53  56                 	db	86	;'V'
   568   00FF54  20                 	db	32
   569   00FF55  20                 	db	32
   570   00FF56  34                 	db	52	;'4'
   571   00FF57  3A                 	db	58	;':'
   572   00FF58  52                 	db	82	;'R'
   573   00FF59  61                 	db	97	;'a'
   574   00FF5A  64                 	db	100	;'d'
   575   00FF5B  69                 	db	105	;'i'
   576   00FF5C  6F                 	db	111	;'o'
   577   00FF5D  00                 	db	0
   578   00FF5E                     STR_17:
   579   00FF5E  32                 	db	50	;'2'
   580   00FF5F  3A                 	db	58	;':'
   581   00FF60  63                 	db	99	;'c'
   582   00FF61  6F                 	db	111	;'o'
   583   00FF62  6E                 	db	110	;'n'
   584   00FF63  64                 	db	100	;'d'
   585   00FF64  69                 	db	105	;'i'
   586   00FF65  74                 	db	116	;'t'
   587   00FF66  69                 	db	105	;'i'
   588   00FF67  6F                 	db	111	;'o'
   589   00FF68  6E                 	db	110	;'n'
   590   00FF69  65                 	db	101	;'e'
   591   00FF6A  72                 	db	114	;'r'
   592   00FF6B  00                 	db	0
   593   00FF6C                     STR_34:
   594   00FF6C  31                 	db	49	;'1'
   595   00FF6D  2D                 	db	45
   596   00FF6E  4F                 	db	79	;'O'
   597   00FF6F  4E                 	db	78	;'N'
   598   00FF70  20                 	db	32
   599   00FF71  20                 	db	32
   600   00FF72  20                 	db	32
   601   00FF73  32                 	db	50	;'2'
   602   00FF74  2D                 	db	45
   603   00FF75  4F                 	db	79	;'O'
   604   00FF76  46                 	db	70	;'F'
   605   00FF77  46                 	db	70	;'F'
   606   00FF78  00                 	db	0
   607   00FF79                     STR_5:
   608   00FF79  47                 	db	71	;'G'
   609   00FF7A  75                 	db	117	;'u'
   610   00FF7B  65                 	db	101	;'e'
   611   00FF7C  73                 	db	115	;'s'
   612   00FF7D  74                 	db	116	;'t'
   613   00FF7E  20                 	db	32
   614   00FF7F  50                 	db	80	;'P'
   615   00FF80  61                 	db	97	;'a'
   616   00FF81  73                 	db	115	;'s'
   617   00FF82  73                 	db	115	;'s'
   618   00FF83  3A                 	db	58	;':'
   619   00FF84  00                 	db	0
   620   00FF85                     STR_22:
   621   00FF85  31                 	db	49	;'1'
   622   00FF86  2D                 	db	45
   623   00FF87  20                 	db	32
   624   00FF88  4F                 	db	79	;'O'
   625   00FF89  6E                 	db	110	;'n'
   626   00FF8A  20                 	db	32
   627   00FF8B  32                 	db	50	;'2'
   628   00FF8C  2D                 	db	45
   629   00FF8D  4F                 	db	79	;'O'
   630   00FF8E  66                 	db	102	;'f'
   631   00FF8F  66                 	db	102	;'f'
   632   00FF90  00                 	db	0
   633   00FF91                     STR_8:
   634   00FF91  68                 	db	104	;'h'
   635   00FF92  6F                 	db	111	;'o'
   636   00FF93  6D                 	db	109	;'m'
   637   00FF94  65                 	db	101	;'e'
   638   00FF95  20                 	db	32
   639   00FF96  73                 	db	115	;'s'
   640   00FF97  79                 	db	121	;'y'
   641   00FF98  73                 	db	115	;'s'
   642   00FF99  74                 	db	116	;'t'
   643   00FF9A  65                 	db	101	;'e'
   644   00FF9B  6D                 	db	109	;'m'
   645   00FF9C  00                 	db	0
   646   00FF9D                     STR_19:
   647   00FF9D  57                 	db	87	;'W'
   648   00FF9E  72                 	db	114	;'r'
   649   00FF9F  6F                 	db	111	;'o'
   650   00FFA0  6E                 	db	110	;'n'
   651   00FFA1  67                 	db	103	;'g'
   652   00FFA2  20                 	db	32
   653   00FFA3  69                 	db	105	;'i'
   654   00FFA4  6E                 	db	110	;'n'
   655   00FFA5  70                 	db	112	;'p'
   656   00FFA6  75                 	db	117	;'u'
   657   00FFA7  74                 	db	116	;'t'
   658   00FFA8  00                 	db	0
   659   00FFA9                     STR_26:
   660   00FFA9  73                 	db	115	;'s'
   661   00FFAA  74                 	db	116	;'t'
   662   00FFAB  61                 	db	97	;'a'
   663   00FFAC  74                 	db	116	;'t'
   664   00FFAD  65                 	db	101	;'e'
   665   00FFAE  3A                 	db	58	;':'
   666   00FFAF  20                 	db	32
   667   00FFB0  4F                 	db	79	;'O'
   668   00FFB1  46                 	db	70	;'F'
   669   00FFB2  46                 	db	70	;'F'
   670   00FFB3  00                 	db	0
   671   00FFB4                     STR_6:
   672   00FFB4  50                 	db	80	;'P'
   673   00FFB5  61                 	db	97	;'a'
   674   00FFB6  73                 	db	115	;'s'
   675   00FFB7  73                 	db	115	;'s'
   676   00FFB8  20                 	db	32
   677   00FFB9  53                 	db	83	;'S'
   678   00FFBA  61                 	db	97	;'a'
   679   00FFBB  76                 	db	118	;'v'
   680   00FFBC  65                 	db	101	;'e'
   681   00FFBD  64                 	db	100	;'d'
   682   00FFBE  00                 	db	0
   683   00FFBF                     STR_3:
   684   00FFBF  66                 	db	102	;'f'
   685   00FFC0  69                 	db	105	;'i'
   686   00FFC1  72                 	db	114	;'r'
   687   00FFC2  73                 	db	115	;'s'
   688   00FFC3  74                 	db	116	;'t'
   689   00FFC4  20                 	db	32
   690   00FFC5  74                 	db	116	;'t'
   691   00FFC6  69                 	db	105	;'i'
   692   00FFC7  6D                 	db	109	;'m'
   693   00FFC8  65                 	db	101	;'e'
   694   00FFC9  00                 	db	0
   695   00FFCA                     STR_18:
   696   00FFCA  31                 	db	49	;'1'
   697   00FFCB  2D                 	db	45
   698   00FFCC  4F                 	db	79	;'O'
   699   00FFCD  6E                 	db	110	;'n'
   700   00FFCE  20                 	db	32
   701   00FFCF  32                 	db	50	;'2'
   702   00FFD0  2D                 	db	45
   703   00FFD1  4F                 	db	79	;'O'
   704   00FFD2  66                 	db	102	;'f'
   705   00FFD3  66                 	db	102	;'f'
   706   00FFD4  00                 	db	0
   707   00FFD5                     STR_2:
   708   00FFD5  4C                 	db	76	;'L'
   709   00FFD6  6F                 	db	111	;'o'
   710   00FFD7  67                 	db	103	;'g'
   711   00FFD8  69                 	db	105	;'i'
   712   00FFD9  6E                 	db	110	;'n'
   713   00FFDA  20                 	db	32
   714   00FFDB  66                 	db	102	;'f'
   715   00FFDC  6F                 	db	111	;'o'
   716   00FFDD  72                 	db	114	;'r'
   717   00FFDE  00                 	db	0
   718   00FFDF                     STR_24:
   719   00FFDF  73                 	db	115	;'s'
   720   00FFE0  74                 	db	116	;'t'
   721   00FFE1  61                 	db	97	;'a'
   722   00FFE2  74                 	db	116	;'t'
   723   00FFE3  65                 	db	101	;'e'
   724   00FFE4  3A                 	db	58	;':'
   725   00FFE5  4F                 	db	79	;'O'
   726   00FFE6  4E                 	db	78	;'N'
   727   00FFE7  00                 	db	0
   728   00FFE8                     STR_16:
   729   00FFE8  31                 	db	49	;'1'
   730   00FFE9  3A                 	db	58	;':'
   731   00FFEA  4C                 	db	76	;'L'
   732   00FFEB  69                 	db	105	;'i'
   733   00FFEC  67                 	db	103	;'g'
   734   00FFED  68                 	db	104	;'h'
   735   00FFEE  74                 	db	116	;'t'
   736   00FFEF  00                 	db	0
   737   00FFF0  44                 	db	68	;'D'
   738   00FFF1  61                 	db	97	;'a'
   739   00FFF2  74                 	db	116	;'t'
   740   00FFF3  65                 	db	101	;'e'
   741   00FFF4  20                 	db	32
   742   00FFF5  3A                 	db	58	;':'
   743   00FFF6  20                 	db	32
   744   00FFF7  00                 	db	0
   745   00FFF8                     STR_25:
   746   00FFF8  54                 	db	84	;'T'
   747   00FFF9  65                 	db	101	;'e'
   748   00FFFA  6D                 	db	109	;'m'
   749   00FFFB  70                 	db	112	;'p'
   750   00FFFC  3A                 	db	58	;':'
   751   00FFFD  20                 	db	32
   752   00FFFE  00                 	db	0
   753   00FFFF  00                 	db	0	; dummy byte at the end
   754   000000                     
   755                           ; #config settings
   756                           
   757                           	psect	cinit
   758   001E16                     __pcinit:
   759                           	callstack 0
   760   001E16                     start_initialization:
   761                           	callstack 0
   762   001E16                     __initialization:
   763                           	callstack 0
   764                           
   765                           ; Initialize objects allocated to BANK0 (4 bytes)
   766                           ; load TBLPTR registers with __pidataBANK0
   767   001E16  0E7E               	movlw	low __pidataBANK0
   768   001E18  6EF6               	movwf	tblptrl,c
   769   001E1A  0E23               	movlw	high __pidataBANK0
   770   001E1C  6EF7               	movwf	tblptrh,c
   771   001E1E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   772   001E20  6EF8               	movwf	tblptru,c
   773   001E22  EE00  F0AE         	lfsr	0,__pdataBANK0
   774   001E26  EE10 F004          	lfsr	1,4
   775   001E2A                     copy_data0:
   776   001E2A  0009               	tblrd		*+
   777   001E2C  CFF5 FFEE          	movff	tablat,postinc0
   778   001E30  50E5               	movf	postdec1,w,c
   779   001E32  50E1               	movf	fsr1l,w,c
   780   001E34  E1FA               	bnz	copy_data0
   781                           
   782                           ; Initialize objects allocated to COMRAM (15 bytes)
   783                           ; load TBLPTR registers with __pidataCOMRAM
   784   001E36  0EA0               	movlw	low __pidataCOMRAM
   785   001E38  6EF6               	movwf	tblptrl,c
   786   001E3A  0E22               	movlw	high __pidataCOMRAM
   787   001E3C  6EF7               	movwf	tblptrh,c
   788   001E3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   789   001E40  6EF8               	movwf	tblptru,c
   790   001E42  EE00  F03C         	lfsr	0,__pdataCOMRAM
   791   001E46  EE10 F00F          	lfsr	1,15
   792   001E4A                     copy_data1:
   793   001E4A  0009               	tblrd		*+
   794   001E4C  CFF5 FFEE          	movff	tablat,postinc0
   795   001E50  50E5               	movf	postdec1,w,c
   796   001E52  50E1               	movf	fsr1l,w,c
   797   001E54  E1FA               	bnz	copy_data1
   798                           
   799                           ; Clear objects allocated to BANK0 (60 bytes)
   800   001E56  EE00  F060         	lfsr	0,__pbssBANK0
   801   001E5A  0E3C               	movlw	60
   802   001E5C                     clear_0:
   803   001E5C  6AEE               	clrf	postinc0,c
   804   001E5E  06E8               	decf	wreg,f,c
   805   001E60  E1FD               	bnz	clear_0
   806                           
   807                           ; Clear objects allocated to COMRAM (34 bytes)
   808   001E62  EE00  F001         	lfsr	0,__pbssCOMRAM
   809   001E66  0E22               	movlw	34
   810   001E68                     clear_1:
   811   001E68  6AEE               	clrf	postinc0,c
   812   001E6A  06E8               	decf	wreg,f,c
   813   001E6C  E1FD               	bnz	clear_1
   814   001E6E                     end_of_initialization:
   815                           	callstack 0
   816   001E6E                     __end_of__initialization:
   817                           	callstack 0
   818   001E6E  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   819   001E70  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   820   001E72  0100               	movlb	0
   821   001E74  EF5D  F000         	goto	_main	;jump to C main() function
   822                           
   823                           	psect	bssCOMRAM
   824   000001                     __pbssCOMRAM:
   825                           	callstack 0
   826   000001                     _RealTimeClockDS1307@RealTimeClockDS1307$F311:
   827                           	callstack 0
   828   000001                     	ds	6
   829   000007                     _EUSART_ErrorHandler:
   830                           	callstack 0
   831   000007                     	ds	2
   832   000009                     _EUSART_OverrunErrorHandler:
   833                           	callstack 0
   834   000009                     	ds	2
   835   00000B                     _EUSART_FramingErrorHandler:
   836                           	callstack 0
   837   00000B                     	ds	2
   838   00000D                     _MSSP_InterruptHandler:
   839                           	callstack 0
   840   00000D                     	ds	2
   841   00000F                     _first_time:
   842                           	callstack 0
   843   00000F                     	ds	1
   844   000010                     _fire_alarm:
   845                           	callstack 0
   846   000010                     	ds	1
   847   000011                     _radio_state:
   848                           	callstack 0
   849   000011                     	ds	1
   850   000012                     _windows2_state:
   851                           	callstack 0
   852   000012                     	ds	1
   853   000013                     _windows1_state:
   854                           	callstack 0
   855   000013                     	ds	1
   856   000014                     _tv_state:
   857                           	callstack 0
   858   000014                     	ds	1
   859   000015                     _led3_state:
   860                           	callstack 0
   861   000015                     	ds	1
   862   000016                     _led2_state:
   863                           	callstack 0
   864   000016                     	ds	1
   865   000017                     _led1_state:
   866                           	callstack 0
   867   000017                     	ds	1
   868   000018                     _opened_in_flag:
   869                           	callstack 0
   870   000018                     	ds	1
   871   000019                     _opened_flag:
   872                           	callstack 0
   873   000019                     	ds	1
   874   00001A                     _conditioner_state:
   875                           	callstack 0
   876   00001A                     	ds	1
   877   00001B                     _Password_Approval:
   878                           	callstack 0
   879   00001B                     	ds	1
   880   00001C                     _pass_entry_counter:
   881                           	callstack 0
   882   00001C                     	ds	1
   883   00001D                     _pass_counter:
   884                           	callstack 0
   885   00001D                     	ds	1
   886   00001E                     _ON_counter:
   887                           	callstack 0
   888   00001E                     	ds	1
   889   00001F                     _TC74_A7_TempValue:
   890                           	callstack 0
   891   00001F                     	ds	1
   892   000020                     _U5RecValue:
   893                           	callstack 0
   894   000020                     	ds	1
   895   000021                     _U4RecValue:
   896                           	callstack 0
   897   000021                     	ds	1
   898   000022                     _eusartRxLastError:
   899                           	callstack 0
   900   000022                     	ds	1
   901                           
   902                           	psect	dataCOMRAM
   903   00003C                     __pdataCOMRAM:
   904                           	callstack 0
   905   00003C                     _Password_Check:
   906                           	callstack 0
   907   00003C                     	ds	4
   908   000040                     _Full_Password:
   909                           	callstack 0
   910   000040                     	ds	4
   911   000044                     _rows:
   912                           	callstack 0
   913   000044                     	ds	4
   914   000048                     _back_to_safety:
   915                           	callstack 0
   916   000048                     	ds	1
   917   000049                     _pressed_button:
   918                           	callstack 0
   919   000049                     	ds	1
   920   00004A                     _Input_temp:
   921                           	callstack 0
   922   00004A                     	ds	1
   923                           
   924                           	psect	bssBANK0
   925   000060                     __pbssBANK0:
   926                           	callstack 0
   927   000060                     _I2C_Status:
   928                           	callstack 0
   929   000060                     	ds	36
   930   000084                     _RealTimeClockDS1307:
   931                           	callstack 0
   932   000084                     	ds	6
   933   00008A                     _RealTimeClockDS1307_Pack:
   934                           	callstack 0
   935   00008A                     	ds	18
   936                           
   937                           	psect	dataBANK0
   938   0000AE                     __pdataBANK0:
   939                           	callstack 0
   940   0000AE                     _columns:
   941                           	callstack 0
   942   0000AE                     	ds	4
   943                           
   944                           	psect	cstackBANK0
   945   00009C                     __pcstackBANK0:
   946                           	callstack 0
   947   00009C                     ??_column_pin_read__logic:
   948   00009C                     ??_send_falling_edge:
   949   00009C                     ?___awdiv:
   950                           	callstack 0
   951   00009C                     ?___awmod:
   952                           	callstack 0
   953   00009C                     row_pin_write__logic@state:
   954                           	callstack 0
   955   00009C                     DIO_write_port@portvalue:
   956                           	callstack 0
   957   00009C                     I2C_Close@returnValue:
   958                           	callstack 0
   959   00009C                     I2C_MasterOperation@read:
   960                           	callstack 0
   961   00009C                     EUSART_Write@txData:
   962                           	callstack 0
   963   00009C                     I2C_SetBuffer@buffer:
   964                           	callstack 0
   965   00009C                     I2C_SetInterruptHandler@InterruptHandler:
   966                           	callstack 0
   967   00009C                     I2C_SetCallback@cb:
   968                           	callstack 0
   969   00009C                     EUSART_SetFramingErrorHandler@interruptHandler:
   970                           	callstack 0
   971   00009C                     EUSART_SetOverrunErrorHandler@interruptHandler:
   972                           	callstack 0
   973   00009C                     EUSART_SetErrorHandler@interruptHandler:
   974                           	callstack 0
   975   00009C                     DATAEE_ReadByte@bAdd:
   976                           	callstack 0
   977   00009C                     ___awdiv@dividend:
   978                           	callstack 0
   979   00009C                     ___awmod@dividend:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x0
   983   00009C                     	ds	1
   984   00009D                     ??_DIO_write_port:
   985   00009D                     ??_row_pin_write__logic:
   986   00009D                     I2C_MasterOperation@returnValue:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x1
   990   00009D                     	ds	1
   991   00009E                     column_pin_read__logic@value:
   992                           	callstack 0
   993   00009E                     I2C_Open@address:
   994                           	callstack 0
   995   00009E                     I2C_SetBuffer@bufferSize:
   996                           	callstack 0
   997   00009E                     I2C_SetCallback@ptr:
   998                           	callstack 0
   999   00009E                     ___awdiv@divisor:
  1000                           	callstack 0
  1001   00009E                     ___awmod@divisor:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x2
  1005   00009E                     	ds	1
  1006   00009F                     row_pin_write__logic@value:
  1007                           	callstack 0
  1008   00009F                     column_pin_read__logic@pin_state:
  1009                           	callstack 0
  1010   00009F                     DIO_write_port@portname:
  1011                           	callstack 0
  1012   00009F                     I2C_Open@returnValue:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x3
  1016   00009F                     	ds	1
  1017   0000A0                     ??_keypad_get_value:
  1018   0000A0                     LCD_vSend_cmd@cmd:
  1019                           	callstack 0
  1020   0000A0                     LCD_vSend_char@data:
  1021                           	callstack 0
  1022   0000A0                     I2C_SetCallback@idx:
  1023                           	callstack 0
  1024   0000A0                     ___awdiv@counter:
  1025                           	callstack 0
  1026   0000A0                     ___awmod@counter:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x4
  1030   0000A0                     	ds	1
  1031   0000A1                     ??_LCD_vInit:
  1032   0000A1                     LCD_movecursor@coloumn:
  1033                           	callstack 0
  1034   0000A1                     ___awdiv@sign:
  1035                           	callstack 0
  1036   0000A1                     ___awmod@sign:
  1037                           	callstack 0
  1038   0000A1                     LCD_vSend_string@data:
  1039                           	callstack 0
  1040   0000A1                     I2C_SetDataCompleteCallback@cb:
  1041                           	callstack 0
  1042   0000A1                     I2C_SetAddressNackCallback@cb:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x5
  1046   0000A1                     	ds	1
  1047   0000A2                     keypad_get_value@clicked_value:
  1048                           	callstack 0
  1049   0000A2                     LCD_movecursor@data:
  1050                           	callstack 0
  1051   0000A2                     ___awdiv@quotient:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x6
  1055   0000A2                     	ds	1
  1056   0000A3                     keypad_get_value@column_logic:
  1057                           	callstack 0
  1058   0000A3                     LCD_movecursor@row:
  1059                           	callstack 0
  1060   0000A3                     I2C_SetDataCompleteCallback@ptr:
  1061                           	callstack 0
  1062   0000A3                     I2C_SetAddressNackCallback@ptr:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x7
  1066   0000A3                     	ds	1
  1067   0000A4                     keypad_get_value@l_counter:
  1068                           	callstack 0
  1069   0000A4                     DATAEE_WriteByte@bAdd:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x8
  1073   0000A4                     	ds	1
  1074   0000A5                     keypad_get_value@l_rows_counter:
  1075                           	callstack 0
  1076   0000A5                     I2C_Read1ByteRegister@reg:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x9
  1080   0000A5                     	ds	1
  1081   0000A6                     keypad_get_value@l_columns_counter:
  1082                           	callstack 0
  1083   0000A6                     I2C_Read1ByteRegister@address:
  1084                           	callstack 0
  1085   0000A6                     DATAEE_WriteByte@bData:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0xA
  1089   0000A6                     	ds	1
  1090   0000A7                     I2C_Read1ByteRegister@returnValue:
  1091                           	callstack 0
  1092   0000A7                     DATAEE_WriteByte@GIEBitValue:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0xB
  1096   0000A7                     	ds	1
  1097   0000A8                     TempSensor_TC74_Read_Temp@TC74_Address:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0xC
  1101   0000A8                     	ds	1
  1102   0000A9                     TempSensor_TC74_Read_Temp@TC74_TempValue:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xD
  1106   0000A9                     	ds	1
  1107   0000AA                     ??_main:
  1108                           
  1109                           ; 1 bytes @ 0xE
  1110   0000AA                     	ds	2
  1111   0000AC                     main@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x10
  1115   0000AC                     	ds	2
  1116                           
  1117                           	psect	cstackCOMRAM
  1118   000023                     __pcstackCOMRAM:
  1119                           	callstack 0
  1120   000023                     I2C_MasterSendTxData@data:
  1121                           	callstack 0
  1122   000023                     i2I2C_SetBuffer@buffer:
  1123                           	callstack 0
  1124   000023                     i2I2C_SetCallback@cb:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x0
  1128   000023                     	ds	1
  1129   000024                     
  1130                           ; 1 bytes @ 0x1
  1131   000024                     	ds	1
  1132   000025                     i2I2C_SetBuffer@bufferSize:
  1133                           	callstack 0
  1134   000025                     i2I2C_SetCallback@ptr:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x2
  1138   000025                     	ds	2
  1139   000027                     i2I2C_SetCallback@idx:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x4
  1143   000027                     	ds	1
  1144   000028                     i2I2C_SetDataCompleteCallback@cb:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x5
  1148   000028                     	ds	2
  1149   00002A                     i2I2C_SetDataCompleteCallback@ptr:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x7
  1153   00002A                     	ds	2
  1154   00002C                     rd1RegCompleteHandler@ptr:
  1155                           	callstack 0
  1156   00002C                     rd2RegCompleteHandler@ptr:
  1157                           	callstack 0
  1158   00002C                     wr1RegCompleteHandler@ptr:
  1159                           	callstack 0
  1160   00002C                     wr2RegCompleteHandler@ptr:
  1161                           	callstack 0
  1162   00002C                     rdBlkRegCompleteHandler@ptr:
  1163                           	callstack 0
  1164   00002C                     I2C_CallbackReturnReset@funPtr:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x9
  1168   00002C                     	ds	2
  1169   00002E                     ??_I2C_DO_TX:
  1170   00002E                     ??_I2C_DO_RX:
  1171   00002E                     ??_I2C_DO_TX_EMPTY:
  1172   00002E                     ??_I2C_DO_ADDRESS_NACK:
  1173   00002E                     
  1174                           ; 1 bytes @ 0xB
  1175   00002E                     	ds	2
  1176   000030                     ??_I2C_MasterFsm:
  1177                           
  1178                           ; 1 bytes @ 0xD
  1179   000030                     	ds	2
  1180   000032                     ??_INTERRUPT_InterruptManagerHigh:
  1181                           
  1182                           ; 1 bytes @ 0xF
  1183   000032                     	ds	10
  1184                           
  1185 ;;
  1186 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1187 ;;
  1188 ;; *************** function _main *****************
  1189 ;; Defined at:
  1190 ;;		line 56 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  i               2   16[BANK0 ] int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        4 bytes
  1209 ;; Hardware stack levels required when called: 12
  1210 ;; This function calls:
  1211 ;;		_DATAEE_ReadByte
  1212 ;;		_DATAEE_WriteByte
  1213 ;;		_EUSART_Write
  1214 ;;		_LCD_clearscreen
  1215 ;;		_LCD_movecursor
  1216 ;;		_LCD_vInit
  1217 ;;		_LCD_vSend_char
  1218 ;;		_LCD_vSend_string
  1219 ;;		_SYSTEM_Initialize
  1220 ;;		_TempSensor_TC74_Read_Temp
  1221 ;;		___awdiv
  1222 ;;		___awmod
  1223 ;;		_keypad_get_value
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text0
  1230   0000BA                     __ptext0:
  1231                           	callstack 0
  1232   0000BA                     _main:
  1233                           	callstack 19
  1234   0000BA                     
  1235                           ;main.c: 58:     DATAEE_WriteByte(0x00,0);
  1236   0000BA  0E00               	movlw	0
  1237   0000BC  0100               	movlb	0	; () banked
  1238   0000BE  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1239   0000C0  0E00               	movlw	0
  1240   0000C2  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1241   0000C4  0E00               	movlw	0
  1242   0000C6  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  1243   0000C8  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1244                           
  1245                           ;main.c: 59:     DATAEE_WriteByte(0x40,0);
  1246   0000CC  0E00               	movlw	0
  1247   0000CE  0100               	movlb	0	; () banked
  1248   0000D0  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1249   0000D2  0E40               	movlw	64
  1250   0000D4  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1251   0000D6  0E00               	movlw	0
  1252   0000D8  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  1253   0000DA  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1254                           
  1255                           ;main.c: 61:     SYSTEM_Initialize();
  1256   0000DE  EC13  F011         	call	_SYSTEM_Initialize	;wreg free
  1257                           
  1258                           ;main.c: 62:     LCD_vInit();
  1259   0000E2  EC6B  F010         	call	_LCD_vInit	;wreg free
  1260   0000E6                     
  1261                           ;main.c: 64:     (INTCONbits.GIEH = 1);
  1262   0000E6  8EF2               	bsf	242,7,c	;volatile
  1263   0000E8                     
  1264                           ;main.c: 66:     (INTCONbits.GIEL = 1);
  1265   0000E8  8CF2               	bsf	242,6,c	;volatile
  1266   0000EA                     
  1267                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  1268   0000EA  8CF2               	bsf	242,6,c	;volatile
  1269                           
  1270                           ;main.c: 71:         DATAEE_WriteByte(0x10,Input_temp/10);
  1271   0000EC  0E00               	movlw	0
  1272   0000EE  0100               	movlb	0	; () banked
  1273   0000F0  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1274   0000F2  0E10               	movlw	16
  1275   0000F4  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1276   0000F6  C04A  F09C         	movff	_Input_temp,___awdiv@dividend
  1277   0000FA  6B9D               	clrf	(___awdiv@dividend+1)& (0+255),b
  1278   0000FC  0E00               	movlw	0
  1279   0000FE  6F9F               	movwf	(___awdiv@divisor+1)& (0+255),b
  1280   000100  0E0A               	movlw	10
  1281   000102  6F9E               	movwf	___awdiv@divisor& (0+255),b
  1282   000104  ECD4  F00A         	call	___awdiv	;wreg free
  1283   000108  0100               	movlb	0	; () banked
  1284   00010A  519C               	movf	?___awdiv& (0+255),w,b
  1285   00010C  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  1286   00010E  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1287                           
  1288                           ;main.c: 72:         DATAEE_WriteByte(0x11,Input_temp%10);
  1289   000112  0E00               	movlw	0
  1290   000114  0100               	movlb	0	; () banked
  1291   000116  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1292   000118  0E11               	movlw	17
  1293   00011A  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1294   00011C  C04A  F09C         	movff	_Input_temp,___awmod@dividend
  1295   000120  6B9D               	clrf	(___awmod@dividend+1)& (0+255),b
  1296   000122  0E00               	movlw	0
  1297   000124  6F9F               	movwf	(___awmod@divisor+1)& (0+255),b
  1298   000126  0E0A               	movlw	10
  1299   000128  6F9E               	movwf	___awmod@divisor& (0+255),b
  1300   00012A  ECF9  F00B         	call	___awmod	;wreg free
  1301   00012E  0100               	movlb	0	; () banked
  1302   000130  519C               	movf	?___awmod& (0+255),w,b
  1303   000132  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  1304   000134  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1305                           
  1306                           ;main.c: 73:         ON_counter= DATAEE_ReadByte(0x00);
  1307   000138  0E00               	movlw	0
  1308   00013A  0100               	movlb	0	; () banked
  1309   00013C  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1310   00013E  0E00               	movlw	0
  1311   000140  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1312   000142  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1313   000146  6E1E               	movwf	_ON_counter^0,c
  1314   000148                     
  1315                           ;main.c: 74:         if(ON_counter == 0){
  1316   000148  501E               	movf	_ON_counter^0,w,c
  1317   00014A  A4D8               	btfss	status,2,c
  1318   00014C  EFAA  F000         	goto	u4491
  1319   000150  EFAC  F000         	goto	u4490
  1320   000154                     u4491:
  1321   000154  EF7F  F001         	goto	l6669
  1322   000158                     u4490:
  1323   000158                     
  1324                           ;main.c: 76:             _delay((unsigned long)((2000)*(16000000/4000.0)));
  1325   000158  0E29               	movlw	41
  1326   00015A  0100               	movlb	0	; () banked
  1327   00015C  6FAB               	movwf	(??_main+1)& (0+255),b
  1328   00015E  0E96               	movlw	150
  1329   000160  6FAA               	movwf	??_main& (0+255),b
  1330   000162  0E7F               	movlw	127
  1331   000164                     u5617:
  1332   000164  2EE8               	decfsz	wreg,f,c
  1333   000166  D7FE               	bra	u5617
  1334   000168  2FAA               	decfsz	??_main& (0+255),f,b
  1335   00016A  D7FC               	bra	u5617
  1336   00016C  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1337   00016E  D7FA               	bra	u5617
  1338   000170                     
  1339                           ;main.c: 77:             LCD_clearscreen();
  1340   000170  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1341   000174                     
  1342                           ;main.c: 78:             LCD_vSend_string("Login for");
  1343   000174  0ED5               	movlw	low STR_2
  1344   000176  0100               	movlb	0	; () banked
  1345   000178  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1346   00017A  0EFF               	movlw	high STR_2
  1347   00017C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1348   00017E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1349   000182                     
  1350                           ;main.c: 79:             LCD_movecursor(2,1);
  1351   000182  0E01               	movlw	1
  1352   000184  0100               	movlb	0	; () banked
  1353   000186  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1354   000188  0E02               	movlw	2
  1355   00018A  ECF6  F00C         	call	_LCD_movecursor
  1356   00018E                     
  1357                           ;main.c: 80:             LCD_vSend_string("first time");
  1358   00018E  0EBF               	movlw	low STR_3
  1359   000190  0100               	movlb	0	; () banked
  1360   000192  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1361   000194  0EFF               	movlw	high STR_3
  1362   000196  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1363   000198  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1364                           
  1365                           ;main.c: 81:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1366   00019C  0E15               	movlw	21
  1367   00019E  0100               	movlb	0	; () banked
  1368   0001A0  6FAB               	movwf	(??_main+1)& (0+255),b
  1369   0001A2  0E4B               	movlw	75
  1370   0001A4  6FAA               	movwf	??_main& (0+255),b
  1371   0001A6  0EBE               	movlw	190
  1372   0001A8                     u5627:
  1373   0001A8  2EE8               	decfsz	wreg,f,c
  1374   0001AA  D7FE               	bra	u5627
  1375   0001AC  2FAA               	decfsz	??_main& (0+255),f,b
  1376   0001AE  D7FC               	bra	u5627
  1377   0001B0  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1378   0001B2  D7FA               	bra	u5627
  1379   0001B4  F000               	nop	
  1380   0001B6                     
  1381                           ;main.c: 82:             LCD_clearscreen();
  1382   0001B6  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1383   0001BA                     
  1384                           ;main.c: 83:             LCD_vSend_string("Set guest pass");
  1385   0001BA  0E25               	movlw	low STR_4
  1386   0001BC  0100               	movlb	0	; () banked
  1387   0001BE  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1388   0001C0  0EFF               	movlw	high STR_4
  1389   0001C2  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1390   0001C4  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1391   0001C8                     
  1392                           ;main.c: 84:             LCD_movecursor(2,1);
  1393   0001C8  0E01               	movlw	1
  1394   0001CA  0100               	movlb	0	; () banked
  1395   0001CC  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1396   0001CE  0E02               	movlw	2
  1397   0001D0  ECF6  F00C         	call	_LCD_movecursor
  1398   0001D4                     
  1399                           ;main.c: 85:             LCD_vSend_string("Guest Pass:");
  1400   0001D4  0E79               	movlw	low STR_5
  1401   0001D6  0100               	movlb	0	; () banked
  1402   0001D8  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1403   0001DA  0EFF               	movlw	high STR_5
  1404   0001DC  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1405   0001DE  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1406                           
  1407                           ;main.c: 87:             while (pass_counter<4)
  1408   0001E2  EF30  F001         	goto	l6655
  1409   0001E6                     l947:
  1410                           
  1411                           ;main.c: 88:             {;main.c: 89:                 pressed_button = 0xFF;
  1412   0001E6  6849               	setf	_pressed_button^0,c
  1413                           
  1414                           ;main.c: 90:                 while (pressed_button == 0xFF)
  1415   0001E8  EFF9  F000         	goto	l6639
  1416   0001EC                     l6637:
  1417                           
  1418                           ;main.c: 91:                 {;main.c: 92:                     pressed_button = keypad_g
      +                          et_value();
  1419   0001EC  EC60  F00A         	call	_keypad_get_value	;wreg free
  1420   0001F0  6E49               	movwf	_pressed_button^0,c
  1421   0001F2                     l6639:
  1422                           
  1423                           ;main.c: 90:                 while (pressed_button == 0xFF)
  1424   0001F2  2849               	incf	_pressed_button^0,w,c
  1425   0001F4  B4D8               	btfsc	status,2,c
  1426   0001F6  EFFF  F000         	goto	u4501
  1427   0001FA  EF01  F001         	goto	u4500
  1428   0001FE                     u4501:
  1429   0001FE  EFF6  F000         	goto	l6637
  1430   000202                     u4500:
  1431   000202                     
  1432                           ;main.c: 94:                 Full_Password[pass_counter]= pressed_button;
  1433   000202  0E40               	movlw	low _Full_Password
  1434   000204  241D               	addwf	_pass_counter^0,w,c
  1435   000206  6ED9               	movwf	fsr2l,c
  1436   000208  6ADA               	clrf	fsr2h,c
  1437   00020A  0E00               	movlw	high _Full_Password
  1438   00020C  22DA               	addwfc	fsr2h,f,c
  1439   00020E  C049  FFDF         	movff	_pressed_button,indf2
  1440   000212                     
  1441                           ;main.c: 95:                 LCD_vSend_char(pressed_button);
  1442   000212  5049               	movf	_pressed_button^0,w,c
  1443   000214  EC1E  F011         	call	_LCD_vSend_char
  1444   000218                     
  1445                           ;main.c: 96:                 _delay((unsigned long)(((uint16_t)300)*(16000000/4000.0)));
  1446   000218  0E07               	movlw	7
  1447   00021A  0100               	movlb	0	; () banked
  1448   00021C  6FAB               	movwf	(??_main+1)& (0+255),b
  1449   00021E  0E17               	movlw	23
  1450   000220  6FAA               	movwf	??_main& (0+255),b
  1451   000222  0E6A               	movlw	106
  1452   000224                     u5637:
  1453   000224  2EE8               	decfsz	wreg,f,c
  1454   000226  D7FE               	bra	u5637
  1455   000228  2FAA               	decfsz	??_main& (0+255),f,b
  1456   00022A  D7FC               	bra	u5637
  1457   00022C  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1458   00022E  D7FA               	bra	u5637
  1459   000230  F000               	nop	
  1460   000232                     
  1461                           ;main.c: 97:                 LCD_movecursor(2,12+pass_counter);
  1462   000232  501D               	movf	_pass_counter^0,w,c
  1463   000234  0F0C               	addlw	12
  1464   000236  0100               	movlb	0	; () banked
  1465   000238  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1466   00023A  0E02               	movlw	2
  1467   00023C  ECF6  F00C         	call	_LCD_movecursor
  1468   000240                     
  1469                           ;main.c: 98:                 LCD_vSend_char((uint8_t)'*');
  1470   000240  0E2A               	movlw	42
  1471   000242  EC1E  F011         	call	_LCD_vSend_char
  1472   000246                     
  1473                           ;main.c: 99:                 _delay((unsigned long)((100)*(16000000/4000.0)));
  1474   000246  0E03               	movlw	3
  1475   000248  0100               	movlb	0	; () banked
  1476   00024A  6FAB               	movwf	(??_main+1)& (0+255),b
  1477   00024C  0E08               	movlw	8
  1478   00024E  6FAA               	movwf	??_main& (0+255),b
  1479   000250  0E77               	movlw	119
  1480   000252                     u5647:
  1481   000252  2EE8               	decfsz	wreg,f,c
  1482   000254  D7FE               	bra	u5647
  1483   000256  2FAA               	decfsz	??_main& (0+255),f,b
  1484   000258  D7FC               	bra	u5647
  1485   00025A  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1486   00025C  D7FA               	bra	u5647
  1487   00025E                     
  1488                           ;main.c: 100:                 pass_counter++;
  1489   00025E  2A1D               	incf	_pass_counter^0,f,c
  1490   000260                     l6655:
  1491                           
  1492                           ;main.c: 87:             while (pass_counter<4)
  1493   000260  0E03               	movlw	3
  1494   000262  641D               	cpfsgt	_pass_counter^0,c
  1495   000264  EF36  F001         	goto	u4511
  1496   000268  EF38  F001         	goto	u4510
  1497   00026C                     u4511:
  1498   00026C  EFF3  F000         	goto	l947
  1499   000270                     u4510:
  1500   000270                     
  1501                           ;main.c: 104:             DATAEE_WriteByte(0x08,Full_Password[0]);
  1502   000270  0E00               	movlw	0
  1503   000272  0100               	movlb	0	; () banked
  1504   000274  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1505   000276  0E08               	movlw	8
  1506   000278  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1507   00027A  C040  F0A6         	movff	_Full_Password,DATAEE_WriteByte@bData
  1508   00027E  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1509                           
  1510                           ;main.c: 105:             DATAEE_WriteByte(0x09,Full_Password[1]);
  1511   000282  0E00               	movlw	0
  1512   000284  0100               	movlb	0	; () banked
  1513   000286  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1514   000288  0E09               	movlw	9
  1515   00028A  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1516   00028C  C041  F0A6         	movff	_Full_Password+1,DATAEE_WriteByte@bData
  1517   000290  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1518                           
  1519                           ;main.c: 106:             DATAEE_WriteByte(0x0A,Full_Password[2]);
  1520   000294  0E00               	movlw	0
  1521   000296  0100               	movlb	0	; () banked
  1522   000298  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1523   00029A  0E0A               	movlw	10
  1524   00029C  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1525   00029E  C042  F0A6         	movff	_Full_Password+2,DATAEE_WriteByte@bData
  1526   0002A2  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1527                           
  1528                           ;main.c: 107:             DATAEE_WriteByte(0x0B,Full_Password[3]);
  1529   0002A6  0E00               	movlw	0
  1530   0002A8  0100               	movlb	0	; () banked
  1531   0002AA  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1532   0002AC  0E0B               	movlw	11
  1533   0002AE  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1534   0002B0  C043  F0A6         	movff	_Full_Password+3,DATAEE_WriteByte@bData
  1535   0002B4  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1536                           
  1537                           ;main.c: 108:             LCD_clearscreen();
  1538   0002B8  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1539   0002BC                     
  1540                           ;main.c: 109:             LCD_vSend_string("Pass Saved");
  1541   0002BC  0EB4               	movlw	low STR_6
  1542   0002BE  0100               	movlb	0	; () banked
  1543   0002C0  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1544   0002C2  0EFF               	movlw	high STR_6
  1545   0002C4  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1546   0002C6  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1547   0002CA                     
  1548                           ;main.c: 110:             _delay((unsigned long)((500)*(16000000/4000.0)));
  1549   0002CA  0E0B               	movlw	11
  1550   0002CC  0100               	movlb	0	; () banked
  1551   0002CE  6FAB               	movwf	(??_main+1)& (0+255),b
  1552   0002D0  0E26               	movlw	38
  1553   0002D2  6FAA               	movwf	??_main& (0+255),b
  1554   0002D4  0E5D               	movlw	93
  1555   0002D6                     u5657:
  1556   0002D6  2EE8               	decfsz	wreg,f,c
  1557   0002D8  D7FE               	bra	u5657
  1558   0002DA  2FAA               	decfsz	??_main& (0+255),f,b
  1559   0002DC  D7FC               	bra	u5657
  1560   0002DE  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1561   0002E0  D7FA               	bra	u5657
  1562   0002E2  F000 F000          	nop2	
  1563   0002E6                     
  1564                           ;main.c: 111:             LCD_clearscreen();
  1565   0002E6  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1566   0002EA                     
  1567                           ;main.c: 112:             ON_counter++;
  1568   0002EA  2A1E               	incf	_ON_counter^0,f,c
  1569   0002EC                     
  1570                           ;main.c: 113:             DATAEE_WriteByte(0x00,ON_counter);
  1571   0002EC  0E00               	movlw	0
  1572   0002EE  0100               	movlb	0	; () banked
  1573   0002F0  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  1574   0002F2  0E00               	movlw	0
  1575   0002F4  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  1576   0002F6  C01E  F0A6         	movff	_ON_counter,DATAEE_WriteByte@bData
  1577   0002FA  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  1578   0002FE                     l6669:
  1579                           
  1580                           ;main.c: 126:     {;main.c: 127:     _delay((unsigned long)((1500)*(16000000/4000.0)));
  1581   0002FE  0E1F               	movlw	31
  1582   000300  0100               	movlb	0	; () banked
  1583   000302  6FAB               	movwf	(??_main+1)& (0+255),b
  1584   000304  0E71               	movlw	113
  1585   000306  6FAA               	movwf	??_main& (0+255),b
  1586   000308  0E1E               	movlw	30
  1587   00030A                     u5667:
  1588   00030A  2EE8               	decfsz	wreg,f,c
  1589   00030C  D7FE               	bra	u5667
  1590   00030E  2FAA               	decfsz	??_main& (0+255),f,b
  1591   000310  D7FC               	bra	u5667
  1592   000312  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1593   000314  D7FA               	bra	u5667
  1594   000316  F000               	nop	
  1595   000318                     
  1596                           ;main.c: 138:     if(pressed_button == 'N' || first_time==0){
  1597   000318  0E4E               	movlw	78
  1598   00031A  1849               	xorwf	_pressed_button^0,w,c
  1599   00031C  B4D8               	btfsc	status,2,c
  1600   00031E  EF93  F001         	goto	u4521
  1601   000322  EF95  F001         	goto	u4520
  1602   000326                     u4521:
  1603   000326  EF9D  F001         	goto	l955
  1604   00032A                     u4520:
  1605   00032A  500F               	movf	_first_time^0,w,c
  1606   00032C  A4D8               	btfss	status,2,c
  1607   00032E  EF9B  F001         	goto	u4531
  1608   000332  EF9D  F001         	goto	u4530
  1609   000336                     u4531:
  1610   000336  EFA6  F009         	goto	l7373
  1611   00033A                     u4530:
  1612   00033A                     l955:
  1613                           
  1614                           ;main.c: 139:         pressed_button=0xFF;
  1615   00033A  6849               	setf	_pressed_button^0,c
  1616   00033C                     
  1617                           ;main.c: 140:         pass_counter=0;
  1618   00033C  0E00               	movlw	0
  1619   00033E  6E1D               	movwf	_pass_counter^0,c
  1620                           
  1621                           ;main.c: 141:         first_time=1;
  1622   000340  0E01               	movlw	1
  1623   000342  6E0F               	movwf	_first_time^0,c
  1624   000344                     
  1625                           ;main.c: 143:         LCD_vSend_string("Welcome to smart");
  1626   000344  0ED7               	movlw	low STR_7
  1627   000346  0100               	movlb	0	; () banked
  1628   000348  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1629   00034A  0EFE               	movlw	high STR_7
  1630   00034C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1631   00034E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1632   000352                     
  1633                           ;main.c: 144:         LCD_movecursor(2,1);
  1634   000352  0E01               	movlw	1
  1635   000354  0100               	movlb	0	; () banked
  1636   000356  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1637   000358  0E02               	movlw	2
  1638   00035A  ECF6  F00C         	call	_LCD_movecursor
  1639   00035E                     
  1640                           ;main.c: 145:         LCD_vSend_string("home system");
  1641   00035E  0E91               	movlw	low STR_8
  1642   000360  0100               	movlb	0	; () banked
  1643   000362  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1644   000364  0EFF               	movlw	high STR_8
  1645   000366  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1646   000368  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1647   00036C                     
  1648                           ;main.c: 146:         ON_counter= DATAEE_ReadByte(0x00);
  1649   00036C  0E00               	movlw	0
  1650   00036E  0100               	movlb	0	; () banked
  1651   000370  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1652   000372  0E00               	movlw	0
  1653   000374  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1654   000376  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1655   00037A  6E1E               	movwf	_ON_counter^0,c
  1656   00037C                     
  1657                           ;main.c: 147:         _delay((unsigned long)((1500)*(16000000/4000.0)));
  1658   00037C  0E1F               	movlw	31
  1659   00037E  0100               	movlb	0	; () banked
  1660   000380  6FAB               	movwf	(??_main+1)& (0+255),b
  1661   000382  0E71               	movlw	113
  1662   000384  6FAA               	movwf	??_main& (0+255),b
  1663   000386  0E1E               	movlw	30
  1664   000388                     u5677:
  1665   000388  2EE8               	decfsz	wreg,f,c
  1666   00038A  D7FE               	bra	u5677
  1667   00038C  2FAA               	decfsz	??_main& (0+255),f,b
  1668   00038E  D7FC               	bra	u5677
  1669   000390  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1670   000392  D7FA               	bra	u5677
  1671   000394  F000               	nop	
  1672   000396                     
  1673                           ;main.c: 149:   LCD_clearscreen();
  1674   000396  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1675                           
  1676                           ;main.c: 152:         while(Password_Approval==0)
  1677   00039A  EFF9  F002         	goto	l956
  1678   00039E                     l6689:
  1679                           
  1680                           ;main.c: 153:         {;main.c: 155:             LCD_vSend_string("Enter guest pass");
  1681   00039E  0EC6               	movlw	low STR_9
  1682   0003A0  0100               	movlb	0	; () banked
  1683   0003A2  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1684   0003A4  0EFE               	movlw	high STR_9
  1685   0003A6  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1686   0003A8  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1687   0003AC                     
  1688                           ;main.c: 156:             LCD_movecursor(2,1);
  1689   0003AC  0E01               	movlw	1
  1690   0003AE  0100               	movlb	0	; () banked
  1691   0003B0  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1692   0003B2  0E02               	movlw	2
  1693   0003B4  ECF6  F00C         	call	_LCD_movecursor
  1694   0003B8                     
  1695                           ;main.c: 157:             LCD_vSend_string("Guest Pass:");
  1696   0003B8  0E79               	movlw	low STR_5
  1697   0003BA  0100               	movlb	0	; () banked
  1698   0003BC  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1699   0003BE  0EFF               	movlw	high STR_5
  1700   0003C0  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1701   0003C2  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1702                           
  1703                           ;main.c: 159:             while (pass_counter<4)
  1704   0003C6  EF2D  F002         	goto	l6717
  1705   0003CA                     l959:
  1706                           
  1707                           ;main.c: 160:             {;main.c: 161:                 pressed_button = 0xFF;
  1708   0003CA  6849               	setf	_pressed_button^0,c
  1709                           
  1710                           ;main.c: 162:                 while (pressed_button == 0xFF)
  1711   0003CC  EFEB  F001         	goto	l6697
  1712   0003D0                     l6695:
  1713                           
  1714                           ;main.c: 163:                 {;main.c: 164:                     pressed_button = keypad
      +                          _get_value();
  1715   0003D0  EC60  F00A         	call	_keypad_get_value	;wreg free
  1716   0003D4  6E49               	movwf	_pressed_button^0,c
  1717   0003D6                     l6697:
  1718                           
  1719                           ;main.c: 162:                 while (pressed_button == 0xFF)
  1720   0003D6  2849               	incf	_pressed_button^0,w,c
  1721   0003D8  B4D8               	btfsc	status,2,c
  1722   0003DA  EFF1  F001         	goto	u4541
  1723   0003DE  EFF3  F001         	goto	u4540
  1724   0003E2                     u4541:
  1725   0003E2  EFE8  F001         	goto	l6695
  1726   0003E6                     u4540:
  1727   0003E6                     
  1728                           ;main.c: 166:                  if(pressed_button == 'N'){
  1729   0003E6  0E4E               	movlw	78
  1730   0003E8  1849               	xorwf	_pressed_button^0,w,c
  1731   0003EA  A4D8               	btfss	status,2,c
  1732   0003EC  EFFA  F001         	goto	u4551
  1733   0003F0  EFFC  F001         	goto	u4550
  1734   0003F4                     u4551:
  1735   0003F4  EFFE  F001         	goto	l6703
  1736   0003F8                     u4550:
  1737   0003F8  EF35  F002         	goto	l6719
  1738   0003FC                     l6703:
  1739                           
  1740                           ;main.c: 169:                 Password_Check[pass_counter]= pressed_button;
  1741   0003FC  0E3C               	movlw	low _Password_Check
  1742   0003FE  241D               	addwf	_pass_counter^0,w,c
  1743   000400  6ED9               	movwf	fsr2l,c
  1744   000402  6ADA               	clrf	fsr2h,c
  1745   000404  0E00               	movlw	high _Password_Check
  1746   000406  22DA               	addwfc	fsr2h,f,c
  1747   000408  C049  FFDF         	movff	_pressed_button,indf2
  1748   00040C                     
  1749                           ;main.c: 170:                 LCD_vSend_char(pressed_button);
  1750   00040C  5049               	movf	_pressed_button^0,w,c
  1751   00040E  EC1E  F011         	call	_LCD_vSend_char
  1752   000412                     
  1753                           ;main.c: 171:                 _delay((unsigned long)(((uint16_t)300)*(16000000/4000.0)))
      +                          ;
  1754   000412  0E07               	movlw	7
  1755   000414  0100               	movlb	0	; () banked
  1756   000416  6FAB               	movwf	(??_main+1)& (0+255),b
  1757   000418  0E17               	movlw	23
  1758   00041A  6FAA               	movwf	??_main& (0+255),b
  1759   00041C  0E6A               	movlw	106
  1760   00041E                     u5687:
  1761   00041E  2EE8               	decfsz	wreg,f,c
  1762   000420  D7FE               	bra	u5687
  1763   000422  2FAA               	decfsz	??_main& (0+255),f,b
  1764   000424  D7FC               	bra	u5687
  1765   000426  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1766   000428  D7FA               	bra	u5687
  1767   00042A  F000               	nop	
  1768   00042C                     
  1769                           ;main.c: 172:                 LCD_movecursor(2,12+pass_counter);
  1770   00042C  501D               	movf	_pass_counter^0,w,c
  1771   00042E  0F0C               	addlw	12
  1772   000430  0100               	movlb	0	; () banked
  1773   000432  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  1774   000434  0E02               	movlw	2
  1775   000436  ECF6  F00C         	call	_LCD_movecursor
  1776   00043A                     
  1777                           ;main.c: 173:                 LCD_vSend_char((uint8_t)'*');
  1778   00043A  0E2A               	movlw	42
  1779   00043C  EC1E  F011         	call	_LCD_vSend_char
  1780   000440                     
  1781                           ;main.c: 174:                 _delay((unsigned long)((100)*(16000000/4000.0)));
  1782   000440  0E03               	movlw	3
  1783   000442  0100               	movlb	0	; () banked
  1784   000444  6FAB               	movwf	(??_main+1)& (0+255),b
  1785   000446  0E08               	movlw	8
  1786   000448  6FAA               	movwf	??_main& (0+255),b
  1787   00044A  0E77               	movlw	119
  1788   00044C                     u5697:
  1789   00044C  2EE8               	decfsz	wreg,f,c
  1790   00044E  D7FE               	bra	u5697
  1791   000450  2FAA               	decfsz	??_main& (0+255),f,b
  1792   000452  D7FC               	bra	u5697
  1793   000454  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1794   000456  D7FA               	bra	u5697
  1795   000458                     
  1796                           ;main.c: 175:                 pass_counter++;
  1797   000458  2A1D               	incf	_pass_counter^0,f,c
  1798   00045A                     l6717:
  1799                           
  1800                           ;main.c: 159:             while (pass_counter<4)
  1801   00045A  0E03               	movlw	3
  1802   00045C  641D               	cpfsgt	_pass_counter^0,c
  1803   00045E  EF33  F002         	goto	u4561
  1804   000462  EF35  F002         	goto	u4560
  1805   000466                     u4561:
  1806   000466  EFE5  F001         	goto	l959
  1807   00046A                     u4560:
  1808   00046A                     l6719:
  1809                           
  1810                           ;main.c: 177:             if(pressed_button == 'N'){
  1811   00046A  0E4E               	movlw	78
  1812   00046C  1849               	xorwf	_pressed_button^0,w,c
  1813   00046E  A4D8               	btfss	status,2,c
  1814   000470  EF3C  F002         	goto	u4571
  1815   000474  EF3E  F002         	goto	u4570
  1816   000478                     u4571:
  1817   000478  EF40  F002         	goto	l6723
  1818   00047C                     u4570:
  1819   00047C  EF01  F003         	goto	l6777
  1820   000480                     l6723:
  1821                           
  1822                           ;main.c: 180:             if(Password_Check[0] == DATAEE_ReadByte(0x08) && Password_Chec
      +                          k[1]==DATAEE_ReadByte(0x09) && Password_Check[2]==DATAEE_ReadByte(0x0A) && Password_Chec
      +                          k[3]==DATAEE_ReadByte(0x0B))
  1823   000480  0E00               	movlw	0
  1824   000482  0100               	movlb	0	; () banked
  1825   000484  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1826   000486  0E08               	movlw	8
  1827   000488  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1828   00048A  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1829   00048E  183C               	xorwf	_Password_Check^0,w,c
  1830   000490  A4D8               	btfss	status,2,c
  1831   000492  EF4D  F002         	goto	u4581
  1832   000496  EF4F  F002         	goto	u4580
  1833   00049A                     u4581:
  1834   00049A  EF99  F002         	goto	l6741
  1835   00049E                     u4580:
  1836   00049E  0E00               	movlw	0
  1837   0004A0  0100               	movlb	0	; () banked
  1838   0004A2  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1839   0004A4  0E09               	movlw	9
  1840   0004A6  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1841   0004A8  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1842   0004AC  183D               	xorwf	(_Password_Check+1)^0,w,c
  1843   0004AE  A4D8               	btfss	status,2,c
  1844   0004B0  EF5C  F002         	goto	u4591
  1845   0004B4  EF5E  F002         	goto	u4590
  1846   0004B8                     u4591:
  1847   0004B8  EF99  F002         	goto	l6741
  1848   0004BC                     u4590:
  1849   0004BC  0E00               	movlw	0
  1850   0004BE  0100               	movlb	0	; () banked
  1851   0004C0  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1852   0004C2  0E0A               	movlw	10
  1853   0004C4  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1854   0004C6  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1855   0004CA  183E               	xorwf	(_Password_Check+2)^0,w,c
  1856   0004CC  A4D8               	btfss	status,2,c
  1857   0004CE  EF6B  F002         	goto	u4601
  1858   0004D2  EF6D  F002         	goto	u4600
  1859   0004D6                     u4601:
  1860   0004D6  EF99  F002         	goto	l6741
  1861   0004DA                     u4600:
  1862   0004DA  0E00               	movlw	0
  1863   0004DC  0100               	movlb	0	; () banked
  1864   0004DE  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  1865   0004E0  0E0B               	movlw	11
  1866   0004E2  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  1867   0004E4  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  1868   0004E8  183F               	xorwf	(_Password_Check+3)^0,w,c
  1869   0004EA  A4D8               	btfss	status,2,c
  1870   0004EC  EF7A  F002         	goto	u4611
  1871   0004F0  EF7C  F002         	goto	u4610
  1872   0004F4                     u4611:
  1873   0004F4  EF99  F002         	goto	l6741
  1874   0004F8                     u4610:
  1875   0004F8                     
  1876                           ;main.c: 181:             {;main.c: 182:                 LCD_clearscreen();
  1877   0004F8  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1878   0004FC                     
  1879                           ;main.c: 183:                 LCD_vSend_string("Login Approved");
  1880   0004FC  0EF8               	movlw	low STR_11
  1881   0004FE  0100               	movlb	0	; () banked
  1882   000500  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1883   000502  0EFE               	movlw	high STR_11
  1884   000504  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1885   000506  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1886   00050A                     
  1887                           ;main.c: 184:                 _delay((unsigned long)((500)*(16000000/4000.0)));
  1888   00050A  0E0B               	movlw	11
  1889   00050C  0100               	movlb	0	; () banked
  1890   00050E  6FAB               	movwf	(??_main+1)& (0+255),b
  1891   000510  0E26               	movlw	38
  1892   000512  6FAA               	movwf	??_main& (0+255),b
  1893   000514  0E5D               	movlw	93
  1894   000516                     u5707:
  1895   000516  2EE8               	decfsz	wreg,f,c
  1896   000518  D7FE               	bra	u5707
  1897   00051A  2FAA               	decfsz	??_main& (0+255),f,b
  1898   00051C  D7FC               	bra	u5707
  1899   00051E  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1900   000520  D7FA               	bra	u5707
  1901   000522  F000 F000          	nop2	
  1902   000526                     
  1903                           ;main.c: 185:                 LCD_clearscreen();
  1904   000526  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1905   00052A                     
  1906                           ;main.c: 186:                 Password_Approval=1;
  1907   00052A  0E01               	movlw	1
  1908   00052C  6E1B               	movwf	_Password_Approval^0,c
  1909                           
  1910                           ;main.c: 187:             }
  1911   00052E  EFF9  F002         	goto	l956
  1912   000532                     l6741:
  1913                           
  1914                           ;main.c: 189:             {;main.c: 190:                 LCD_clearscreen();
  1915   000532  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1916   000536                     
  1917                           ;main.c: 191:                 LCD_vSend_string("Wrong Password");
  1918   000536  0E07               	movlw	low STR_12
  1919   000538  0100               	movlb	0	; () banked
  1920   00053A  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1921   00053C  0EFF               	movlw	high STR_12
  1922   00053E  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1923   000540  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1924   000544                     
  1925                           ;main.c: 192:                 pass_counter=0;
  1926   000544  0E00               	movlw	0
  1927   000546  6E1D               	movwf	_pass_counter^0,c
  1928   000548                     
  1929                           ;main.c: 193:                 _delay((unsigned long)((500)*(16000000/4000.0)));
  1930   000548  0E0B               	movlw	11
  1931   00054A  0100               	movlb	0	; () banked
  1932   00054C  6FAB               	movwf	(??_main+1)& (0+255),b
  1933   00054E  0E26               	movlw	38
  1934   000550  6FAA               	movwf	??_main& (0+255),b
  1935   000552  0E5D               	movlw	93
  1936   000554                     u5717:
  1937   000554  2EE8               	decfsz	wreg,f,c
  1938   000556  D7FE               	bra	u5717
  1939   000558  2FAA               	decfsz	??_main& (0+255),f,b
  1940   00055A  D7FC               	bra	u5717
  1941   00055C  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  1942   00055E  D7FA               	bra	u5717
  1943   000560  F000 F000          	nop2	
  1944   000564                     
  1945                           ;main.c: 194:                 LCD_clearscreen();
  1946   000564  EC92  F011         	call	_LCD_clearscreen	;wreg free
  1947   000568                     
  1948                           ;main.c: 195:                 if(pass_entry_counter <2){
  1949   000568  0E02               	movlw	2
  1950   00056A  601C               	cpfslt	_pass_entry_counter^0,c
  1951   00056C  EFBA  F002         	goto	u4621
  1952   000570  EFBC  F002         	goto	u4620
  1953   000574                     u4621:
  1954   000574  EFBF  F002         	goto	l6755
  1955   000578                     u4620:
  1956   000578                     
  1957                           ;main.c: 196:                 pass_entry_counter++;
  1958   000578  2A1C               	incf	_pass_entry_counter^0,f,c
  1959                           
  1960                           ;main.c: 197:                 }
  1961   00057A  EFF9  F002         	goto	l956
  1962   00057E                     l6755:
  1963                           
  1964                           ;main.c: 199:                 {;main.c: 200:                     for(int i=0x39;i>0x30;i
      +                          --)
  1965   00057E  0E00               	movlw	0
  1966   000580  0100               	movlb	0	; () banked
  1967   000582  6FAD               	movwf	(main@i+1)& (0+255),b
  1968   000584  0E39               	movlw	57
  1969   000586  6FAC               	movwf	main@i& (0+255),b
  1970   000588                     l6757:
  1971                           
  1972                           ; BSR set to: 0
  1973   000588  BFAD               	btfsc	(main@i+1)& (0+255),7,b
  1974   00058A  EFD2  F002         	goto	u4630
  1975   00058E  51AD               	movf	(main@i+1)& (0+255),w,b
  1976   000590  E107               	bnz	u4631
  1977   000592  0E31               	movlw	49
  1978   000594  5DAC               	subwf	main@i& (0+255),w,b
  1979   000596  B0D8               	btfsc	status,0,c
  1980   000598  EFD0  F002         	goto	u4631
  1981   00059C  EFD2  F002         	goto	u4630
  1982   0005A0                     u4631:
  1983   0005A0  EFD4  F002         	goto	l6761
  1984   0005A4                     u4630:
  1985   0005A4  EFF9  F002         	goto	l956
  1986   0005A8                     l6761:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;main.c: 201:                     {;main.c: 202:                         LCD_vSend_strin
      +                          g("Please wait: ");
  1990   0005A8  0E34               	movlw	low STR_13
  1991   0005AA  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  1992   0005AC  0EFF               	movlw	high STR_13
  1993   0005AE  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  1994   0005B0  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  1995   0005B4                     
  1996                           ;main.c: 203:                         LCD_movecursor(2,4);
  1997   0005B4  0E04               	movlw	4
  1998   0005B6  0100               	movlb	0	; () banked
  1999   0005B8  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2000   0005BA  0E02               	movlw	2
  2001   0005BC  ECF6  F00C         	call	_LCD_movecursor
  2002   0005C0                     
  2003                           ;main.c: 204:                         LCD_vSend_char(i);
  2004   0005C0  0100               	movlb	0	; () banked
  2005   0005C2  51AC               	movf	main@i& (0+255),w,b
  2006   0005C4  EC1E  F011         	call	_LCD_vSend_char
  2007   0005C8                     
  2008                           ;main.c: 205:                         _delay((unsigned long)((1000)*(16000000/4000.0)));
  2009   0005C8  0E15               	movlw	21
  2010   0005CA  0100               	movlb	0	; () banked
  2011   0005CC  6FAB               	movwf	(??_main+1)& (0+255),b
  2012   0005CE  0E4B               	movlw	75
  2013   0005D0  6FAA               	movwf	??_main& (0+255),b
  2014   0005D2  0EBE               	movlw	190
  2015   0005D4                     u5727:
  2016   0005D4  2EE8               	decfsz	wreg,f,c
  2017   0005D6  D7FE               	bra	u5727
  2018   0005D8  2FAA               	decfsz	??_main& (0+255),f,b
  2019   0005DA  D7FC               	bra	u5727
  2020   0005DC  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2021   0005DE  D7FA               	bra	u5727
  2022   0005E0  F000               	nop	
  2023   0005E2                     
  2024                           ;main.c: 206:                         LCD_clearscreen();
  2025   0005E2  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2026   0005E6                     
  2027                           ;main.c: 207:                     }
  2028   0005E6  0100               	movlb	0	; () banked
  2029   0005E8  07AC               	decf	main@i& (0+255),f,b
  2030   0005EA  A0D8               	btfss	status,0,c
  2031   0005EC  07AD               	decf	(main@i+1)& (0+255),f,b
  2032   0005EE  EFC4  F002         	goto	l6757
  2033   0005F2                     l956:
  2034                           
  2035                           ;main.c: 152:         while(Password_Approval==0)
  2036   0005F2  501B               	movf	_Password_Approval^0,w,c
  2037   0005F4  B4D8               	btfsc	status,2,c
  2038   0005F6  EFFF  F002         	goto	u4641
  2039   0005FA  EF01  F003         	goto	u4640
  2040   0005FE                     u4641:
  2041   0005FE  EFCF  F001         	goto	l6689
  2042   000602                     u4640:
  2043   000602                     l6777:
  2044                           
  2045                           ;main.c: 236:       if(pressed_button == 'N'){
  2046   000602  0E4E               	movlw	78
  2047   000604  1849               	xorwf	_pressed_button^0,w,c
  2048   000606  A4D8               	btfss	status,2,c
  2049   000608  EF08  F003         	goto	u4651
  2050   00060C  EF0A  F003         	goto	u4650
  2051   000610                     u4651:
  2052   000610  EF0D  F003         	goto	l6781
  2053   000614                     u4650:
  2054   000614                     l6779:
  2055                           
  2056                           ;main.c: 237:         pressed_button= 0xFF;
  2057   000614  6849               	setf	_pressed_button^0,c
  2058                           
  2059                           ;main.c: 238:       }
  2060   000616  EF7F  F001         	goto	l6669
  2061   00061A                     l973:
  2062   00061A                     l6781:
  2063                           
  2064                           ;main.c: 241:                 TC74_A7_TempValue = TempSensor_TC74_Read_Temp(0x9E);
  2065   00061A  0E9E               	movlw	158
  2066   00061C  ECD7  F010         	call	_TempSensor_TC74_Read_Temp
  2067   000620  6E1F               	movwf	_TC74_A7_TempValue^0,c
  2068   000622                     
  2069                           ;main.c: 242:                 conditioner_state= DATAEE_ReadByte(0x40);
  2070   000622  0E00               	movlw	0
  2071   000624  0100               	movlb	0	; () banked
  2072   000626  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  2073   000628  0E40               	movlw	64
  2074   00062A  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  2075   00062C  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  2076   000630  6E1A               	movwf	_conditioner_state^0,c
  2077   000632                     
  2078                           ;main.c: 243:             if(conditioner_state==0x01 && TC74_A7_TempValue > Input_temp){
  2079   000632  041A               	decf	_conditioner_state^0,w,c
  2080   000634  A4D8               	btfss	status,2,c
  2081   000636  EF1F  F003         	goto	u4661
  2082   00063A  EF21  F003         	goto	u4660
  2083   00063E                     u4661:
  2084   00063E  EF39  F003         	goto	l6795
  2085   000642                     u4660:
  2086   000642  501F               	movf	_TC74_A7_TempValue^0,w,c
  2087   000644  5C4A               	subwf	_Input_temp^0,w,c
  2088   000646  B0D8               	btfsc	status,0,c
  2089   000648  EF28  F003         	goto	u4671
  2090   00064C  EF2A  F003         	goto	u4670
  2091   000650                     u4671:
  2092   000650  EF39  F003         	goto	l6795
  2093   000654                     u4670:
  2094   000654                     
  2095                           ;main.c: 244:                 if(opened_flag==0){
  2096   000654  5019               	movf	_opened_flag^0,w,c
  2097   000656  A4D8               	btfss	status,2,c
  2098   000658  EF30  F003         	goto	u4681
  2099   00065C  EF32  F003         	goto	u4680
  2100   000660                     u4681:
  2101   000660  EF46  F003         	goto	l6801
  2102   000664                     u4680:
  2103   000664                     
  2104                           ;main.c: 245:                 EUSART_Write('G');
  2105   000664  0E47               	movlw	71
  2106   000666  ECFB  F010         	call	_EUSART_Write
  2107   00066A                     
  2108                           ;main.c: 246:                 opened_flag=1;
  2109   00066A  0E01               	movlw	1
  2110   00066C  6E19               	movwf	_opened_flag^0,c
  2111   00066E  EF46  F003         	goto	l6801
  2112   000672                     l6795:
  2113                           
  2114                           ;main.c: 250:                     if(opened_flag==1){
  2115   000672  0419               	decf	_opened_flag^0,w,c
  2116   000674  A4D8               	btfss	status,2,c
  2117   000676  EF3F  F003         	goto	u4691
  2118   00067A  EF41  F003         	goto	u4690
  2119   00067E                     u4691:
  2120   00067E  EF46  F003         	goto	l6801
  2121   000682                     u4690:
  2122   000682                     
  2123                           ;main.c: 251:                     EUSART_Write('F');
  2124   000682  0E46               	movlw	70
  2125   000684  ECFB  F010         	call	_EUSART_Write
  2126   000688                     
  2127                           ;main.c: 252:                     opened_flag=0;
  2128   000688  0E00               	movlw	0
  2129   00068A  6E19               	movwf	_opened_flag^0,c
  2130   00068C                     l6801:
  2131                           
  2132                           ;main.c: 255:             LCD_clearscreen();
  2133   00068C  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2134   000690                     
  2135                           ;main.c: 256:             LCD_vSend_string("1:Room1 2:Room2");
  2136   000690  0EE8               	movlw	low STR_14
  2137   000692  0100               	movlb	0	; () banked
  2138   000694  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2139   000696  0EFE               	movlw	high STR_14
  2140   000698  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2141   00069A  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2142   00069E                     
  2143                           ;main.c: 257:             LCD_movecursor(2,1);
  2144   00069E  0E01               	movlw	1
  2145   0006A0  0100               	movlb	0	; () banked
  2146   0006A2  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2147   0006A4  0E02               	movlw	2
  2148   0006A6  ECF6  F00C         	call	_LCD_movecursor
  2149   0006AA                     
  2150                           ;main.c: 258:             LCD_vSend_string("3:Room3 ON/C:Off");
  2151   0006AA  0EB5               	movlw	low STR_15
  2152   0006AC  0100               	movlb	0	; () banked
  2153   0006AE  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2154   0006B0  0EFE               	movlw	high STR_15
  2155   0006B2  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2156   0006B4  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2157   0006B8                     
  2158                           ;main.c: 259:             pressed_button = 0xFF;
  2159   0006B8  6849               	setf	_pressed_button^0,c
  2160                           
  2161                           ;main.c: 260:             while (pressed_button == 0xFF)
  2162   0006BA  EF62  F003         	goto	l6813
  2163   0006BE                     l6811:
  2164                           
  2165                           ;main.c: 261:             {;main.c: 262:                 pressed_button = keypad_get_val
      +                          ue();
  2166   0006BE  EC60  F00A         	call	_keypad_get_value	;wreg free
  2167   0006C2  6E49               	movwf	_pressed_button^0,c
  2168   0006C4                     l6813:
  2169                           
  2170                           ;main.c: 260:             while (pressed_button == 0xFF)
  2171   0006C4  2849               	incf	_pressed_button^0,w,c
  2172   0006C6  B4D8               	btfsc	status,2,c
  2173   0006C8  EF68  F003         	goto	u4701
  2174   0006CC  EF6A  F003         	goto	u4700
  2175   0006D0                     u4701:
  2176   0006D0  EF5F  F003         	goto	l6811
  2177   0006D4                     u4700:
  2178   0006D4                     
  2179                           ;main.c: 273:             if(pressed_button == '1'){
  2180   0006D4  0E31               	movlw	49
  2181   0006D6  1849               	xorwf	_pressed_button^0,w,c
  2182   0006D8  A4D8               	btfss	status,2,c
  2183   0006DA  EF71  F003         	goto	u4711
  2184   0006DE  EF73  F003         	goto	u4710
  2185   0006E2                     u4711:
  2186   0006E2  EF1A  F006         	goto	l7041
  2187   0006E6                     u4710:
  2188   0006E6                     
  2189                           ;main.c: 275:                 LCD_clearscreen();
  2190   0006E6  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2191   0006EA                     
  2192                           ;main.c: 276:                 _delay((unsigned long)((1000)*(16000000/4000.0)));
  2193   0006EA  0E15               	movlw	21
  2194   0006EC  0100               	movlb	0	; () banked
  2195   0006EE  6FAB               	movwf	(??_main+1)& (0+255),b
  2196   0006F0  0E4B               	movlw	75
  2197   0006F2  6FAA               	movwf	??_main& (0+255),b
  2198   0006F4  0EBE               	movlw	190
  2199   0006F6                     u5737:
  2200   0006F6  2EE8               	decfsz	wreg,f,c
  2201   0006F8  D7FE               	bra	u5737
  2202   0006FA  2FAA               	decfsz	??_main& (0+255),f,b
  2203   0006FC  D7FC               	bra	u5737
  2204   0006FE  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2205   000700  D7FA               	bra	u5737
  2206   000702  F000               	nop	
  2207   000704                     
  2208                           ;main.c: 277:                 LCD_vSend_string("1:Light");
  2209   000704  0EE8               	movlw	low STR_16
  2210   000706  0100               	movlb	0	; () banked
  2211   000708  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2212   00070A  0EFF               	movlw	high STR_16
  2213   00070C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2214   00070E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2215   000712                     
  2216                           ;main.c: 278:                 LCD_movecursor(2,1);
  2217   000712  0E01               	movlw	1
  2218   000714  0100               	movlb	0	; () banked
  2219   000716  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2220   000718  0E02               	movlw	2
  2221   00071A  ECF6  F00C         	call	_LCD_movecursor
  2222   00071E                     
  2223                           ;main.c: 279:                 LCD_vSend_string("2:conditioner");
  2224   00071E  0E5E               	movlw	low STR_17
  2225   000720  0100               	movlb	0	; () banked
  2226   000722  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2227   000724  0EFF               	movlw	high STR_17
  2228   000726  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2229   000728  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2230   00072C                     
  2231                           ;main.c: 280:                 pressed_button = 0xFF;
  2232   00072C  6849               	setf	_pressed_button^0,c
  2233                           
  2234                           ;main.c: 281:                 while (pressed_button == 0xFF)
  2235   00072E  EF9C  F003         	goto	l6831
  2236   000732                     l6829:
  2237                           
  2238                           ;main.c: 282:                 {;main.c: 283:                     pressed_button = keypad
      +                          _get_value();
  2239   000732  EC60  F00A         	call	_keypad_get_value	;wreg free
  2240   000736  6E49               	movwf	_pressed_button^0,c
  2241   000738                     l6831:
  2242                           
  2243                           ;main.c: 281:                 while (pressed_button == 0xFF)
  2244   000738  2849               	incf	_pressed_button^0,w,c
  2245   00073A  B4D8               	btfsc	status,2,c
  2246   00073C  EFA2  F003         	goto	u4721
  2247   000740  EFA4  F003         	goto	u4720
  2248   000744                     u4721:
  2249   000744  EF99  F003         	goto	l6829
  2250   000748                     u4720:
  2251   000748                     
  2252                           ;main.c: 285:                 if(pressed_button == '1')
  2253   000748  0E31               	movlw	49
  2254   00074A  1849               	xorwf	_pressed_button^0,w,c
  2255   00074C  A4D8               	btfss	status,2,c
  2256   00074E  EFAB  F003         	goto	u4731
  2257   000752  EFAD  F003         	goto	u4730
  2258   000756                     u4731:
  2259   000756  EF2E  F004         	goto	l6879
  2260   00075A                     u4730:
  2261   00075A                     
  2262                           ;main.c: 286:                 {;main.c: 287:                     LCD_clearscreen();
  2263   00075A  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2264   00075E                     
  2265                           ;main.c: 288:                     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2266   00075E  0E15               	movlw	21
  2267   000760  0100               	movlb	0	; () banked
  2268   000762  6FAB               	movwf	(??_main+1)& (0+255),b
  2269   000764  0E4B               	movlw	75
  2270   000766  6FAA               	movwf	??_main& (0+255),b
  2271   000768  0EBE               	movlw	190
  2272   00076A                     u5747:
  2273   00076A  2EE8               	decfsz	wreg,f,c
  2274   00076C  D7FE               	bra	u5747
  2275   00076E  2FAA               	decfsz	??_main& (0+255),f,b
  2276   000770  D7FC               	bra	u5747
  2277   000772  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2278   000774  D7FA               	bra	u5747
  2279   000776  F000               	nop	
  2280   000778                     
  2281                           ;main.c: 289:                     LCD_vSend_string("1-On 2-Off");
  2282   000778  0ECA               	movlw	low STR_18
  2283   00077A  0100               	movlb	0	; () banked
  2284   00077C  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2285   00077E  0EFF               	movlw	high STR_18
  2286   000780  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2287   000782  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2288   000786                     
  2289                           ;main.c: 290:                     pressed_button = 0xFF;
  2290   000786  6849               	setf	_pressed_button^0,c
  2291                           
  2292                           ;main.c: 291:                      while (pressed_button == 0xFF)
  2293   000788  EFC9  F003         	goto	l6845
  2294   00078C                     l6843:
  2295                           
  2296                           ;main.c: 292:                     {;main.c: 293:                         pressed_button 
      +                          = keypad_get_value();
  2297   00078C  EC60  F00A         	call	_keypad_get_value	;wreg free
  2298   000790  6E49               	movwf	_pressed_button^0,c
  2299   000792                     l6845:
  2300                           
  2301                           ;main.c: 291:                      while (pressed_button == 0xFF)
  2302   000792  2849               	incf	_pressed_button^0,w,c
  2303   000794  B4D8               	btfsc	status,2,c
  2304   000796  EFCF  F003         	goto	u4741
  2305   00079A  EFD1  F003         	goto	u4740
  2306   00079E                     u4741:
  2307   00079E  EFC6  F003         	goto	l6843
  2308   0007A2                     u4740:
  2309   0007A2                     
  2310                           ;main.c: 295:                     if(pressed_button == '1'){
  2311   0007A2  0E31               	movlw	49
  2312   0007A4  1849               	xorwf	_pressed_button^0,w,c
  2313   0007A6  A4D8               	btfss	status,2,c
  2314   0007A8  EFD8  F003         	goto	u4751
  2315   0007AC  EFDA  F003         	goto	u4750
  2316   0007B0                     u4751:
  2317   0007B0  EFF2  F003         	goto	l6857
  2318   0007B4                     u4750:
  2319   0007B4                     
  2320                           ;main.c: 296:                         if(led1_state==0){
  2321   0007B4  5017               	movf	_led1_state^0,w,c
  2322   0007B6  A4D8               	btfss	status,2,c
  2323   0007B8  EFE0  F003         	goto	u4761
  2324   0007BC  EFE2  F003         	goto	u4760
  2325   0007C0                     u4761:
  2326   0007C0  EF0D  F003         	goto	l6781
  2327   0007C4                     u4760:
  2328   0007C4                     
  2329                           ;main.c: 297:                             led1_state=0x01;
  2330   0007C4  0E01               	movlw	1
  2331   0007C6  6E17               	movwf	_led1_state^0,c
  2332   0007C8                     
  2333                           ;main.c: 298:                             EUSART_Write('A');
  2334   0007C8  0E41               	movlw	65
  2335   0007CA  ECFB  F010         	call	_EUSART_Write
  2336   0007CE                     l6855:
  2337                           
  2338                           ;main.c: 299:                             DATAEE_WriteByte(0x80,led1_state);
  2339   0007CE  0E00               	movlw	0
  2340   0007D0  0100               	movlb	0	; () banked
  2341   0007D2  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  2342   0007D4  0E80               	movlw	128
  2343   0007D6  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  2344   0007D8  C017  F0A6         	movff	_led1_state,DATAEE_WriteByte@bData
  2345   0007DC  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  2346   0007E0  EF0D  F003         	goto	l6781
  2347   0007E4                     l6857:
  2348   0007E4  0E32               	movlw	50
  2349   0007E6  1849               	xorwf	_pressed_button^0,w,c
  2350   0007E8  A4D8               	btfss	status,2,c
  2351   0007EA  EFF9  F003         	goto	u4771
  2352   0007EE  EFFB  F003         	goto	u4770
  2353   0007F2                     u4771:
  2354   0007F2  EF0A  F004         	goto	l6867
  2355   0007F6                     u4770:
  2356   0007F6                     
  2357                           ;main.c: 304:                         if(led1_state==1){
  2358   0007F6  0417               	decf	_led1_state^0,w,c
  2359   0007F8  A4D8               	btfss	status,2,c
  2360   0007FA  EF01  F004         	goto	u4781
  2361   0007FE  EF03  F004         	goto	u4780
  2362   000802                     u4781:
  2363   000802  EF0D  F003         	goto	l973
  2364   000806                     u4780:
  2365   000806                     
  2366                           ;main.c: 305:                             EUSART_Write('Z');
  2367   000806  0E5A               	movlw	90
  2368   000808  ECFB  F010         	call	_EUSART_Write
  2369   00080C                     
  2370                           ;main.c: 306:                             led1_state=0x00;
  2371   00080C  0E00               	movlw	0
  2372   00080E  6E17               	movwf	_led1_state^0,c
  2373   000810  EFE7  F003         	goto	l6855
  2374   000814                     l6867:
  2375   000814  0E4E               	movlw	78
  2376   000816  1849               	xorwf	_pressed_button^0,w,c
  2377   000818  A4D8               	btfss	status,2,c
  2378   00081A  EF11  F004         	goto	u4791
  2379   00081E  EF13  F004         	goto	u4790
  2380   000822                     u4791:
  2381   000822  EF15  F004         	goto	l6873
  2382   000826                     u4790:
  2383   000826  EF0A  F003         	goto	l6779
  2384   00082A                     l6873:
  2385                           
  2386                           ;main.c: 315:                     {;main.c: 316:                         LCD_clearscreen
      +                          ();
  2387   00082A  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2388   00082E                     
  2389                           ;main.c: 317:                         LCD_vSend_string("Wrong input");
  2390   00082E  0E9D               	movlw	low STR_19
  2391   000830  0100               	movlb	0	; () banked
  2392   000832  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2393   000834  0EFF               	movlw	high STR_19
  2394   000836  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2395   000838  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2396   00083C                     l6877:
  2397                           
  2398                           ;main.c: 318:                         _delay((unsigned long)((500)*(16000000/4000.0)));
  2399   00083C  0E0B               	movlw	11
  2400   00083E  0100               	movlb	0	; () banked
  2401   000840  6FAB               	movwf	(??_main+1)& (0+255),b
  2402   000842  0E26               	movlw	38
  2403   000844  6FAA               	movwf	??_main& (0+255),b
  2404   000846  0E5D               	movlw	93
  2405   000848                     u5757:
  2406   000848  2EE8               	decfsz	wreg,f,c
  2407   00084A  D7FE               	bra	u5757
  2408   00084C  2FAA               	decfsz	??_main& (0+255),f,b
  2409   00084E  D7FC               	bra	u5757
  2410   000850  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2411   000852  D7FA               	bra	u5757
  2412   000854  F000 F000          	nop2	
  2413                           
  2414                           ;main.c: 319:                         continue;
  2415   000858  EF0D  F003         	goto	l6781
  2416   00085C                     l6879:
  2417   00085C  0E4E               	movlw	78
  2418   00085E  1849               	xorwf	_pressed_button^0,w,c
  2419   000860  A4D8               	btfss	status,2,c
  2420   000862  EF35  F004         	goto	u4801
  2421   000866  EF37  F004         	goto	u4800
  2422   00086A                     u4801:
  2423   00086A  EF39  F004         	goto	l6885
  2424   00086E                     u4800:
  2425   00086E  EF0A  F003         	goto	l6779
  2426   000872                     l6885:
  2427   000872  0E32               	movlw	50
  2428   000874  1849               	xorwf	_pressed_button^0,w,c
  2429   000876  A4D8               	btfss	status,2,c
  2430   000878  EF40  F004         	goto	u4811
  2431   00087C  EF42  F004         	goto	u4810
  2432   000880                     u4811:
  2433   000880  EF0F  F006         	goto	l7035
  2434   000884                     u4810:
  2435   000884                     
  2436                           ;main.c: 327:                      LCD_clearscreen();
  2437   000884  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2438   000888                     
  2439                           ;main.c: 328:                       _delay((unsigned long)((500)*(16000000/4000.0)));
  2440   000888  0E0B               	movlw	11
  2441   00088A  0100               	movlb	0	; () banked
  2442   00088C  6FAB               	movwf	(??_main+1)& (0+255),b
  2443   00088E  0E26               	movlw	38
  2444   000890  6FAA               	movwf	??_main& (0+255),b
  2445   000892  0E5D               	movlw	93
  2446   000894                     u5767:
  2447   000894  2EE8               	decfsz	wreg,f,c
  2448   000896  D7FE               	bra	u5767
  2449   000898  2FAA               	decfsz	??_main& (0+255),f,b
  2450   00089A  D7FC               	bra	u5767
  2451   00089C  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2452   00089E  D7FA               	bra	u5767
  2453   0008A0  F000 F000          	nop2	
  2454   0008A4                     
  2455                           ;main.c: 329:                     LCD_vSend_string("1:Control 2:state");
  2456   0008A4  0E7F               	movlw	low STR_20
  2457   0008A6  0100               	movlb	0	; () banked
  2458   0008A8  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2459   0008AA  0EFE               	movlw	high STR_20
  2460   0008AC  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2461   0008AE  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2462   0008B2                     
  2463                           ;main.c: 330:                     LCD_movecursor(2,1);
  2464   0008B2  0E01               	movlw	1
  2465   0008B4  0100               	movlb	0	; () banked
  2466   0008B6  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2467   0008B8  0E02               	movlw	2
  2468   0008BA  ECF6  F00C         	call	_LCD_movecursor
  2469   0008BE                     
  2470                           ;main.c: 331:                     LCD_vSend_string("3-Set temperature");
  2471   0008BE  0E6D               	movlw	low STR_21
  2472   0008C0  0100               	movlb	0	; () banked
  2473   0008C2  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2474   0008C4  0EFE               	movlw	high STR_21
  2475   0008C6  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2476   0008C8  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2477   0008CC                     
  2478                           ;main.c: 332:                     pressed_button = 0xFF;
  2479   0008CC  6849               	setf	_pressed_button^0,c
  2480                           
  2481                           ;main.c: 333:                      while (pressed_button == 0xFF)
  2482   0008CE  EF6C  F004         	goto	l6901
  2483   0008D2                     l6899:
  2484                           
  2485                           ;main.c: 334:                     {;main.c: 335:                         pressed_button 
      +                          = keypad_get_value();
  2486   0008D2  EC60  F00A         	call	_keypad_get_value	;wreg free
  2487   0008D6  6E49               	movwf	_pressed_button^0,c
  2488   0008D8                     l6901:
  2489                           
  2490                           ;main.c: 333:                      while (pressed_button == 0xFF)
  2491   0008D8  2849               	incf	_pressed_button^0,w,c
  2492   0008DA  B4D8               	btfsc	status,2,c
  2493   0008DC  EF72  F004         	goto	u4821
  2494   0008E0  EF74  F004         	goto	u4820
  2495   0008E4                     u4821:
  2496   0008E4  EF69  F004         	goto	l6899
  2497   0008E8                     u4820:
  2498   0008E8                     
  2499                           ;main.c: 337:                     if(pressed_button == '1'){
  2500   0008E8  0E31               	movlw	49
  2501   0008EA  1849               	xorwf	_pressed_button^0,w,c
  2502   0008EC  A4D8               	btfss	status,2,c
  2503   0008EE  EF7B  F004         	goto	u4831
  2504   0008F2  EF7D  F004         	goto	u4830
  2505   0008F6                     u4831:
  2506   0008F6  EFF3  F004         	goto	l6945
  2507   0008FA                     u4830:
  2508   0008FA                     
  2509                           ;main.c: 338:                              LCD_clearscreen();
  2510   0008FA  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2511   0008FE                     
  2512                           ;main.c: 339:                             _delay((unsigned long)((1000)*(16000000/4000.0
      +                          )));
  2513   0008FE  0E15               	movlw	21
  2514   000900  0100               	movlb	0	; () banked
  2515   000902  6FAB               	movwf	(??_main+1)& (0+255),b
  2516   000904  0E4B               	movlw	75
  2517   000906  6FAA               	movwf	??_main& (0+255),b
  2518   000908  0EBE               	movlw	190
  2519   00090A                     u5777:
  2520   00090A  2EE8               	decfsz	wreg,f,c
  2521   00090C  D7FE               	bra	u5777
  2522   00090E  2FAA               	decfsz	??_main& (0+255),f,b
  2523   000910  D7FC               	bra	u5777
  2524   000912  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2525   000914  D7FA               	bra	u5777
  2526   000916  F000               	nop	
  2527   000918                     
  2528                           ;main.c: 341:                             LCD_vSend_string("1- On 2-Off");
  2529   000918  0E85               	movlw	low STR_22
  2530   00091A  0100               	movlb	0	; () banked
  2531   00091C  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2532   00091E  0EFF               	movlw	high STR_22
  2533   000920  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2534   000922  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2535   000926                     
  2536                           ;main.c: 342:                             pressed_button = 0xFF;
  2537   000926  6849               	setf	_pressed_button^0,c
  2538                           
  2539                           ;main.c: 343:                             while (pressed_button == 0xFF)
  2540   000928  EF99  F004         	goto	l6915
  2541   00092C                     l6913:
  2542                           
  2543                           ;main.c: 344:                            {;main.c: 345:                                p
      +                          ressed_button = keypad_get_value();
  2544   00092C  EC60  F00A         	call	_keypad_get_value	;wreg free
  2545   000930  6E49               	movwf	_pressed_button^0,c
  2546   000932                     l6915:
  2547                           
  2548                           ;main.c: 343:                             while (pressed_button == 0xFF)
  2549   000932  2849               	incf	_pressed_button^0,w,c
  2550   000934  B4D8               	btfsc	status,2,c
  2551   000936  EF9F  F004         	goto	u4841
  2552   00093A  EFA1  F004         	goto	u4840
  2553   00093E                     u4841:
  2554   00093E  EF96  F004         	goto	l6913
  2555   000942                     u4840:
  2556   000942                     
  2557                           ;main.c: 347:                             if(pressed_button == '1'){
  2558   000942  0E31               	movlw	49
  2559   000944  1849               	xorwf	_pressed_button^0,w,c
  2560   000946  A4D8               	btfss	status,2,c
  2561   000948  EFA8  F004         	goto	u4851
  2562   00094C  EFAA  F004         	goto	u4850
  2563   000950                     u4851:
  2564   000950  EFBF  F004         	goto	l6925
  2565   000954                     u4850:
  2566   000954                     
  2567                           ;main.c: 348:                                 if(conditioner_state==0){
  2568   000954  501A               	movf	_conditioner_state^0,w,c
  2569   000956  A4D8               	btfss	status,2,c
  2570   000958  EFB0  F004         	goto	u4861
  2571   00095C  EFB2  F004         	goto	u4860
  2572   000960                     u4861:
  2573   000960  EF0D  F003         	goto	l6781
  2574   000964                     u4860:
  2575   000964                     
  2576                           ;main.c: 349:                                     conditioner_state=1;
  2577   000964  0E01               	movlw	1
  2578   000966  6E1A               	movwf	_conditioner_state^0,c
  2579   000968                     
  2580                           ;main.c: 350:                                     DATAEE_WriteByte(0x40,0x01);
  2581   000968  0E00               	movlw	0
  2582   00096A  0100               	movlb	0	; () banked
  2583   00096C  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  2584   00096E  0E40               	movlw	64
  2585   000970  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  2586   000972  0E01               	movlw	1
  2587   000974  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  2588   000976  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  2589   00097A  EF0D  F003         	goto	l6781
  2590   00097E                     l6925:
  2591   00097E  0E32               	movlw	50
  2592   000980  1849               	xorwf	_pressed_button^0,w,c
  2593   000982  A4D8               	btfss	status,2,c
  2594   000984  EFC6  F004         	goto	u4871
  2595   000988  EFC8  F004         	goto	u4870
  2596   00098C                     u4871:
  2597   00098C  EFDD  F004         	goto	l6933
  2598   000990                     u4870:
  2599   000990                     
  2600                           ;main.c: 355:                                  if(conditioner_state==1){
  2601   000990  041A               	decf	_conditioner_state^0,w,c
  2602   000992  A4D8               	btfss	status,2,c
  2603   000994  EFCE  F004         	goto	u4881
  2604   000998  EFD0  F004         	goto	u4880
  2605   00099C                     u4881:
  2606   00099C  EF0D  F003         	goto	l973
  2607   0009A0                     u4880:
  2608   0009A0                     
  2609                           ;main.c: 356:                                 conditioner_state=0;
  2610   0009A0  0E00               	movlw	0
  2611   0009A2  6E1A               	movwf	_conditioner_state^0,c
  2612   0009A4                     
  2613                           ;main.c: 357:                                 DATAEE_WriteByte(0x40,0x00);
  2614   0009A4  0E00               	movlw	0
  2615   0009A6  0100               	movlb	0	; () banked
  2616   0009A8  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  2617   0009AA  0E40               	movlw	64
  2618   0009AC  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  2619   0009AE  0E00               	movlw	0
  2620   0009B0  6FA6               	movwf	DATAEE_WriteByte@bData& (0+255),b
  2621   0009B2  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  2622   0009B6  EF0D  F003         	goto	l6781
  2623   0009BA                     l6933:
  2624   0009BA  0E4E               	movlw	78
  2625   0009BC  1849               	xorwf	_pressed_button^0,w,c
  2626   0009BE  A4D8               	btfss	status,2,c
  2627   0009C0  EFE4  F004         	goto	u4891
  2628   0009C4  EFE6  F004         	goto	u4890
  2629   0009C8                     u4891:
  2630   0009C8  EFE8  F004         	goto	l6939
  2631   0009CC                     u4890:
  2632   0009CC  EF0A  F003         	goto	l6779
  2633   0009D0                     l6939:
  2634                           
  2635                           ;main.c: 365:                             LCD_clearscreen();
  2636   0009D0  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2637   0009D4                     
  2638                           ;main.c: 366:                             LCD_vSend_string("Wrong input");
  2639   0009D4  0E9D               	movlw	low STR_19
  2640   0009D6  0100               	movlb	0	; () banked
  2641   0009D8  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2642   0009DA  0EFF               	movlw	high STR_19
  2643   0009DC  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2644   0009DE  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2645   0009E2  EF1E  F004         	goto	l6877
  2646   0009E6                     l6945:
  2647   0009E6  0E4E               	movlw	78
  2648   0009E8  1849               	xorwf	_pressed_button^0,w,c
  2649   0009EA  A4D8               	btfss	status,2,c
  2650   0009EC  EFFA  F004         	goto	u4901
  2651   0009F0  EFFC  F004         	goto	u4900
  2652   0009F4                     u4901:
  2653   0009F4  EFFE  F004         	goto	l6951
  2654   0009F8                     u4900:
  2655   0009F8  EF0A  F003         	goto	l6779
  2656   0009FC                     l6951:
  2657   0009FC  0E32               	movlw	50
  2658   0009FE  1849               	xorwf	_pressed_button^0,w,c
  2659   000A00  A4D8               	btfss	status,2,c
  2660   000A02  EF05  F005         	goto	u4911
  2661   000A06  EF07  F005         	goto	u4910
  2662   000A0A                     u4911:
  2663   000A0A  EF51  F005         	goto	l6967
  2664   000A0E                     u4910:
  2665   000A0E                     
  2666                           ;main.c: 376:                         LCD_clearscreen();
  2667   000A0E  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2668   000A12                     
  2669                           ;main.c: 377:                         if(conditioner_state==1){
  2670   000A12  041A               	decf	_conditioner_state^0,w,c
  2671   000A14  A4D8               	btfss	status,2,c
  2672   000A16  EF0F  F005         	goto	u4921
  2673   000A1A  EF11  F005         	goto	u4920
  2674   000A1E                     u4921:
  2675   000A1E  EF3B  F005         	goto	l6963
  2676   000A22                     u4920:
  2677   000A22                     
  2678                           ;main.c: 378:                         LCD_vSend_string("state:ON");
  2679   000A22  0EDF               	movlw	low STR_24
  2680   000A24  0100               	movlb	0	; () banked
  2681   000A26  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2682   000A28  0EFF               	movlw	high STR_24
  2683   000A2A  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2684   000A2C  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2685   000A30                     
  2686                           ;main.c: 379:                         LCD_movecursor(2,1);
  2687   000A30  0E01               	movlw	1
  2688   000A32  0100               	movlb	0	; () banked
  2689   000A34  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2690   000A36  0E02               	movlw	2
  2691   000A38  ECF6  F00C         	call	_LCD_movecursor
  2692   000A3C                     
  2693                           ;main.c: 380:                         LCD_vSend_string("Temp: ");
  2694   000A3C  0EF8               	movlw	low STR_25
  2695   000A3E  0100               	movlb	0	; () banked
  2696   000A40  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2697   000A42  0EFF               	movlw	high STR_25
  2698   000A44  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2699   000A46  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2700                           
  2701                           ;main.c: 381:                         LCD_vSend_char(DATAEE_ReadByte(0x10)+(uint8_t)'0')
      +                          ;
  2702   000A4A  0E00               	movlw	0
  2703   000A4C  0100               	movlb	0	; () banked
  2704   000A4E  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  2705   000A50  0E10               	movlw	16
  2706   000A52  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  2707   000A54  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  2708   000A58  0F30               	addlw	48
  2709   000A5A  EC1E  F011         	call	_LCD_vSend_char
  2710                           
  2711                           ;main.c: 382:                         LCD_vSend_char(DATAEE_ReadByte(0x11)+(uint8_t)'0')
      +                          ;
  2712   000A5E  0E00               	movlw	0
  2713   000A60  0100               	movlb	0	; () banked
  2714   000A62  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  2715   000A64  0E11               	movlw	17
  2716   000A66  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  2717   000A68  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  2718   000A6C  0F30               	addlw	48
  2719   000A6E  EC1E  F011         	call	_LCD_vSend_char
  2720                           
  2721                           ;main.c: 383:                         }
  2722   000A72  EF42  F005         	goto	l6965
  2723   000A76                     l6963:
  2724                           
  2725                           ;main.c: 385:                             LCD_vSend_string("state: OFF");
  2726   000A76  0EA9               	movlw	low STR_26
  2727   000A78  0100               	movlb	0	; () banked
  2728   000A7A  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2729   000A7C  0EFF               	movlw	high STR_26
  2730   000A7E  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2731   000A80  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2732   000A84                     l6965:
  2733                           
  2734                           ;main.c: 387:                         _delay((unsigned long)((1500)*(16000000/4000.0)));
  2735   000A84  0E1F               	movlw	31
  2736   000A86  0100               	movlb	0	; () banked
  2737   000A88  6FAB               	movwf	(??_main+1)& (0+255),b
  2738   000A8A  0E71               	movlw	113
  2739   000A8C  6FAA               	movwf	??_main& (0+255),b
  2740   000A8E  0E1E               	movlw	30
  2741   000A90                     u5787:
  2742   000A90  2EE8               	decfsz	wreg,f,c
  2743   000A92  D7FE               	bra	u5787
  2744   000A94  2FAA               	decfsz	??_main& (0+255),f,b
  2745   000A96  D7FC               	bra	u5787
  2746   000A98  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2747   000A9A  D7FA               	bra	u5787
  2748   000A9C  F000               	nop	
  2749                           
  2750                           ;main.c: 388:                     }
  2751   000A9E  EF0D  F003         	goto	l6781
  2752   000AA2                     l6967:
  2753   000AA2  0E33               	movlw	51
  2754   000AA4  1849               	xorwf	_pressed_button^0,w,c
  2755   000AA6  A4D8               	btfss	status,2,c
  2756   000AA8  EF58  F005         	goto	u4931
  2757   000AAC  EF5A  F005         	goto	u4930
  2758   000AB0                     u4931:
  2759   000AB0  EF0D  F003         	goto	l973
  2760   000AB4                     u4930:
  2761   000AB4                     
  2762                           ;main.c: 390:                     {;main.c: 391:                         LCD_clearscreen
      +                          ();
  2763   000AB4  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2764   000AB8                     
  2765                           ;main.c: 392:                         LCD_vSend_string("Set temp.:__ ");
  2766   000AB8  0E42               	movlw	low STR_27
  2767   000ABA  0100               	movlb	0	; () banked
  2768   000ABC  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2769   000ABE  0EFF               	movlw	high STR_27
  2770   000AC0  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2771   000AC2  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2772   000AC6                     
  2773                           ;main.c: 393:                         LCD_vSend_char((uint8_t)0xDF);
  2774   000AC6  0EDF               	movlw	223
  2775   000AC8  EC1E  F011         	call	_LCD_vSend_char
  2776   000ACC                     
  2777                           ;main.c: 394:                         LCD_vSend_char('C');
  2778   000ACC  0E43               	movlw	67
  2779   000ACE  EC1E  F011         	call	_LCD_vSend_char
  2780   000AD2                     
  2781                           ;main.c: 395:                         LCD_movecursor(1,11);
  2782   000AD2  0E0B               	movlw	11
  2783   000AD4  0100               	movlb	0	; () banked
  2784   000AD6  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  2785   000AD8  0E01               	movlw	1
  2786   000ADA  ECF6  F00C         	call	_LCD_movecursor
  2787   000ADE                     
  2788                           ;main.c: 396:                         _delay((unsigned long)((200)*(16000000/4000.0)));
  2789   000ADE  0E05               	movlw	5
  2790   000AE0  0100               	movlb	0	; () banked
  2791   000AE2  6FAB               	movwf	(??_main+1)& (0+255),b
  2792   000AE4  0E0F               	movlw	15
  2793   000AE6  6FAA               	movwf	??_main& (0+255),b
  2794   000AE8  0EF1               	movlw	241
  2795   000AEA                     u5797:
  2796   000AEA  2EE8               	decfsz	wreg,f,c
  2797   000AEC  D7FE               	bra	u5797
  2798   000AEE  2FAA               	decfsz	??_main& (0+255),f,b
  2799   000AF0  D7FC               	bra	u5797
  2800   000AF2  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2801   000AF4  D7FA               	bra	u5797
  2802   000AF6                     
  2803                           ;main.c: 397:                         pressed_button = 0xFF;
  2804   000AF6  6849               	setf	_pressed_button^0,c
  2805                           
  2806                           ;main.c: 398:                          while (pressed_button == 0xFF)
  2807   000AF8  EF81  F005         	goto	l6985
  2808   000AFC                     l6983:
  2809                           
  2810                           ;main.c: 399:                         {;main.c: 400:                             pressed
      +                          _button = keypad_get_value();
  2811   000AFC  EC60  F00A         	call	_keypad_get_value	;wreg free
  2812   000B00  6E49               	movwf	_pressed_button^0,c
  2813   000B02                     l6985:
  2814                           
  2815                           ;main.c: 398:                          while (pressed_button == 0xFF)
  2816   000B02  2849               	incf	_pressed_button^0,w,c
  2817   000B04  B4D8               	btfsc	status,2,c
  2818   000B06  EF87  F005         	goto	u4941
  2819   000B0A  EF89  F005         	goto	u4940
  2820   000B0E                     u4941:
  2821   000B0E  EF7E  F005         	goto	l6983
  2822   000B12                     u4940:
  2823   000B12                     
  2824                           ;main.c: 402:                         if (pressed_button <'0' || pressed_button >'9' )
  2825   000B12  0E2F               	movlw	47
  2826   000B14  6449               	cpfsgt	_pressed_button^0,c
  2827   000B16  EF8F  F005         	goto	u4951
  2828   000B1A  EF91  F005         	goto	u4950
  2829   000B1E                     u4951:
  2830   000B1E  EF99  F005         	goto	l6991
  2831   000B22                     u4950:
  2832   000B22  0E39               	movlw	57
  2833   000B24  6449               	cpfsgt	_pressed_button^0,c
  2834   000B26  EF97  F005         	goto	u4961
  2835   000B2A  EF99  F005         	goto	u4960
  2836   000B2E                     u4961:
  2837   000B2E  EFA4  F005         	goto	l6999
  2838   000B32                     u4960:
  2839   000B32                     l6991:
  2840                           
  2841                           ;main.c: 403:                         {;main.c: 404:                             LCD_cle
      +                          arscreen();
  2842   000B32  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2843   000B36                     
  2844                           ;main.c: 405:                             LCD_vSend_string("Wrong input");
  2845   000B36  0E9D               	movlw	low STR_19
  2846   000B38  0100               	movlb	0	; () banked
  2847   000B3A  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2848   000B3C  0EFF               	movlw	high STR_19
  2849   000B3E  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2850   000B40  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2851   000B44  EF1E  F004         	goto	l6877
  2852   000B48                     l6999:
  2853                           
  2854                           ;main.c: 410:                             LCD_vSend_char(pressed_button);
  2855   000B48  5049               	movf	_pressed_button^0,w,c
  2856   000B4A  EC1E  F011         	call	_LCD_vSend_char
  2857   000B4E                     
  2858                           ;main.c: 411:                             Input_temp = pressed_button-(uint8_t)'0';
  2859   000B4E  5049               	movf	_pressed_button^0,w,c
  2860   000B50  0FD0               	addlw	208
  2861   000B52  6E4A               	movwf	_Input_temp^0,c
  2862   000B54                     
  2863                           ;main.c: 412:                             pressed_button = 0xFF;;
  2864   000B54  6849               	setf	_pressed_button^0,c
  2865   000B56                     
  2866                           ;main.c: 413:                             DATAEE_WriteByte(0x10, Input_temp);
  2867   000B56  0E00               	movlw	0
  2868   000B58  0100               	movlb	0	; () banked
  2869   000B5A  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  2870   000B5C  0E10               	movlw	16
  2871   000B5E  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  2872   000B60  C04A  F0A6         	movff	_Input_temp,DATAEE_WriteByte@bData
  2873   000B64  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  2874   000B68                     
  2875                           ;main.c: 415:                         _delay((unsigned long)((300)*(16000000/4000.0)));
  2876   000B68  0E07               	movlw	7
  2877   000B6A  0100               	movlb	0	; () banked
  2878   000B6C  6FAB               	movwf	(??_main+1)& (0+255),b
  2879   000B6E  0E17               	movlw	23
  2880   000B70  6FAA               	movwf	??_main& (0+255),b
  2881   000B72  0E6A               	movlw	106
  2882   000B74                     u5807:
  2883   000B74  2EE8               	decfsz	wreg,f,c
  2884   000B76  D7FE               	bra	u5807
  2885   000B78  2FAA               	decfsz	??_main& (0+255),f,b
  2886   000B7A  D7FC               	bra	u5807
  2887   000B7C  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  2888   000B7E  D7FA               	bra	u5807
  2889   000B80  F000               	nop	
  2890                           
  2891                           ;main.c: 417:                         while (pressed_button == 0xFF)
  2892   000B82  EFC6  F005         	goto	l7011
  2893   000B86                     l7009:
  2894                           
  2895                           ;main.c: 418:                         {;main.c: 419:                             pressed
      +                          _button = keypad_get_value();
  2896   000B86  EC60  F00A         	call	_keypad_get_value	;wreg free
  2897   000B8A  6E49               	movwf	_pressed_button^0,c
  2898   000B8C                     l7011:
  2899                           
  2900                           ;main.c: 417:                         while (pressed_button == 0xFF)
  2901   000B8C  2849               	incf	_pressed_button^0,w,c
  2902   000B8E  B4D8               	btfsc	status,2,c
  2903   000B90  EFCC  F005         	goto	u4971
  2904   000B94  EFCE  F005         	goto	u4970
  2905   000B98                     u4971:
  2906   000B98  EFC3  F005         	goto	l7009
  2907   000B9C                     u4970:
  2908   000B9C                     
  2909                           ;main.c: 421:                         if (pressed_button <'0' || pressed_button >'9')
  2910   000B9C  0E2F               	movlw	47
  2911   000B9E  6449               	cpfsgt	_pressed_button^0,c
  2912   000BA0  EFD4  F005         	goto	u4981
  2913   000BA4  EFD6  F005         	goto	u4980
  2914   000BA8                     u4981:
  2915   000BA8  EFDE  F005         	goto	l7017
  2916   000BAC                     u4980:
  2917   000BAC  0E39               	movlw	57
  2918   000BAE  6449               	cpfsgt	_pressed_button^0,c
  2919   000BB0  EFDC  F005         	goto	u4991
  2920   000BB4  EFDE  F005         	goto	u4990
  2921   000BB8                     u4991:
  2922   000BB8  EFE9  F005         	goto	l7025
  2923   000BBC                     u4990:
  2924   000BBC                     l7017:
  2925                           
  2926                           ;main.c: 422:                         {;main.c: 423:                             LCD_cle
      +                          arscreen();
  2927   000BBC  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2928   000BC0                     
  2929                           ;main.c: 424:                             LCD_vSend_string("Wrong input");
  2930   000BC0  0E9D               	movlw	low STR_19
  2931   000BC2  0100               	movlb	0	; () banked
  2932   000BC4  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2933   000BC6  0EFF               	movlw	high STR_19
  2934   000BC8  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2935   000BCA  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2936   000BCE  EF1E  F004         	goto	l6877
  2937   000BD2                     l7025:
  2938                           
  2939                           ;main.c: 429:                             LCD_vSend_char(pressed_button);
  2940   000BD2  5049               	movf	_pressed_button^0,w,c
  2941   000BD4  EC1E  F011         	call	_LCD_vSend_char
  2942   000BD8                     
  2943                           ;main.c: 430:                             Input_temp = pressed_button-(uint8_t)'0';
  2944   000BD8  5049               	movf	_pressed_button^0,w,c
  2945   000BDA  0FD0               	addlw	208
  2946   000BDC  6E4A               	movwf	_Input_temp^0,c
  2947   000BDE                     
  2948                           ;main.c: 431:                             pressed_button = 0xFF;;
  2949   000BDE  6849               	setf	_pressed_button^0,c
  2950   000BE0                     
  2951                           ;main.c: 432:                             DATAEE_WriteByte(0x11, Input_temp);
  2952   000BE0  0E00               	movlw	0
  2953   000BE2  0100               	movlb	0	; () banked
  2954   000BE4  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  2955   000BE6  0E11               	movlw	17
  2956   000BE8  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  2957   000BEA  C04A  F0A6         	movff	_Input_temp,DATAEE_WriteByte@bData
  2958   000BEE  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  2959   000BF2                     
  2960                           ;main.c: 434:                     Input_temp=DATAEE_ReadByte(0x10)*10+ DATAEE_ReadByte(0
      +                          x11);
  2961   000BF2  0E00               	movlw	0
  2962   000BF4  0100               	movlb	0	; () banked
  2963   000BF6  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  2964   000BF8  0E11               	movlw	17
  2965   000BFA  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  2966   000BFC  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  2967   000C00  0100               	movlb	0	; () banked
  2968   000C02  6FAA               	movwf	??_main& (0+255),b
  2969   000C04  0E00               	movlw	0
  2970   000C06  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  2971   000C08  0E10               	movlw	16
  2972   000C0A  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  2973   000C0C  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  2974   000C10  0D0A               	mullw	10
  2975   000C12  50F3               	movf	243,w,c
  2976   000C14  0100               	movlb	0	; () banked
  2977   000C16  25AA               	addwf	??_main& (0+255),w,b
  2978   000C18  6E4A               	movwf	_Input_temp^0,c
  2979   000C1A  EF0D  F003         	goto	l6781
  2980   000C1E                     l7035:
  2981                           
  2982                           ;main.c: 439:                             LCD_clearscreen();
  2983   000C1E  EC92  F011         	call	_LCD_clearscreen	;wreg free
  2984   000C22                     
  2985                           ;main.c: 440:                             LCD_vSend_string("Wrong input");
  2986   000C22  0E9D               	movlw	low STR_19
  2987   000C24  0100               	movlb	0	; () banked
  2988   000C26  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  2989   000C28  0EFF               	movlw	high STR_19
  2990   000C2A  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  2991   000C2C  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  2992   000C30  EF1E  F004         	goto	l6877
  2993   000C34                     l7041:
  2994   000C34  0E32               	movlw	50
  2995   000C36  1849               	xorwf	_pressed_button^0,w,c
  2996   000C38  A4D8               	btfss	status,2,c
  2997   000C3A  EF21  F006         	goto	u5001
  2998   000C3E  EF23  F006         	goto	u5000
  2999   000C42                     u5001:
  3000   000C42  EF4B  F007         	goto	l7153
  3001   000C46                     u5000:
  3002   000C46                     
  3003                           ;main.c: 453:                 LCD_clearscreen();
  3004   000C46  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3005   000C4A                     
  3006                           ;main.c: 454:                 _delay((unsigned long)((1000)*(16000000/4000.0)));
  3007   000C4A  0E15               	movlw	21
  3008   000C4C  0100               	movlb	0	; () banked
  3009   000C4E  6FAB               	movwf	(??_main+1)& (0+255),b
  3010   000C50  0E4B               	movlw	75
  3011   000C52  6FAA               	movwf	??_main& (0+255),b
  3012   000C54  0EBE               	movlw	190
  3013   000C56                     u5817:
  3014   000C56  2EE8               	decfsz	wreg,f,c
  3015   000C58  D7FE               	bra	u5817
  3016   000C5A  2FAA               	decfsz	??_main& (0+255),f,b
  3017   000C5C  D7FC               	bra	u5817
  3018   000C5E  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3019   000C60  D7FA               	bra	u5817
  3020   000C62  F000               	nop	
  3021   000C64                     
  3022                           ;main.c: 455:                 LCD_vSend_string("1:Light 2:Windows");
  3023   000C64  0E91               	movlw	low STR_31
  3024   000C66  0100               	movlb	0	; () banked
  3025   000C68  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3026   000C6A  0EFE               	movlw	high STR_31
  3027   000C6C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3028   000C6E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3029   000C72                     
  3030                           ;main.c: 457:                 pressed_button = 0xFF;
  3031   000C72  6849               	setf	_pressed_button^0,c
  3032                           
  3033                           ;main.c: 458:                 while (pressed_button == 0xFF)
  3034   000C74  EF3F  F006         	goto	l7053
  3035   000C78                     l7051:
  3036                           
  3037                           ;main.c: 459:                 {;main.c: 460:                     pressed_button = keypad
      +                          _get_value();
  3038   000C78  EC60  F00A         	call	_keypad_get_value	;wreg free
  3039   000C7C  6E49               	movwf	_pressed_button^0,c
  3040   000C7E                     l7053:
  3041                           
  3042                           ;main.c: 458:                 while (pressed_button == 0xFF)
  3043   000C7E  2849               	incf	_pressed_button^0,w,c
  3044   000C80  B4D8               	btfsc	status,2,c
  3045   000C82  EF45  F006         	goto	u5011
  3046   000C86  EF47  F006         	goto	u5010
  3047   000C8A                     u5011:
  3048   000C8A  EF3C  F006         	goto	l7051
  3049   000C8E                     u5010:
  3050   000C8E                     
  3051                           ;main.c: 462:                 if(pressed_button == '1')
  3052   000C8E  0E31               	movlw	49
  3053   000C90  1849               	xorwf	_pressed_button^0,w,c
  3054   000C92  A4D8               	btfss	status,2,c
  3055   000C94  EF4E  F006         	goto	u5021
  3056   000C98  EF50  F006         	goto	u5020
  3057   000C9C                     u5021:
  3058   000C9C  EFC3  F006         	goto	l7101
  3059   000CA0                     u5020:
  3060   000CA0                     
  3061                           ;main.c: 463:                 {;main.c: 465:                     LCD_clearscreen();
  3062   000CA0  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3063   000CA4                     
  3064                           ;main.c: 466:                     _delay((unsigned long)((1000)*(16000000/4000.0)));
  3065   000CA4  0E15               	movlw	21
  3066   000CA6  0100               	movlb	0	; () banked
  3067   000CA8  6FAB               	movwf	(??_main+1)& (0+255),b
  3068   000CAA  0E4B               	movlw	75
  3069   000CAC  6FAA               	movwf	??_main& (0+255),b
  3070   000CAE  0EBE               	movlw	190
  3071   000CB0                     u5827:
  3072   000CB0  2EE8               	decfsz	wreg,f,c
  3073   000CB2  D7FE               	bra	u5827
  3074   000CB4  2FAA               	decfsz	??_main& (0+255),f,b
  3075   000CB6  D7FC               	bra	u5827
  3076   000CB8  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3077   000CBA  D7FA               	bra	u5827
  3078   000CBC  F000               	nop	
  3079   000CBE                     
  3080                           ;main.c: 467:                     LCD_vSend_string("1-On 2-Off");
  3081   000CBE  0ECA               	movlw	low STR_18
  3082   000CC0  0100               	movlb	0	; () banked
  3083   000CC2  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3084   000CC4  0EFF               	movlw	high STR_18
  3085   000CC6  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3086   000CC8  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3087   000CCC                     
  3088                           ;main.c: 468:                     pressed_button = 0xFF;
  3089   000CCC  6849               	setf	_pressed_button^0,c
  3090                           
  3091                           ;main.c: 469:                      while (pressed_button == 0xFF)
  3092   000CCE  EF6C  F006         	goto	l7067
  3093   000CD2                     l7065:
  3094                           
  3095                           ;main.c: 470:                     {;main.c: 471:                         pressed_button 
      +                          = keypad_get_value();
  3096   000CD2  EC60  F00A         	call	_keypad_get_value	;wreg free
  3097   000CD6  6E49               	movwf	_pressed_button^0,c
  3098   000CD8                     l7067:
  3099                           
  3100                           ;main.c: 469:                      while (pressed_button == 0xFF)
  3101   000CD8  2849               	incf	_pressed_button^0,w,c
  3102   000CDA  B4D8               	btfsc	status,2,c
  3103   000CDC  EF72  F006         	goto	u5031
  3104   000CE0  EF74  F006         	goto	u5030
  3105   000CE4                     u5031:
  3106   000CE4  EF69  F006         	goto	l7065
  3107   000CE8                     u5030:
  3108   000CE8                     
  3109                           ;main.c: 473:                     if(pressed_button == '1'){
  3110   000CE8  0E31               	movlw	49
  3111   000CEA  1849               	xorwf	_pressed_button^0,w,c
  3112   000CEC  A4D8               	btfss	status,2,c
  3113   000CEE  EF7B  F006         	goto	u5041
  3114   000CF2  EF7D  F006         	goto	u5040
  3115   000CF6                     u5041:
  3116   000CF6  EF95  F006         	goto	l7079
  3117   000CFA                     u5040:
  3118   000CFA                     
  3119                           ;main.c: 474:                         if(led2_state== 0x00){
  3120   000CFA  5016               	movf	_led2_state^0,w,c
  3121   000CFC  A4D8               	btfss	status,2,c
  3122   000CFE  EF83  F006         	goto	u5051
  3123   000D02  EF85  F006         	goto	u5050
  3124   000D06                     u5051:
  3125   000D06  EF0D  F003         	goto	l973
  3126   000D0A                     u5050:
  3127   000D0A                     
  3128                           ;main.c: 475:                         EUSART_Write('L');
  3129   000D0A  0E4C               	movlw	76
  3130   000D0C  ECFB  F010         	call	_EUSART_Write
  3131   000D10                     
  3132                           ;main.c: 476:                         led2_state=0x01;
  3133   000D10  0E01               	movlw	1
  3134   000D12  6E16               	movwf	_led2_state^0,c
  3135   000D14                     l7077:
  3136                           
  3137                           ;main.c: 477:                         DATAEE_WriteByte(0x81,led2_state);
  3138   000D14  0E00               	movlw	0
  3139   000D16  0100               	movlb	0	; () banked
  3140   000D18  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3141   000D1A  0E81               	movlw	129
  3142   000D1C  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3143   000D1E  C016  F0A6         	movff	_led2_state,DATAEE_WriteByte@bData
  3144   000D22  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3145   000D26  EF0D  F003         	goto	l6781
  3146   000D2A                     l7079:
  3147   000D2A  0E4E               	movlw	78
  3148   000D2C  1849               	xorwf	_pressed_button^0,w,c
  3149   000D2E  A4D8               	btfss	status,2,c
  3150   000D30  EF9C  F006         	goto	u5061
  3151   000D34  EF9E  F006         	goto	u5060
  3152   000D38                     u5061:
  3153   000D38  EFA0  F006         	goto	l7085
  3154   000D3C                     u5060:
  3155   000D3C  EF0A  F003         	goto	l6779
  3156   000D40                     l7085:
  3157   000D40  0E32               	movlw	50
  3158   000D42  1849               	xorwf	_pressed_button^0,w,c
  3159   000D44  A4D8               	btfss	status,2,c
  3160   000D46  EFA7  F006         	goto	u5071
  3161   000D4A  EFA9  F006         	goto	u5070
  3162   000D4E                     u5071:
  3163   000D4E  EFB8  F006         	goto	l7095
  3164   000D52                     u5070:
  3165   000D52                     
  3166                           ;main.c: 485:                         if(led2_state== 0x01){
  3167   000D52  0416               	decf	_led2_state^0,w,c
  3168   000D54  A4D8               	btfss	status,2,c
  3169   000D56  EFAF  F006         	goto	u5081
  3170   000D5A  EFB1  F006         	goto	u5080
  3171   000D5E                     u5081:
  3172   000D5E  EF0D  F003         	goto	l973
  3173   000D62                     u5080:
  3174   000D62                     
  3175                           ;main.c: 486:                         EUSART_Write('Y');
  3176   000D62  0E59               	movlw	89
  3177   000D64  ECFB  F010         	call	_EUSART_Write
  3178   000D68                     
  3179                           ;main.c: 487:                         led2_state=0x00;
  3180   000D68  0E00               	movlw	0
  3181   000D6A  6E16               	movwf	_led2_state^0,c
  3182   000D6C  EF8A  F006         	goto	l7077
  3183   000D70                     l7095:
  3184                           
  3185                           ;main.c: 492:                     {;main.c: 493:                         LCD_clearscreen
      +                          ();
  3186   000D70  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3187   000D74                     
  3188                           ;main.c: 494:                         LCD_vSend_string("Wrong input");
  3189   000D74  0E9D               	movlw	low STR_19
  3190   000D76  0100               	movlb	0	; () banked
  3191   000D78  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3192   000D7A  0EFF               	movlw	high STR_19
  3193   000D7C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3194   000D7E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3195   000D82  EF1E  F004         	goto	l6877
  3196   000D86                     l7101:
  3197   000D86  0E4E               	movlw	78
  3198   000D88  1849               	xorwf	_pressed_button^0,w,c
  3199   000D8A  A4D8               	btfss	status,2,c
  3200   000D8C  EFCA  F006         	goto	u5091
  3201   000D90  EFCC  F006         	goto	u5090
  3202   000D94                     u5091:
  3203   000D94  EFCE  F006         	goto	l7107
  3204   000D98                     u5090:
  3205   000D98  EF0A  F003         	goto	l6779
  3206   000D9C                     l7107:
  3207   000D9C  0E32               	movlw	50
  3208   000D9E  1849               	xorwf	_pressed_button^0,w,c
  3209   000DA0  A4D8               	btfss	status,2,c
  3210   000DA2  EFD5  F006         	goto	u5101
  3211   000DA6  EFD7  F006         	goto	u5100
  3212   000DAA                     u5101:
  3213   000DAA  EF0D  F003         	goto	l6781
  3214   000DAE                     u5100:
  3215   000DAE                     
  3216                           ;main.c: 509:                 {;main.c: 510:                      LCD_clearscreen();
  3217   000DAE  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3218   000DB2                     
  3219                           ;main.c: 511:                      _delay((unsigned long)((500)*(16000000/4000.0)));
  3220   000DB2  0E0B               	movlw	11
  3221   000DB4  0100               	movlb	0	; () banked
  3222   000DB6  6FAB               	movwf	(??_main+1)& (0+255),b
  3223   000DB8  0E26               	movlw	38
  3224   000DBA  6FAA               	movwf	??_main& (0+255),b
  3225   000DBC  0E5D               	movlw	93
  3226   000DBE                     u5837:
  3227   000DBE  2EE8               	decfsz	wreg,f,c
  3228   000DC0  D7FE               	bra	u5837
  3229   000DC2  2FAA               	decfsz	??_main& (0+255),f,b
  3230   000DC4  D7FC               	bra	u5837
  3231   000DC6  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3232   000DC8  D7FA               	bra	u5837
  3233   000DCA  F000 F000          	nop2	
  3234   000DCE                     
  3235                           ;main.c: 512:                     LCD_vSend_string("1-ON   2-OFF");
  3236   000DCE  0E6C               	movlw	low STR_34
  3237   000DD0  0100               	movlb	0	; () banked
  3238   000DD2  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3239   000DD4  0EFF               	movlw	high STR_34
  3240   000DD6  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3241   000DD8  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3242   000DDC                     
  3243                           ;main.c: 513:                     pressed_button = 0xFF;
  3244   000DDC  6849               	setf	_pressed_button^0,c
  3245                           
  3246                           ;main.c: 514:                      while (pressed_button == 0xFF)
  3247   000DDE  EFF4  F006         	goto	l7119
  3248   000DE2                     l7117:
  3249                           
  3250                           ;main.c: 515:                     {;main.c: 516:                         pressed_button 
      +                          = keypad_get_value();
  3251   000DE2  EC60  F00A         	call	_keypad_get_value	;wreg free
  3252   000DE6  6E49               	movwf	_pressed_button^0,c
  3253   000DE8                     l7119:
  3254                           
  3255                           ;main.c: 514:                      while (pressed_button == 0xFF)
  3256   000DE8  2849               	incf	_pressed_button^0,w,c
  3257   000DEA  B4D8               	btfsc	status,2,c
  3258   000DEC  EFFA  F006         	goto	u5111
  3259   000DF0  EFFC  F006         	goto	u5110
  3260   000DF4                     u5111:
  3261   000DF4  EFF1  F006         	goto	l7117
  3262   000DF8                     u5110:
  3263   000DF8                     
  3264                           ;main.c: 518:                     if(pressed_button == '1'){
  3265   000DF8  0E31               	movlw	49
  3266   000DFA  1849               	xorwf	_pressed_button^0,w,c
  3267   000DFC  A4D8               	btfss	status,2,c
  3268   000DFE  EF03  F007         	goto	u5121
  3269   000E02  EF05  F007         	goto	u5120
  3270   000E06                     u5121:
  3271   000E06  EF1D  F007         	goto	l7131
  3272   000E0A                     u5120:
  3273   000E0A                     
  3274                           ;main.c: 519:                         if(windows1_state==0x00){
  3275   000E0A  5013               	movf	_windows1_state^0,w,c
  3276   000E0C  A4D8               	btfss	status,2,c
  3277   000E0E  EF0B  F007         	goto	u5131
  3278   000E12  EF0D  F007         	goto	u5130
  3279   000E16                     u5131:
  3280   000E16  EF0D  F003         	goto	l973
  3281   000E1A                     u5130:
  3282   000E1A                     
  3283                           ;main.c: 520:                             EUSART_Write('Q');
  3284   000E1A  0E51               	movlw	81
  3285   000E1C  ECFB  F010         	call	_EUSART_Write
  3286   000E20                     
  3287                           ;main.c: 521:                             windows1_state=0x01;
  3288   000E20  0E01               	movlw	1
  3289   000E22  6E13               	movwf	_windows1_state^0,c
  3290   000E24                     l7129:
  3291                           
  3292                           ;main.c: 522:                             DATAEE_WriteByte(0x82,windows1_state);
  3293   000E24  0E00               	movlw	0
  3294   000E26  0100               	movlb	0	; () banked
  3295   000E28  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3296   000E2A  0E82               	movlw	130
  3297   000E2C  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3298   000E2E  C013  F0A6         	movff	_windows1_state,DATAEE_WriteByte@bData
  3299   000E32  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3300   000E36  EF0D  F003         	goto	l6781
  3301   000E3A                     l7131:
  3302   000E3A  0E4E               	movlw	78
  3303   000E3C  1849               	xorwf	_pressed_button^0,w,c
  3304   000E3E  A4D8               	btfss	status,2,c
  3305   000E40  EF24  F007         	goto	u5141
  3306   000E44  EF26  F007         	goto	u5140
  3307   000E48                     u5141:
  3308   000E48  EF28  F007         	goto	l7137
  3309   000E4C                     u5140:
  3310   000E4C  EF0A  F003         	goto	l6779
  3311   000E50                     l7137:
  3312   000E50  0E32               	movlw	50
  3313   000E52  1849               	xorwf	_pressed_button^0,w,c
  3314   000E54  A4D8               	btfss	status,2,c
  3315   000E56  EF2F  F007         	goto	u5151
  3316   000E5A  EF31  F007         	goto	u5150
  3317   000E5E                     u5151:
  3318   000E5E  EF40  F007         	goto	l7147
  3319   000E62                     u5150:
  3320   000E62                     
  3321                           ;main.c: 530:                     {;main.c: 531:                         if(windows1_sta
      +                          te==0x01){
  3322   000E62  0413               	decf	_windows1_state^0,w,c
  3323   000E64  A4D8               	btfss	status,2,c
  3324   000E66  EF37  F007         	goto	u5161
  3325   000E6A  EF39  F007         	goto	u5160
  3326   000E6E                     u5161:
  3327   000E6E  EF0D  F003         	goto	l973
  3328   000E72                     u5160:
  3329   000E72                     
  3330                           ;main.c: 532:                         EUSART_Write('W');
  3331   000E72  0E57               	movlw	87
  3332   000E74  ECFB  F010         	call	_EUSART_Write
  3333   000E78                     
  3334                           ;main.c: 533:                         windows1_state=0x00;
  3335   000E78  0E00               	movlw	0
  3336   000E7A  6E13               	movwf	_windows1_state^0,c
  3337   000E7C  EF12  F007         	goto	l7129
  3338   000E80                     l7147:
  3339                           
  3340                           ;main.c: 538:                     {;main.c: 539:                             LCD_clearsc
      +                          reen();
  3341   000E80  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3342   000E84                     
  3343                           ;main.c: 540:                             LCD_vSend_string("Wrong input");
  3344   000E84  0E9D               	movlw	low STR_19
  3345   000E86  0100               	movlb	0	; () banked
  3346   000E88  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3347   000E8A  0EFF               	movlw	high STR_19
  3348   000E8C  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3349   000E8E  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3350   000E92  EF1E  F004         	goto	l6877
  3351   000E96                     l7153:
  3352   000E96  0E33               	movlw	51
  3353   000E98  1849               	xorwf	_pressed_button^0,w,c
  3354   000E9A  A4D8               	btfss	status,2,c
  3355   000E9C  EF52  F007         	goto	u5171
  3356   000EA0  EF54  F007         	goto	u5170
  3357   000EA4                     u5171:
  3358   000EA4  EF90  F009         	goto	l7361
  3359   000EA8                     u5170:
  3360   000EA8                     
  3361                           ;main.c: 557:             {;main.c: 558:                 LCD_clearscreen();
  3362   000EA8  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3363   000EAC                     
  3364                           ;main.c: 559:                 _delay((unsigned long)((1000)*(16000000/4000.0)));
  3365   000EAC  0E15               	movlw	21
  3366   000EAE  0100               	movlb	0	; () banked
  3367   000EB0  6FAB               	movwf	(??_main+1)& (0+255),b
  3368   000EB2  0E4B               	movlw	75
  3369   000EB4  6FAA               	movwf	??_main& (0+255),b
  3370   000EB6  0EBE               	movlw	190
  3371   000EB8                     u5847:
  3372   000EB8  2EE8               	decfsz	wreg,f,c
  3373   000EBA  D7FE               	bra	u5847
  3374   000EBC  2FAA               	decfsz	??_main& (0+255),f,b
  3375   000EBE  D7FC               	bra	u5847
  3376   000EC0  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3377   000EC2  D7FA               	bra	u5847
  3378   000EC4  F000               	nop	
  3379   000EC6                     
  3380                           ;main.c: 560:                 LCD_vSend_string("1:Light 2:windows");
  3381   000EC6  0EA3               	movlw	low STR_36
  3382   000EC8  0100               	movlb	0	; () banked
  3383   000ECA  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3384   000ECC  0EFE               	movlw	high STR_36
  3385   000ECE  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3386   000ED0  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3387   000ED4                     
  3388                           ;main.c: 561:                 LCD_movecursor(2,1);
  3389   000ED4  0E01               	movlw	1
  3390   000ED6  0100               	movlb	0	; () banked
  3391   000ED8  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  3392   000EDA  0E02               	movlw	2
  3393   000EDC  ECF6  F00C         	call	_LCD_movecursor
  3394   000EE0                     
  3395                           ;main.c: 562:                 LCD_vSend_string("3:TV  4:Radio");
  3396   000EE0  0E50               	movlw	low STR_37
  3397   000EE2  0100               	movlb	0	; () banked
  3398   000EE4  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3399   000EE6  0EFF               	movlw	high STR_37
  3400   000EE8  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3401   000EEA  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3402   000EEE                     
  3403                           ;main.c: 563:                 pressed_button = 0xFF;
  3404   000EEE  6849               	setf	_pressed_button^0,c
  3405                           
  3406                           ;main.c: 564:                 while (pressed_button == 0xFF)
  3407   000EF0  EF7D  F007         	goto	l7169
  3408   000EF4                     l7167:
  3409                           
  3410                           ;main.c: 565:                 {;main.c: 566:                     pressed_button = keypad
      +                          _get_value();
  3411   000EF4  EC60  F00A         	call	_keypad_get_value	;wreg free
  3412   000EF8  6E49               	movwf	_pressed_button^0,c
  3413   000EFA                     l7169:
  3414                           
  3415                           ;main.c: 564:                 while (pressed_button == 0xFF)
  3416   000EFA  2849               	incf	_pressed_button^0,w,c
  3417   000EFC  B4D8               	btfsc	status,2,c
  3418   000EFE  EF83  F007         	goto	u5181
  3419   000F02  EF85  F007         	goto	u5180
  3420   000F06                     u5181:
  3421   000F06  EF7A  F007         	goto	l7167
  3422   000F0A                     u5180:
  3423   000F0A                     
  3424                           ;main.c: 568:                 if(pressed_button == '1')
  3425   000F0A  0E31               	movlw	49
  3426   000F0C  1849               	xorwf	_pressed_button^0,w,c
  3427   000F0E  A4D8               	btfss	status,2,c
  3428   000F10  EF8C  F007         	goto	u5191
  3429   000F14  EF8E  F007         	goto	u5190
  3430   000F18                     u5191:
  3431   000F18  EFF6  F007         	goto	l7211
  3432   000F1C                     u5190:
  3433   000F1C                     
  3434                           ;main.c: 569:                 {;main.c: 570:                     LCD_clearscreen();
  3435   000F1C  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3436   000F20                     
  3437                           ;main.c: 571:                     _delay((unsigned long)((1000)*(16000000/4000.0)));
  3438   000F20  0E15               	movlw	21
  3439   000F22  0100               	movlb	0	; () banked
  3440   000F24  6FAB               	movwf	(??_main+1)& (0+255),b
  3441   000F26  0E4B               	movlw	75
  3442   000F28  6FAA               	movwf	??_main& (0+255),b
  3443   000F2A  0EBE               	movlw	190
  3444   000F2C                     u5857:
  3445   000F2C  2EE8               	decfsz	wreg,f,c
  3446   000F2E  D7FE               	bra	u5857
  3447   000F30  2FAA               	decfsz	??_main& (0+255),f,b
  3448   000F32  D7FC               	bra	u5857
  3449   000F34  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3450   000F36  D7FA               	bra	u5857
  3451   000F38  F000               	nop	
  3452   000F3A                     
  3453                           ;main.c: 572:                     LCD_vSend_string("1-On 2-Off");
  3454   000F3A  0ECA               	movlw	low STR_18
  3455   000F3C  0100               	movlb	0	; () banked
  3456   000F3E  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3457   000F40  0EFF               	movlw	high STR_18
  3458   000F42  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3459   000F44  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3460   000F48                     
  3461                           ;main.c: 573:                     pressed_button = 0xFF;
  3462   000F48  6849               	setf	_pressed_button^0,c
  3463                           
  3464                           ;main.c: 574:                      while (pressed_button == 0xFF)
  3465   000F4A  EFAA  F007         	goto	l7183
  3466   000F4E                     l7181:
  3467                           
  3468                           ;main.c: 575:                     {;main.c: 576:                         pressed_button 
      +                          = keypad_get_value();
  3469   000F4E  EC60  F00A         	call	_keypad_get_value	;wreg free
  3470   000F52  6E49               	movwf	_pressed_button^0,c
  3471   000F54                     l7183:
  3472                           
  3473                           ;main.c: 574:                      while (pressed_button == 0xFF)
  3474   000F54  2849               	incf	_pressed_button^0,w,c
  3475   000F56  B4D8               	btfsc	status,2,c
  3476   000F58  EFB0  F007         	goto	u5201
  3477   000F5C  EFB2  F007         	goto	u5200
  3478   000F60                     u5201:
  3479   000F60  EFA7  F007         	goto	l7181
  3480   000F64                     u5200:
  3481   000F64                     
  3482                           ;main.c: 578:                     if(pressed_button == '1'){
  3483   000F64  0E31               	movlw	49
  3484   000F66  1849               	xorwf	_pressed_button^0,w,c
  3485   000F68  A4D8               	btfss	status,2,c
  3486   000F6A  EFB9  F007         	goto	u5211
  3487   000F6E  EFBB  F007         	goto	u5210
  3488   000F72                     u5211:
  3489   000F72  EFD3  F007         	goto	l7195
  3490   000F76                     u5210:
  3491   000F76                     
  3492                           ;main.c: 579:                         if(led3_state==0x00){
  3493   000F76  5015               	movf	_led3_state^0,w,c
  3494   000F78  A4D8               	btfss	status,2,c
  3495   000F7A  EFC1  F007         	goto	u5221
  3496   000F7E  EFC3  F007         	goto	u5220
  3497   000F82                     u5221:
  3498   000F82  EF0D  F003         	goto	l6781
  3499   000F86                     u5220:
  3500   000F86                     
  3501                           ;main.c: 580:                         EUSART_Write('R');
  3502   000F86  0E52               	movlw	82
  3503   000F88  ECFB  F010         	call	_EUSART_Write
  3504   000F8C                     
  3505                           ;main.c: 581:                         led3_state=0x01;
  3506   000F8C  0E01               	movlw	1
  3507   000F8E  6E15               	movwf	_led3_state^0,c
  3508   000F90                     l7193:
  3509                           
  3510                           ;main.c: 582:                         DATAEE_WriteByte(0x83,led3_state);
  3511   000F90  0E00               	movlw	0
  3512   000F92  0100               	movlb	0	; () banked
  3513   000F94  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3514   000F96  0E83               	movlw	131
  3515   000F98  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3516   000F9A  C015  F0A6         	movff	_led3_state,DATAEE_WriteByte@bData
  3517   000F9E  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3518   000FA2  EF0D  F003         	goto	l6781
  3519   000FA6                     l7195:
  3520   000FA6  0E32               	movlw	50
  3521   000FA8  1849               	xorwf	_pressed_button^0,w,c
  3522   000FAA  A4D8               	btfss	status,2,c
  3523   000FAC  EFDA  F007         	goto	u5231
  3524   000FB0  EFDC  F007         	goto	u5230
  3525   000FB4                     u5231:
  3526   000FB4  EFEB  F007         	goto	l7205
  3527   000FB8                     u5230:
  3528   000FB8                     
  3529                           ;main.c: 586:                         if(led3_state==0x01){
  3530   000FB8  0415               	decf	_led3_state^0,w,c
  3531   000FBA  A4D8               	btfss	status,2,c
  3532   000FBC  EFE2  F007         	goto	u5241
  3533   000FC0  EFE4  F007         	goto	u5240
  3534   000FC4                     u5241:
  3535   000FC4  EF0D  F003         	goto	l973
  3536   000FC8                     u5240:
  3537   000FC8                     
  3538                           ;main.c: 587:                         EUSART_Write('T');
  3539   000FC8  0E54               	movlw	84
  3540   000FCA  ECFB  F010         	call	_EUSART_Write
  3541   000FCE                     
  3542                           ;main.c: 588:                         led3_state=0x00;
  3543   000FCE  0E00               	movlw	0
  3544   000FD0  6E15               	movwf	_led3_state^0,c
  3545   000FD2  EFC8  F007         	goto	l7193
  3546   000FD6                     l7205:
  3547                           
  3548                           ;main.c: 593:                     {;main.c: 594:                         LCD_clearscreen
      +                          ();
  3549   000FD6  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3550   000FDA                     
  3551                           ;main.c: 595:                         LCD_vSend_string("Wrong input");
  3552   000FDA  0E9D               	movlw	low STR_19
  3553   000FDC  0100               	movlb	0	; () banked
  3554   000FDE  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3555   000FE0  0EFF               	movlw	high STR_19
  3556   000FE2  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3557   000FE4  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3558   000FE8  EF1E  F004         	goto	l6877
  3559   000FEC                     l7211:
  3560   000FEC  0E32               	movlw	50
  3561   000FEE  1849               	xorwf	_pressed_button^0,w,c
  3562   000FF0  A4D8               	btfss	status,2,c
  3563   000FF2  EFFD  F007         	goto	u5251
  3564   000FF6  EFFF  F007         	goto	u5250
  3565   000FFA                     u5251:
  3566   000FFA  EF73  F008         	goto	l7257
  3567   000FFE                     u5250:
  3568   000FFE                     
  3569                           ;main.c: 610:                 {;main.c: 611:                      LCD_clearscreen();
  3570   000FFE  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3571   001002                     
  3572                           ;main.c: 612:                      _delay((unsigned long)((500)*(16000000/4000.0)));
  3573   001002  0E0B               	movlw	11
  3574   001004  0100               	movlb	0	; () banked
  3575   001006  6FAB               	movwf	(??_main+1)& (0+255),b
  3576   001008  0E26               	movlw	38
  3577   00100A  6FAA               	movwf	??_main& (0+255),b
  3578   00100C  0E5D               	movlw	93
  3579   00100E                     u5867:
  3580   00100E  2EE8               	decfsz	wreg,f,c
  3581   001010  D7FE               	bra	u5867
  3582   001012  2FAA               	decfsz	??_main& (0+255),f,b
  3583   001014  D7FC               	bra	u5867
  3584   001016  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3585   001018  D7FA               	bra	u5867
  3586   00101A  F000 F000          	nop2	
  3587   00101E                     
  3588                           ;main.c: 613:                     LCD_vSend_string("1-ON   2-OFF");
  3589   00101E  0E6C               	movlw	low STR_34
  3590   001020  0100               	movlb	0	; () banked
  3591   001022  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3592   001024  0EFF               	movlw	high STR_34
  3593   001026  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3594   001028  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3595   00102C                     
  3596                           ;main.c: 614:                     pressed_button = 0xFF;
  3597   00102C  6849               	setf	_pressed_button^0,c
  3598                           
  3599                           ;main.c: 615:                      while (pressed_button == 0xFF)
  3600   00102E  EF1C  F008         	goto	l7223
  3601   001032                     l7221:
  3602                           
  3603                           ;main.c: 616:                     {;main.c: 617:                         pressed_button 
      +                          = keypad_get_value();
  3604   001032  EC60  F00A         	call	_keypad_get_value	;wreg free
  3605   001036  6E49               	movwf	_pressed_button^0,c
  3606   001038                     l7223:
  3607                           
  3608                           ;main.c: 615:                      while (pressed_button == 0xFF)
  3609   001038  2849               	incf	_pressed_button^0,w,c
  3610   00103A  B4D8               	btfsc	status,2,c
  3611   00103C  EF22  F008         	goto	u5261
  3612   001040  EF24  F008         	goto	u5260
  3613   001044                     u5261:
  3614   001044  EF19  F008         	goto	l7221
  3615   001048                     u5260:
  3616   001048                     
  3617                           ;main.c: 619:                     if(pressed_button == '1'){
  3618   001048  0E31               	movlw	49
  3619   00104A  1849               	xorwf	_pressed_button^0,w,c
  3620   00104C  A4D8               	btfss	status,2,c
  3621   00104E  EF2B  F008         	goto	u5271
  3622   001052  EF2D  F008         	goto	u5270
  3623   001056                     u5271:
  3624   001056  EF45  F008         	goto	l7235
  3625   00105A                     u5270:
  3626   00105A                     
  3627                           ;main.c: 620:                         if(windows2_state==0x00){
  3628   00105A  5012               	movf	_windows2_state^0,w,c
  3629   00105C  A4D8               	btfss	status,2,c
  3630   00105E  EF33  F008         	goto	u5281
  3631   001062  EF35  F008         	goto	u5280
  3632   001066                     u5281:
  3633   001066  EF0D  F003         	goto	l973
  3634   00106A                     u5280:
  3635   00106A                     
  3636                           ;main.c: 621:                             EUSART_Write('U');
  3637   00106A  0E55               	movlw	85
  3638   00106C  ECFB  F010         	call	_EUSART_Write
  3639   001070                     
  3640                           ;main.c: 622:                             windows2_state=0x01;
  3641   001070  0E01               	movlw	1
  3642   001072  6E12               	movwf	_windows2_state^0,c
  3643   001074                     l7233:
  3644                           
  3645                           ;main.c: 623:                             DATAEE_WriteByte(0x84,windows2_state);
  3646   001074  0E00               	movlw	0
  3647   001076  0100               	movlb	0	; () banked
  3648   001078  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3649   00107A  0E84               	movlw	132
  3650   00107C  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3651   00107E  C012  F0A6         	movff	_windows2_state,DATAEE_WriteByte@bData
  3652   001082  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3653   001086  EF0D  F003         	goto	l6781
  3654   00108A                     l7235:
  3655   00108A  0E4E               	movlw	78
  3656   00108C  1849               	xorwf	_pressed_button^0,w,c
  3657   00108E  A4D8               	btfss	status,2,c
  3658   001090  EF4C  F008         	goto	u5291
  3659   001094  EF4E  F008         	goto	u5290
  3660   001098                     u5291:
  3661   001098  EF50  F008         	goto	l7241
  3662   00109C                     u5290:
  3663   00109C  EF0A  F003         	goto	l6779
  3664   0010A0                     l7241:
  3665   0010A0  0E32               	movlw	50
  3666   0010A2  1849               	xorwf	_pressed_button^0,w,c
  3667   0010A4  A4D8               	btfss	status,2,c
  3668   0010A6  EF57  F008         	goto	u5301
  3669   0010AA  EF59  F008         	goto	u5300
  3670   0010AE                     u5301:
  3671   0010AE  EF68  F008         	goto	l7251
  3672   0010B2                     u5300:
  3673   0010B2                     
  3674                           ;main.c: 631:                     {;main.c: 632:                         if(windows2_sta
      +                          te== 0x01){
  3675   0010B2  0412               	decf	_windows2_state^0,w,c
  3676   0010B4  A4D8               	btfss	status,2,c
  3677   0010B6  EF5F  F008         	goto	u5311
  3678   0010BA  EF61  F008         	goto	u5310
  3679   0010BE                     u5311:
  3680   0010BE  EF0D  F003         	goto	l973
  3681   0010C2                     u5310:
  3682   0010C2                     
  3683                           ;main.c: 633:                         EUSART_Write('I');
  3684   0010C2  0E49               	movlw	73
  3685   0010C4  ECFB  F010         	call	_EUSART_Write
  3686   0010C8                     
  3687                           ;main.c: 634:                         windows2_state=0x00;
  3688   0010C8  0E00               	movlw	0
  3689   0010CA  6E12               	movwf	_windows2_state^0,c
  3690   0010CC  EF3A  F008         	goto	l7233
  3691   0010D0                     l7251:
  3692                           
  3693                           ;main.c: 639:                             LCD_clearscreen();
  3694   0010D0  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3695   0010D4                     
  3696                           ;main.c: 640:                             LCD_vSend_string("Wrong input");
  3697   0010D4  0E9D               	movlw	low STR_19
  3698   0010D6  0100               	movlb	0	; () banked
  3699   0010D8  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3700   0010DA  0EFF               	movlw	high STR_19
  3701   0010DC  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3702   0010DE  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3703   0010E2  EF1E  F004         	goto	l6877
  3704   0010E6                     l7257:
  3705   0010E6  0E33               	movlw	51
  3706   0010E8  1849               	xorwf	_pressed_button^0,w,c
  3707   0010EA  A4D8               	btfss	status,2,c
  3708   0010EC  EF7A  F008         	goto	u5321
  3709   0010F0  EF7C  F008         	goto	u5320
  3710   0010F4                     u5321:
  3711   0010F4  EFF0  F008         	goto	l7303
  3712   0010F8                     u5320:
  3713   0010F8                     
  3714                           ;main.c: 648:                 {;main.c: 649:                     LCD_clearscreen();
  3715   0010F8  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3716   0010FC                     
  3717                           ;main.c: 650:                      _delay((unsigned long)((500)*(16000000/4000.0)));
  3718   0010FC  0E0B               	movlw	11
  3719   0010FE  0100               	movlb	0	; () banked
  3720   001100  6FAB               	movwf	(??_main+1)& (0+255),b
  3721   001102  0E26               	movlw	38
  3722   001104  6FAA               	movwf	??_main& (0+255),b
  3723   001106  0E5D               	movlw	93
  3724   001108                     u5877:
  3725   001108  2EE8               	decfsz	wreg,f,c
  3726   00110A  D7FE               	bra	u5877
  3727   00110C  2FAA               	decfsz	??_main& (0+255),f,b
  3728   00110E  D7FC               	bra	u5877
  3729   001110  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3730   001112  D7FA               	bra	u5877
  3731   001114  F000 F000          	nop2	
  3732   001118                     
  3733                           ;main.c: 651:                     LCD_vSend_string("1-ON   2-OFF");
  3734   001118  0E6C               	movlw	low STR_34
  3735   00111A  0100               	movlb	0	; () banked
  3736   00111C  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3737   00111E  0EFF               	movlw	high STR_34
  3738   001120  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3739   001122  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3740   001126                     
  3741                           ;main.c: 652:                     pressed_button = 0xFF;
  3742   001126  6849               	setf	_pressed_button^0,c
  3743                           
  3744                           ;main.c: 653:                      while (pressed_button == 0xFF)
  3745   001128  EF99  F008         	goto	l7269
  3746   00112C                     l7267:
  3747                           
  3748                           ;main.c: 654:                     {;main.c: 655:                         pressed_button 
      +                          = keypad_get_value();
  3749   00112C  EC60  F00A         	call	_keypad_get_value	;wreg free
  3750   001130  6E49               	movwf	_pressed_button^0,c
  3751   001132                     l7269:
  3752                           
  3753                           ;main.c: 653:                      while (pressed_button == 0xFF)
  3754   001132  2849               	incf	_pressed_button^0,w,c
  3755   001134  B4D8               	btfsc	status,2,c
  3756   001136  EF9F  F008         	goto	u5331
  3757   00113A  EFA1  F008         	goto	u5330
  3758   00113E                     u5331:
  3759   00113E  EF96  F008         	goto	l7267
  3760   001142                     u5330:
  3761   001142                     
  3762                           ;main.c: 657:                     if(pressed_button == '1'){
  3763   001142  0E31               	movlw	49
  3764   001144  1849               	xorwf	_pressed_button^0,w,c
  3765   001146  A4D8               	btfss	status,2,c
  3766   001148  EFA8  F008         	goto	u5341
  3767   00114C  EFAA  F008         	goto	u5340
  3768   001150                     u5341:
  3769   001150  EFC2  F008         	goto	l7281
  3770   001154                     u5340:
  3771   001154                     
  3772                           ;main.c: 658:                         if(tv_state==0x00){
  3773   001154  5014               	movf	_tv_state^0,w,c
  3774   001156  A4D8               	btfss	status,2,c
  3775   001158  EFB0  F008         	goto	u5351
  3776   00115C  EFB2  F008         	goto	u5350
  3777   001160                     u5351:
  3778   001160  EF0D  F003         	goto	l973
  3779   001164                     u5350:
  3780   001164                     
  3781                           ;main.c: 659:                             EUSART_Write('V');
  3782   001164  0E56               	movlw	86
  3783   001166  ECFB  F010         	call	_EUSART_Write
  3784   00116A                     
  3785                           ;main.c: 660:                             tv_state=0x01;
  3786   00116A  0E01               	movlw	1
  3787   00116C  6E14               	movwf	_tv_state^0,c
  3788   00116E                     l7279:
  3789                           
  3790                           ;main.c: 661:                             DATAEE_WriteByte(0x85,tv_state);
  3791   00116E  0E00               	movlw	0
  3792   001170  0100               	movlb	0	; () banked
  3793   001172  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3794   001174  0E85               	movlw	133
  3795   001176  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3796   001178  C014  F0A6         	movff	_tv_state,DATAEE_WriteByte@bData
  3797   00117C  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3798   001180  EF0D  F003         	goto	l6781
  3799   001184                     l7281:
  3800   001184  0E4E               	movlw	78
  3801   001186  1849               	xorwf	_pressed_button^0,w,c
  3802   001188  A4D8               	btfss	status,2,c
  3803   00118A  EFC9  F008         	goto	u5361
  3804   00118E  EFCB  F008         	goto	u5360
  3805   001192                     u5361:
  3806   001192  EFCD  F008         	goto	l7287
  3807   001196                     u5360:
  3808   001196  EF0A  F003         	goto	l6779
  3809   00119A                     l7287:
  3810   00119A  0E32               	movlw	50
  3811   00119C  1849               	xorwf	_pressed_button^0,w,c
  3812   00119E  A4D8               	btfss	status,2,c
  3813   0011A0  EFD4  F008         	goto	u5371
  3814   0011A4  EFD6  F008         	goto	u5370
  3815   0011A8                     u5371:
  3816   0011A8  EFE5  F008         	goto	l7297
  3817   0011AC                     u5370:
  3818   0011AC                     
  3819                           ;main.c: 669:                     {;main.c: 670:                         if(tv_state==0x
      +                          01){
  3820   0011AC  0414               	decf	_tv_state^0,w,c
  3821   0011AE  A4D8               	btfss	status,2,c
  3822   0011B0  EFDC  F008         	goto	u5381
  3823   0011B4  EFDE  F008         	goto	u5380
  3824   0011B8                     u5381:
  3825   0011B8  EF0D  F003         	goto	l973
  3826   0011BC                     u5380:
  3827   0011BC                     
  3828                           ;main.c: 671:                         EUSART_Write('S');
  3829   0011BC  0E53               	movlw	83
  3830   0011BE  ECFB  F010         	call	_EUSART_Write
  3831   0011C2                     
  3832                           ;main.c: 672:                         tv_state=0x00;
  3833   0011C2  0E00               	movlw	0
  3834   0011C4  6E14               	movwf	_tv_state^0,c
  3835   0011C6  EFB7  F008         	goto	l7279
  3836   0011CA                     l7297:
  3837                           
  3838                           ;main.c: 678:                             LCD_clearscreen();
  3839   0011CA  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3840   0011CE                     
  3841                           ;main.c: 679:                             LCD_vSend_string("Wrong input");
  3842   0011CE  0E9D               	movlw	low STR_19
  3843   0011D0  0100               	movlb	0	; () banked
  3844   0011D2  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3845   0011D4  0EFF               	movlw	high STR_19
  3846   0011D6  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3847   0011D8  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3848   0011DC  EF1E  F004         	goto	l6877
  3849   0011E0                     l7303:
  3850   0011E0  0E34               	movlw	52
  3851   0011E2  1849               	xorwf	_pressed_button^0,w,c
  3852   0011E4  A4D8               	btfss	status,2,c
  3853   0011E6  EFF7  F008         	goto	u5391
  3854   0011EA  EFF9  F008         	goto	u5390
  3855   0011EE                     u5391:
  3856   0011EE  EF6D  F009         	goto	l7349
  3857   0011F2                     u5390:
  3858   0011F2                     
  3859                           ;main.c: 685:                 {;main.c: 686:                     LCD_clearscreen();
  3860   0011F2  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3861   0011F6                     
  3862                           ;main.c: 687:                      _delay((unsigned long)((500)*(16000000/4000.0)));
  3863   0011F6  0E0B               	movlw	11
  3864   0011F8  0100               	movlb	0	; () banked
  3865   0011FA  6FAB               	movwf	(??_main+1)& (0+255),b
  3866   0011FC  0E26               	movlw	38
  3867   0011FE  6FAA               	movwf	??_main& (0+255),b
  3868   001200  0E5D               	movlw	93
  3869   001202                     u5887:
  3870   001202  2EE8               	decfsz	wreg,f,c
  3871   001204  D7FE               	bra	u5887
  3872   001206  2FAA               	decfsz	??_main& (0+255),f,b
  3873   001208  D7FC               	bra	u5887
  3874   00120A  2FAB               	decfsz	(??_main+1)& (0+255),f,b
  3875   00120C  D7FA               	bra	u5887
  3876   00120E  F000 F000          	nop2	
  3877   001212                     
  3878                           ;main.c: 688:                     LCD_vSend_string("1-ON   2-OFF");
  3879   001212  0E6C               	movlw	low STR_34
  3880   001214  0100               	movlb	0	; () banked
  3881   001216  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3882   001218  0EFF               	movlw	high STR_34
  3883   00121A  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3884   00121C  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3885   001220                     
  3886                           ;main.c: 689:                     pressed_button = 0xFF;
  3887   001220  6849               	setf	_pressed_button^0,c
  3888                           
  3889                           ;main.c: 690:                      while (pressed_button == 0xFF)
  3890   001222  EF16  F009         	goto	l7315
  3891   001226                     l7313:
  3892                           
  3893                           ;main.c: 691:                     {;main.c: 692:                         pressed_button 
      +                          = keypad_get_value();
  3894   001226  EC60  F00A         	call	_keypad_get_value	;wreg free
  3895   00122A  6E49               	movwf	_pressed_button^0,c
  3896   00122C                     l7315:
  3897                           
  3898                           ;main.c: 690:                      while (pressed_button == 0xFF)
  3899   00122C  2849               	incf	_pressed_button^0,w,c
  3900   00122E  B4D8               	btfsc	status,2,c
  3901   001230  EF1C  F009         	goto	u5401
  3902   001234  EF1E  F009         	goto	u5400
  3903   001238                     u5401:
  3904   001238  EF13  F009         	goto	l7313
  3905   00123C                     u5400:
  3906   00123C                     
  3907                           ;main.c: 694:                     if(pressed_button == '1'){
  3908   00123C  0E31               	movlw	49
  3909   00123E  1849               	xorwf	_pressed_button^0,w,c
  3910   001240  A4D8               	btfss	status,2,c
  3911   001242  EF25  F009         	goto	u5411
  3912   001246  EF27  F009         	goto	u5410
  3913   00124A                     u5411:
  3914   00124A  EF3F  F009         	goto	l7327
  3915   00124E                     u5410:
  3916   00124E                     
  3917                           ;main.c: 695:                         if(radio_state==0x00){
  3918   00124E  5011               	movf	_radio_state^0,w,c
  3919   001250  A4D8               	btfss	status,2,c
  3920   001252  EF2D  F009         	goto	u5421
  3921   001256  EF2F  F009         	goto	u5420
  3922   00125A                     u5421:
  3923   00125A  EF0D  F003         	goto	l973
  3924   00125E                     u5420:
  3925   00125E                     
  3926                           ;main.c: 696:                             EUSART_Write('M');
  3927   00125E  0E4D               	movlw	77
  3928   001260  ECFB  F010         	call	_EUSART_Write
  3929   001264                     
  3930                           ;main.c: 697:                             radio_state=0x01;
  3931   001264  0E01               	movlw	1
  3932   001266  6E11               	movwf	_radio_state^0,c
  3933   001268                     l7325:
  3934                           
  3935                           ;main.c: 698:                             DATAEE_WriteByte(0x86,radio_state);
  3936   001268  0E00               	movlw	0
  3937   00126A  0100               	movlb	0	; () banked
  3938   00126C  6FA5               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3939   00126E  0E86               	movlw	134
  3940   001270  6FA4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3941   001272  C011  F0A6         	movff	_radio_state,DATAEE_WriteByte@bData
  3942   001276  EC3C  F00F         	call	_DATAEE_WriteByte	;wreg free
  3943   00127A  EF0D  F003         	goto	l6781
  3944   00127E                     l7327:
  3945   00127E  0E4E               	movlw	78
  3946   001280  1849               	xorwf	_pressed_button^0,w,c
  3947   001282  A4D8               	btfss	status,2,c
  3948   001284  EF46  F009         	goto	u5431
  3949   001288  EF48  F009         	goto	u5430
  3950   00128C                     u5431:
  3951   00128C  EF4A  F009         	goto	l7333
  3952   001290                     u5430:
  3953   001290  EF0A  F003         	goto	l6779
  3954   001294                     l7333:
  3955   001294  0E32               	movlw	50
  3956   001296  1849               	xorwf	_pressed_button^0,w,c
  3957   001298  A4D8               	btfss	status,2,c
  3958   00129A  EF51  F009         	goto	u5441
  3959   00129E  EF53  F009         	goto	u5440
  3960   0012A2                     u5441:
  3961   0012A2  EF62  F009         	goto	l7343
  3962   0012A6                     u5440:
  3963   0012A6                     
  3964                           ;main.c: 706:                     {;main.c: 707:                         if(radio_state=
      +                          =0x01){
  3965   0012A6  0411               	decf	_radio_state^0,w,c
  3966   0012A8  A4D8               	btfss	status,2,c
  3967   0012AA  EF59  F009         	goto	u5451
  3968   0012AE  EF5B  F009         	goto	u5450
  3969   0012B2                     u5451:
  3970   0012B2  EF0D  F003         	goto	l973
  3971   0012B6                     u5450:
  3972   0012B6                     
  3973                           ;main.c: 708:                         EUSART_Write('P');
  3974   0012B6  0E50               	movlw	80
  3975   0012B8  ECFB  F010         	call	_EUSART_Write
  3976   0012BC                     
  3977                           ;main.c: 709:                         radio_state=0x00;
  3978   0012BC  0E00               	movlw	0
  3979   0012BE  6E11               	movwf	_radio_state^0,c
  3980   0012C0  EF34  F009         	goto	l7325
  3981   0012C4                     l7343:
  3982                           
  3983                           ;main.c: 714:                             LCD_clearscreen();
  3984   0012C4  EC92  F011         	call	_LCD_clearscreen	;wreg free
  3985   0012C8                     
  3986                           ;main.c: 715:                             LCD_vSend_string("Wrong input");
  3987   0012C8  0E9D               	movlw	low STR_19
  3988   0012CA  0100               	movlb	0	; () banked
  3989   0012CC  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  3990   0012CE  0EFF               	movlw	high STR_19
  3991   0012D0  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  3992   0012D2  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  3993   0012D6  EF1E  F004         	goto	l6877
  3994   0012DA                     l7349:
  3995   0012DA  0E4E               	movlw	78
  3996   0012DC  1849               	xorwf	_pressed_button^0,w,c
  3997   0012DE  A4D8               	btfss	status,2,c
  3998   0012E0  EF74  F009         	goto	u5461
  3999   0012E4  EF76  F009         	goto	u5460
  4000   0012E8                     u5461:
  4001   0012E8  EF78  F009         	goto	l7355
  4002   0012EC                     u5460:
  4003   0012EC  EF0A  F003         	goto	l6779
  4004   0012F0                     l7355:
  4005                           
  4006                           ;main.c: 731:                     LCD_clearscreen();
  4007   0012F0  EC92  F011         	call	_LCD_clearscreen	;wreg free
  4008   0012F4                     
  4009                           ;main.c: 732:                     LCD_vSend_string("please select one");
  4010   0012F4  0E5B               	movlw	low STR_46
  4011   0012F6  0100               	movlb	0	; () banked
  4012   0012F8  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  4013   0012FA  0EFE               	movlw	high STR_46
  4014   0012FC  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  4015   0012FE  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  4016   001302                     
  4017                           ;main.c: 733:                     LCD_movecursor(2,1);
  4018   001302  0E01               	movlw	1
  4019   001304  0100               	movlb	0	; () banked
  4020   001306  6FA1               	movwf	LCD_movecursor@coloumn& (0+255),b
  4021   001308  0E02               	movlw	2
  4022   00130A  ECF6  F00C         	call	_LCD_movecursor
  4023                           
  4024                           ;main.c: 734:                     LCD_vSend_string("of the options");
  4025   00130E  0E16               	movlw	low STR_47
  4026   001310  0100               	movlb	0	; () banked
  4027   001312  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  4028   001314  0EFF               	movlw	high STR_47
  4029   001316  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  4030   001318  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  4031                           
  4032                           ;main.c: 735:                     continue;
  4033   00131C  EF0D  F003         	goto	l6781
  4034   001320                     l7361:
  4035   001320  0E4E               	movlw	78
  4036   001322  1849               	xorwf	_pressed_button^0,w,c
  4037   001324  A4D8               	btfss	status,2,c
  4038   001326  EF97  F009         	goto	u5471
  4039   00132A  EF99  F009         	goto	u5470
  4040   00132E                     u5471:
  4041   00132E  EF9B  F009         	goto	l7367
  4042   001332                     u5470:
  4043   001332  EF0A  F003         	goto	l6779
  4044   001336                     l7367:
  4045                           
  4046                           ;main.c: 743:                 LCD_clearscreen();
  4047   001336  EC92  F011         	call	_LCD_clearscreen	;wreg free
  4048   00133A                     
  4049                           ;main.c: 744:                 LCD_vSend_string("Wrong input");
  4050   00133A  0E9D               	movlw	low STR_19
  4051   00133C  0100               	movlb	0	; () banked
  4052   00133E  6FA1               	movwf	LCD_vSend_string@data& (0+255),b
  4053   001340  0EFF               	movlw	high STR_19
  4054   001342  6FA2               	movwf	(LCD_vSend_string@data+1)& (0+255),b
  4055   001344  ECC4  F00F         	call	_LCD_vSend_string	;wreg free
  4056   001348  EF1E  F004         	goto	l6877
  4057   00134C                     l7373:
  4058                           
  4059                           ;main.c: 772:     {;main.c: 773:          LCD_clearscreen();
  4060   00134C  EC92  F011         	call	_LCD_clearscreen	;wreg free
  4061   001350                     
  4062                           ;main.c: 774:          TC74_A7_TempValue = TempSensor_TC74_Read_Temp(0x9E);
  4063   001350  0E9E               	movlw	158
  4064   001352  ECD7  F010         	call	_TempSensor_TC74_Read_Temp
  4065   001356  6E1F               	movwf	_TC74_A7_TempValue^0,c
  4066   001358                     
  4067                           ;main.c: 775:          Input_temp=DATAEE_ReadByte(0x10)*10+ DATAEE_ReadByte(0x11);
  4068   001358  0E00               	movlw	0
  4069   00135A  0100               	movlb	0	; () banked
  4070   00135C  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  4071   00135E  0E11               	movlw	17
  4072   001360  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  4073   001362  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  4074   001366  0100               	movlb	0	; () banked
  4075   001368  6FAA               	movwf	??_main& (0+255),b
  4076   00136A  0E00               	movlw	0
  4077   00136C  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  4078   00136E  0E10               	movlw	16
  4079   001370  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  4080   001372  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  4081   001376  0D0A               	mullw	10
  4082   001378  50F3               	movf	243,w,c
  4083   00137A  0100               	movlb	0	; () banked
  4084   00137C  25AA               	addwf	??_main& (0+255),w,b
  4085   00137E  6E4A               	movwf	_Input_temp^0,c
  4086   001380                     
  4087                           ; BSR set to: 0
  4088                           ;main.c: 776:          conditioner_state= DATAEE_ReadByte(0x40);
  4089   001380  0E00               	movlw	0
  4090   001382  6F9D               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  4091   001384  0E40               	movlw	64
  4092   001386  6F9C               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  4093   001388  ECCA  F010         	call	_DATAEE_ReadByte	;wreg free
  4094   00138C  6E1A               	movwf	_conditioner_state^0,c
  4095   00138E                     
  4096                           ;main.c: 777:          Password_Approval=0;
  4097   00138E  0E00               	movlw	0
  4098   001390  6E1B               	movwf	_Password_Approval^0,c
  4099   001392                     
  4100                           ;main.c: 778:             if((conditioner_state==0x01 )&&( TC74_A7_TempValue > Input_tem
      +                          p) && (TC74_A7_TempValue < 0x37)){
  4101   001392  041A               	decf	_conditioner_state^0,w,c
  4102   001394  A4D8               	btfss	status,2,c
  4103   001396  EFCF  F009         	goto	u5481
  4104   00139A  EFD1  F009         	goto	u5480
  4105   00139E                     u5481:
  4106   00139E  EFFE  F009         	goto	l7403
  4107   0013A2                     u5480:
  4108   0013A2  501F               	movf	_TC74_A7_TempValue^0,w,c
  4109   0013A4  5C4A               	subwf	_Input_temp^0,w,c
  4110   0013A6  B0D8               	btfsc	status,0,c
  4111   0013A8  EFD8  F009         	goto	u5491
  4112   0013AC  EFDA  F009         	goto	u5490
  4113   0013B0                     u5491:
  4114   0013B0  EFFE  F009         	goto	l7403
  4115   0013B4                     u5490:
  4116   0013B4  0E37               	movlw	55
  4117   0013B6  601F               	cpfslt	_TC74_A7_TempValue^0,c
  4118   0013B8  EFE0  F009         	goto	u5501
  4119   0013BC  EFE2  F009         	goto	u5500
  4120   0013C0                     u5501:
  4121   0013C0  EFFE  F009         	goto	l7403
  4122   0013C4                     u5500:
  4123   0013C4                     
  4124                           ;main.c: 779:                 if(back_to_safety==0){
  4125   0013C4  5048               	movf	_back_to_safety^0,w,c
  4126   0013C6  A4D8               	btfss	status,2,c
  4127   0013C8  EFE8  F009         	goto	u5511
  4128   0013CC  EFEA  F009         	goto	u5510
  4129   0013D0                     u5511:
  4130   0013D0  EFEF  F009         	goto	l7395
  4131   0013D4                     u5510:
  4132   0013D4                     
  4133                           ;main.c: 780:                     EUSART_Write('G');
  4134   0013D4  0E47               	movlw	71
  4135   0013D6  ECFB  F010         	call	_EUSART_Write
  4136   0013DA                     
  4137                           ;main.c: 781:                     back_to_safety=1;
  4138   0013DA  0E01               	movlw	1
  4139   0013DC  6E48               	movwf	_back_to_safety^0,c
  4140   0013DE                     l7395:
  4141                           
  4142                           ;main.c: 783:                 if(opened_flag==0){
  4143   0013DE  5019               	movf	_opened_flag^0,w,c
  4144   0013E0  A4D8               	btfss	status,2,c
  4145   0013E2  EFF5  F009         	goto	u5521
  4146   0013E6  EFF7  F009         	goto	u5520
  4147   0013EA                     u5521:
  4148   0013EA  EFFE  F009         	goto	l7403
  4149   0013EE                     u5520:
  4150   0013EE                     
  4151                           ;main.c: 784:                 EUSART_Write('G');
  4152   0013EE  0E47               	movlw	71
  4153   0013F0  ECFB  F010         	call	_EUSART_Write
  4154   0013F4                     
  4155                           ;main.c: 785:                 opened_flag=1;
  4156   0013F4  0E01               	movlw	1
  4157   0013F6  6E19               	movwf	_opened_flag^0,c
  4158   0013F8                     
  4159                           ;main.c: 786:                 fire_alarm=0;
  4160   0013F8  0E00               	movlw	0
  4161   0013FA  6E10               	movwf	_fire_alarm^0,c
  4162   0013FC                     l7403:
  4163                           
  4164                           ;main.c: 789:             if(((conditioner_state==0x00) ||( TC74_A7_TempValue < Input_te
      +                          mp) )&& (TC74_A7_TempValue < 0x37)){
  4165   0013FC  501A               	movf	_conditioner_state^0,w,c
  4166   0013FE  B4D8               	btfsc	status,2,c
  4167   001400  EF04  F00A         	goto	u5531
  4168   001404  EF06  F00A         	goto	u5530
  4169   001408                     u5531:
  4170   001408  EF0F  F00A         	goto	l7407
  4171   00140C                     u5530:
  4172   00140C  504A               	movf	_Input_temp^0,w,c
  4173   00140E  5C1F               	subwf	_TC74_A7_TempValue^0,w,c
  4174   001410  B0D8               	btfsc	status,0,c
  4175   001412  EF0D  F00A         	goto	u5541
  4176   001416  EF0F  F00A         	goto	u5540
  4177   00141A                     u5541:
  4178   00141A  EF33  F00A         	goto	l7423
  4179   00141E                     u5540:
  4180   00141E                     l7407:
  4181   00141E  0E37               	movlw	55
  4182   001420  601F               	cpfslt	_TC74_A7_TempValue^0,c
  4183   001422  EF15  F00A         	goto	u5551
  4184   001426  EF17  F00A         	goto	u5550
  4185   00142A                     u5551:
  4186   00142A  EF33  F00A         	goto	l7423
  4187   00142E                     u5550:
  4188   00142E                     
  4189                           ;main.c: 790:                     if(back_to_safety==0){
  4190   00142E  5048               	movf	_back_to_safety^0,w,c
  4191   001430  A4D8               	btfss	status,2,c
  4192   001432  EF1D  F00A         	goto	u5561
  4193   001436  EF1F  F00A         	goto	u5560
  4194   00143A                     u5561:
  4195   00143A  EF24  F00A         	goto	l7415
  4196   00143E                     u5560:
  4197   00143E                     
  4198                           ;main.c: 791:                         EUSART_Write('F');
  4199   00143E  0E46               	movlw	70
  4200   001440  ECFB  F010         	call	_EUSART_Write
  4201   001444                     
  4202                           ;main.c: 792:                         back_to_safety=1;
  4203   001444  0E01               	movlw	1
  4204   001446  6E48               	movwf	_back_to_safety^0,c
  4205   001448                     l7415:
  4206                           
  4207                           ;main.c: 794:                     if(opened_flag==1){
  4208   001448  0419               	decf	_opened_flag^0,w,c
  4209   00144A  A4D8               	btfss	status,2,c
  4210   00144C  EF2A  F00A         	goto	u5571
  4211   001450  EF2C  F00A         	goto	u5570
  4212   001454                     u5571:
  4213   001454  EF33  F00A         	goto	l7423
  4214   001458                     u5570:
  4215   001458                     
  4216                           ;main.c: 795:                         EUSART_Write('F');
  4217   001458  0E46               	movlw	70
  4218   00145A  ECFB  F010         	call	_EUSART_Write
  4219   00145E                     
  4220                           ;main.c: 796:                         opened_flag=0;
  4221   00145E  0E00               	movlw	0
  4222   001460  6E19               	movwf	_opened_flag^0,c
  4223   001462                     
  4224                           ;main.c: 797:                         fire_alarm=0;
  4225   001462  0E00               	movlw	0
  4226   001464  6E10               	movwf	_fire_alarm^0,c
  4227   001466                     l7423:
  4228                           
  4229                           ;main.c: 800:             if(TC74_A7_TempValue>0x37)
  4230   001466  0E37               	movlw	55
  4231   001468  641F               	cpfsgt	_TC74_A7_TempValue^0,c
  4232   00146A  EF39  F00A         	goto	u5581
  4233   00146E  EF3B  F00A         	goto	u5580
  4234   001472                     u5581:
  4235   001472  EF50  F00A         	goto	l7439
  4236   001476                     u5580:
  4237   001476                     
  4238                           ;main.c: 801:             {;main.c: 802:                 if(fire_alarm==0){
  4239   001476  5010               	movf	_fire_alarm^0,w,c
  4240   001478  A4D8               	btfss	status,2,c
  4241   00147A  EF41  F00A         	goto	u5591
  4242   00147E  EF43  F00A         	goto	u5590
  4243   001482                     u5591:
  4244   001482  EF50  F00A         	goto	l7439
  4245   001486                     u5590:
  4246   001486                     
  4247                           ;main.c: 803:                     EUSART_Write('B');
  4248   001486  0E42               	movlw	66
  4249   001488  ECFB  F010         	call	_EUSART_Write
  4250   00148C                     
  4251                           ;main.c: 804:                     fire_alarm=1;
  4252   00148C  0E01               	movlw	1
  4253   00148E  6E10               	movwf	_fire_alarm^0,c
  4254   001490                     
  4255                           ;main.c: 805:                     back_to_safety=0;
  4256   001490  0E00               	movlw	0
  4257   001492  6E48               	movwf	_back_to_safety^0,c
  4258   001494                     
  4259                           ;main.c: 806:                     opened_flag=0;
  4260   001494  0E00               	movlw	0
  4261   001496  6E19               	movwf	_opened_flag^0,c
  4262   001498                     
  4263                           ;main.c: 807:                     windows1_state=0x01;
  4264   001498  0E01               	movlw	1
  4265   00149A  6E13               	movwf	_windows1_state^0,c
  4266   00149C                     
  4267                           ;main.c: 808:                     windows2_state=0x01;
  4268   00149C  0E01               	movlw	1
  4269   00149E  6E12               	movwf	_windows2_state^0,c
  4270   0014A0                     l7439:
  4271                           
  4272                           ;main.c: 814:           pressed_button = keypad_get_value();
  4273   0014A0  EC60  F00A         	call	_keypad_get_value	;wreg free
  4274   0014A4  6E49               	movwf	_pressed_button^0,c
  4275   0014A6                     
  4276                           ;main.c: 815:           if(pressed_button == 'N'){
  4277   0014A6  0E4E               	movlw	78
  4278   0014A8  1849               	xorwf	_pressed_button^0,w,c
  4279   0014AA  A4D8               	btfss	status,2,c
  4280   0014AC  EF5A  F00A         	goto	u5601
  4281   0014B0  EF5C  F00A         	goto	u5600
  4282   0014B4                     u5601:
  4283   0014B4  EFA6  F009         	goto	l7373
  4284   0014B8                     u5600:
  4285   0014B8  EF7F  F001         	goto	l6669
  4286   0014BC  EF5B  F000         	goto	start
  4287   0014C0                     __end_of_main:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _keypad_get_value *****************
  4291 ;; Defined at:
  4292 ;;		line 73 in file "AECUL_Modules/KEYPAD/KEYPAD.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  l_columns_co    1   10[BANK0 ] unsigned char 
  4297 ;;  l_rows_count    1    9[BANK0 ] unsigned char 
  4298 ;;  l_counter       1    8[BANK0 ] unsigned char 
  4299 ;;  column_logic    1    7[BANK0 ] unsigned char 
  4300 ;;  clicked_valu    1    6[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      unsigned char 
  4303 ;; Registers used:
  4304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        7 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 8
  4317 ;; This function calls:
  4318 ;;		_column_pin_read__logic
  4319 ;;		_row_pin_write__logic
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text1
  4326   0014C0                     __ptext1:
  4327                           	callstack 0
  4328   0014C0                     _keypad_get_value:
  4329                           	callstack 22
  4330   0014C0                     
  4331                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 74:     uint8_t clicked_value=0xFF;
  4332   0014C0  0100               	movlb	0	; () banked
  4333   0014C2  69A2               	setf	keypad_get_value@clicked_value& (0+255),b
  4334   0014C4                     
  4335                           ; BSR set to: 0
  4336                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 75:      uint8_t l_rows_counter = 0, l_columns_counter =
      +                           0, l_counter = 0;
  4337   0014C4  0E00               	movlw	0
  4338   0014C6  6FA5               	movwf	keypad_get_value@l_rows_counter& (0+255),b
  4339   0014C8  0E00               	movlw	0
  4340   0014CA  6FA4               	movwf	keypad_get_value@l_counter& (0+255),b
  4341                           
  4342                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 76:     uint8_t column_logic = 0;
  4343   0014CC  0E00               	movlw	0
  4344   0014CE  6FA3               	movwf	keypad_get_value@column_logic& (0+255),b
  4345                           
  4346                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 77:     for(l_rows_counter=0; l_rows_counter<4; l_rows_c
      +                          ounter++){
  4347   0014D0  0E00               	movlw	0
  4348   0014D2  6FA5               	movwf	keypad_get_value@l_rows_counter& (0+255),b
  4349   0014D4                     l6213:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 78:             for(l_counter=0; l_counter<4; l_counter+
      +                          +){
  4353   0014D4  0E00               	movlw	0
  4354   0014D6  6FA4               	movwf	keypad_get_value@l_counter& (0+255),b
  4355   0014D8                     l6219:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 79:                 row_pin_write__logic(rows[l_counter]
      +                          ,0);
  4359   0014D8  0E00               	movlw	0
  4360   0014DA  6F9C               	movwf	row_pin_write__logic@state& (0+255),b
  4361   0014DC  0E44               	movlw	low _rows
  4362   0014DE  25A4               	addwf	keypad_get_value@l_counter& (0+255),w,b
  4363   0014E0  6ED9               	movwf	fsr2l,c
  4364   0014E2  6ADA               	clrf	fsr2h,c
  4365   0014E4  0E00               	movlw	high _rows
  4366   0014E6  22DA               	addwfc	fsr2h,f,c
  4367   0014E8  50DF               	movf	indf2,w,c
  4368   0014EA  EC99  F00B         	call	_row_pin_write__logic
  4369   0014EE                     
  4370                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 80:             }
  4371   0014EE  0100               	movlb	0	; () banked
  4372   0014F0  2BA4               	incf	keypad_get_value@l_counter& (0+255),f,b
  4373   0014F2                     
  4374                           ; BSR set to: 0
  4375   0014F2  0E03               	movlw	3
  4376   0014F4  65A4               	cpfsgt	keypad_get_value@l_counter& (0+255),b
  4377   0014F6  EF7F  F00A         	goto	u4021
  4378   0014FA  EF81  F00A         	goto	u4020
  4379   0014FE                     u4021:
  4380   0014FE  EF6C  F00A         	goto	l6219
  4381   001502                     u4020:
  4382   001502                     
  4383                           ; BSR set to: 0
  4384                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 81:                 row_pin_write__logic(rows[l_rows_cou
      +                          nter],1);
  4385   001502  0E01               	movlw	1
  4386   001504  6F9C               	movwf	row_pin_write__logic@state& (0+255),b
  4387   001506  0E44               	movlw	low _rows
  4388   001508  25A5               	addwf	keypad_get_value@l_rows_counter& (0+255),w,b
  4389   00150A  6ED9               	movwf	fsr2l,c
  4390   00150C  6ADA               	clrf	fsr2h,c
  4391   00150E  0E00               	movlw	high _rows
  4392   001510  22DA               	addwfc	fsr2h,f,c
  4393   001512  50DF               	movf	indf2,w,c
  4394   001514  EC99  F00B         	call	_row_pin_write__logic
  4395   001518                     
  4396                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 82:             _delay((unsigned long)((10)*(16000000/40
      +                          00.0)));
  4397   001518  0E34               	movlw	52
  4398   00151A  0100               	movlb	0	; () banked
  4399   00151C  6FA0               	movwf	??_keypad_get_value& (0+255),b
  4400   00151E  0EF1               	movlw	241
  4401   001520                     u5897:
  4402   001520  2EE8               	decfsz	wreg,f,c
  4403   001522  D7FE               	bra	u5897
  4404   001524  2FA0               	decfsz	??_keypad_get_value& (0+255),f,b
  4405   001526  D7FC               	bra	u5897
  4406   001528  F000 F000          	nop2	
  4407   00152C                     
  4408                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 83:             for(l_columns_counter=0; l_columns_count
      +                          er<4; l_columns_counter++){
  4409   00152C  0E00               	movlw	0
  4410   00152E  0100               	movlb	0	; () banked
  4411   001530  6FA6               	movwf	keypad_get_value@l_columns_counter& (0+255),b
  4412   001532                     l6235:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 84:                 column_logic = column_pin_read__logi
      +                          c(columns[l_columns_counter]);
  4416   001532  0EAE               	movlw	low _columns
  4417   001534  25A6               	addwf	keypad_get_value@l_columns_counter& (0+255),w,b
  4418   001536  6ED9               	movwf	fsr2l,c
  4419   001538  6ADA               	clrf	fsr2h,c
  4420   00153A  0E00               	movlw	high _columns
  4421   00153C  22DA               	addwfc	fsr2h,f,c
  4422   00153E  50DF               	movf	indf2,w,c
  4423   001540  EC79  F00D         	call	_column_pin_read__logic
  4424   001544  0100               	movlb	0	; () banked
  4425   001546  6FA3               	movwf	keypad_get_value@column_logic& (0+255),b
  4426   001548                     
  4427                           ; BSR set to: 0
  4428                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 85:                 if(1 == column_logic){
  4429   001548  05A3               	decf	keypad_get_value@column_logic& (0+255),w,b
  4430   00154A  A4D8               	btfss	status,2,c
  4431   00154C  EFAA  F00A         	goto	u4031
  4432   001550  EFAC  F00A         	goto	u4030
  4433   001554                     u4031:
  4434   001554  EFC0  F00A         	goto	l6241
  4435   001558                     u4030:
  4436   001558                     
  4437                           ; BSR set to: 0
  4438                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 86:                     clicked_value = btn_values[l_row
      +                          s_counter][l_columns_counter];
  4439   001558  51A5               	movf	keypad_get_value@l_rows_counter& (0+255),w,b
  4440   00155A  0D04               	mullw	4
  4441   00155C  0E4B               	movlw	low _btn_values
  4442   00155E  24F3               	addwf	243,w,c
  4443   001560  6FA0               	movwf	??_keypad_get_value& (0+255),b
  4444   001562  0EFE               	movlw	high _btn_values
  4445   001564  20F4               	addwfc	prodh,w,c
  4446   001566  6FA1               	movwf	(??_keypad_get_value+1)& (0+255),b
  4447   001568  51A6               	movf	keypad_get_value@l_columns_counter& (0+255),w,b
  4448   00156A  27A0               	addwf	??_keypad_get_value& (0+255),f,b
  4449   00156C  0E00               	movlw	0
  4450   00156E  23A1               	addwfc	(??_keypad_get_value+1)& (0+255),f,b
  4451   001570  C0A0  FFF6         	movff	??_keypad_get_value,tblptrl
  4452   001574  C0A1  FFF7         	movff	??_keypad_get_value+1,tblptrh
  4453   001578                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4454   001578  6AF8               	clrf	tblptru,c
  4455   00157A                     	endif
  4456   00157A                     	if	0	;tblptru may be non-zero
  4457   00157A                     	endif
  4458   00157A  0008               	tblrd		*
  4459   00157C  CFF5 F0A2          	movff	tablat,keypad_get_value@clicked_value
  4460   001580                     l6241:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 88:             }
  4464   001580  2BA6               	incf	keypad_get_value@l_columns_counter& (0+255),f,b
  4465   001582                     
  4466                           ; BSR set to: 0
  4467   001582  0E03               	movlw	3
  4468   001584  65A6               	cpfsgt	keypad_get_value@l_columns_counter& (0+255),b
  4469   001586  EFC7  F00A         	goto	u4041
  4470   00158A  EFC9  F00A         	goto	u4040
  4471   00158E                     u4041:
  4472   00158E  EF99  F00A         	goto	l6235
  4473   001592                     u4040:
  4474   001592                     
  4475                           ; BSR set to: 0
  4476                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 89:         }
  4477   001592  2BA5               	incf	keypad_get_value@l_rows_counter& (0+255),f,b
  4478   001594                     
  4479                           ; BSR set to: 0
  4480   001594  0E03               	movlw	3
  4481   001596  65A5               	cpfsgt	keypad_get_value@l_rows_counter& (0+255),b
  4482   001598  EFD0  F00A         	goto	u4051
  4483   00159C  EFD2  F00A         	goto	u4050
  4484   0015A0                     u4051:
  4485   0015A0  EF6A  F00A         	goto	l6213
  4486   0015A4                     u4050:
  4487   0015A4                     
  4488                           ; BSR set to: 0
  4489                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 90:     return clicked_value;
  4490   0015A4  51A2               	movf	keypad_get_value@clicked_value& (0+255),w,b
  4491   0015A6                     
  4492                           ; BSR set to: 0
  4493   0015A6  0012               	return		;funcret
  4494   0015A8                     __end_of_keypad_get_value:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function _row_pin_write__logic *****************
  4498 ;; Defined at:
  4499 ;;		line 7 in file "AECUL_Modules/KEYPAD/KEYPAD.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  value           1    wreg     unsigned char 
  4502 ;;  state           1    0[BANK0 ] unsigned char 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  value           1    3[BANK0 ] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4514 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;Total ram usage:        4 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 7
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_keypad_get_value
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text2
  4529   001732                     __ptext2:
  4530                           	callstack 0
  4531   001732                     _row_pin_write__logic:
  4532                           	callstack 22
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;incstack = 0
  4536                           ;row_pin_write__logic@value stored from wreg
  4537   001732  0100               	movlb	0	; () banked
  4538   001734  6F9F               	movwf	row_pin_write__logic@value& (0+255),b
  4539   001736                     
  4540                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 7: static void row_pin_write__logic(uint8_t value,uint8_
      +                          t state);AECUL_Modules/KEYPAD/KEYPAD.c: 8: {;AECUL_Modules/KEYPAD/KEYPAD.c: 9:     if(st
      +                          ate == 1){
  4541   001736  0100               	movlb	0	; () banked
  4542   001738  059C               	decf	row_pin_write__logic@state& (0+255),w,b
  4543   00173A  A4D8               	btfss	status,2,c
  4544   00173C  EFA2  F00B         	goto	u3981
  4545   001740  EFA4  F00B         	goto	u3980
  4546   001744                     u3981:
  4547   001744  EFDB  F00B         	goto	l6129
  4548   001748                     u3980:
  4549   001748  EFB2  F00B         	goto	l6125
  4550   00174C                     l32:
  4551                           
  4552                           ; BSR set to: 0
  4553   00174C  888A               	bsf	138,4,c	;volatile
  4554   00174E  EFF8  F00B         	goto	l61
  4555   001752                     l36:
  4556                           
  4557                           ; BSR set to: 0
  4558   001752  8A8A               	bsf	138,5,c	;volatile
  4559   001754  EFF8  F00B         	goto	l61
  4560   001758                     l39:
  4561                           
  4562                           ; BSR set to: 0
  4563   001758  8C8A               	bsf	138,6,c	;volatile
  4564   00175A  EFF8  F00B         	goto	l61
  4565   00175E                     l42:
  4566                           
  4567                           ; BSR set to: 0
  4568   00175E  8E8A               	bsf	138,7,c	;volatile
  4569   001760  EFF8  F00B         	goto	l61
  4570   001764                     l6125:
  4571                           
  4572                           ; BSR set to: 0
  4573   001764  519F               	movf	row_pin_write__logic@value& (0+255),w,b
  4574   001766  6F9D               	movwf	??_row_pin_write__logic& (0+255),b
  4575   001768  6B9E               	clrf	(??_row_pin_write__logic+1)& (0+255),b
  4576                           
  4577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4578                           ; Switch size 1, requested type "simple"
  4579                           ; Number of cases is 1, Range of values is 0 to 0
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte            4     3 (average)
  4583                           ;	Chosen strategy is simple_byte
  4584   00176A  519E               	movf	(??_row_pin_write__logic+1)& (0+255),w,b
  4585   00176C  0A00               	xorlw	0	; case 0
  4586   00176E  B4D8               	btfsc	status,2,c
  4587   001770  EFBC  F00B         	goto	l7637
  4588   001774  EFF8  F00B         	goto	l61
  4589   001778                     l7637:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ; Switch size 1, requested type "simple"
  4593                           ; Number of cases is 4, Range of values is 1 to 4
  4594                           ; switch strategies available:
  4595                           ; Name         Instructions Cycles
  4596                           ; simple_byte           13     7 (average)
  4597                           ;	Chosen strategy is simple_byte
  4598   001778  519D               	movf	??_row_pin_write__logic& (0+255),w,b
  4599   00177A  0A01               	xorlw	1	; case 1
  4600   00177C  B4D8               	btfsc	status,2,c
  4601   00177E  EFA6  F00B         	goto	l32
  4602   001782  0A03               	xorlw	3	; case 2
  4603   001784  B4D8               	btfsc	status,2,c
  4604   001786  EFA9  F00B         	goto	l36
  4605   00178A  0A01               	xorlw	1	; case 3
  4606   00178C  B4D8               	btfsc	status,2,c
  4607   00178E  EFAC  F00B         	goto	l39
  4608   001792  0A07               	xorlw	7	; case 4
  4609   001794  B4D8               	btfsc	status,2,c
  4610   001796  EFAF  F00B         	goto	l42
  4611   00179A  EFF8  F00B         	goto	l61
  4612   00179E                     l48:
  4613                           
  4614                           ; BSR set to: 0
  4615   00179E  988A               	bcf	138,4,c	;volatile
  4616   0017A0  EFF8  F00B         	goto	l61
  4617   0017A4                     l52:
  4618                           
  4619                           ; BSR set to: 0
  4620   0017A4  9A8A               	bcf	138,5,c	;volatile
  4621   0017A6  EFF8  F00B         	goto	l61
  4622   0017AA                     l55:
  4623                           
  4624                           ; BSR set to: 0
  4625   0017AA  9C8A               	bcf	138,6,c	;volatile
  4626   0017AC  EFF8  F00B         	goto	l61
  4627   0017B0                     l58:
  4628                           
  4629                           ; BSR set to: 0
  4630   0017B0  9E8A               	bcf	138,7,c	;volatile
  4631   0017B2  EFF8  F00B         	goto	l61
  4632   0017B6                     l6129:
  4633                           
  4634                           ; BSR set to: 0
  4635   0017B6  519F               	movf	row_pin_write__logic@value& (0+255),w,b
  4636   0017B8  6F9D               	movwf	??_row_pin_write__logic& (0+255),b
  4637   0017BA  6B9E               	clrf	(??_row_pin_write__logic+1)& (0+255),b
  4638                           
  4639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4640                           ; Switch size 1, requested type "simple"
  4641                           ; Number of cases is 1, Range of values is 0 to 0
  4642                           ; switch strategies available:
  4643                           ; Name         Instructions Cycles
  4644                           ; simple_byte            4     3 (average)
  4645                           ;	Chosen strategy is simple_byte
  4646   0017BC  519E               	movf	(??_row_pin_write__logic+1)& (0+255),w,b
  4647   0017BE  0A00               	xorlw	0	; case 0
  4648   0017C0  B4D8               	btfsc	status,2,c
  4649   0017C2  EFE5  F00B         	goto	l7639
  4650   0017C6  EFF8  F00B         	goto	l61
  4651   0017CA                     l7639:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ; Switch size 1, requested type "simple"
  4655                           ; Number of cases is 4, Range of values is 1 to 4
  4656                           ; switch strategies available:
  4657                           ; Name         Instructions Cycles
  4658                           ; simple_byte           13     7 (average)
  4659                           ;	Chosen strategy is simple_byte
  4660   0017CA  519D               	movf	??_row_pin_write__logic& (0+255),w,b
  4661   0017CC  0A01               	xorlw	1	; case 1
  4662   0017CE  B4D8               	btfsc	status,2,c
  4663   0017D0  EFCF  F00B         	goto	l48
  4664   0017D4  0A03               	xorlw	3	; case 2
  4665   0017D6  B4D8               	btfsc	status,2,c
  4666   0017D8  EFD2  F00B         	goto	l52
  4667   0017DC  0A01               	xorlw	1	; case 3
  4668   0017DE  B4D8               	btfsc	status,2,c
  4669   0017E0  EFD5  F00B         	goto	l55
  4670   0017E4  0A07               	xorlw	7	; case 4
  4671   0017E6  B4D8               	btfsc	status,2,c
  4672   0017E8  EFD8  F00B         	goto	l58
  4673   0017EC  EFF8  F00B         	goto	l61
  4674   0017F0                     l61:
  4675                           
  4676                           ; BSR set to: 0
  4677   0017F0  0012               	return		;funcret
  4678   0017F2                     __end_of_row_pin_write__logic:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _column_pin_read__logic *****************
  4682 ;; Defined at:
  4683 ;;		line 49 in file "AECUL_Modules/KEYPAD/KEYPAD.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  value           1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  value           1    2[BANK0 ] unsigned char 
  4688 ;;  pin_state       1    3[BANK0 ] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      unsigned char 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;Total ram usage:        4 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 7
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_keypad_get_value
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text3
  4713   001AF2                     __ptext3:
  4714                           	callstack 0
  4715   001AF2                     _column_pin_read__logic:
  4716                           	callstack 22
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;incstack = 0
  4720                           ;column_pin_read__logic@value stored from wreg
  4721   001AF2  0100               	movlb	0	; () banked
  4722   001AF4  6F9E               	movwf	column_pin_read__logic@value& (0+255),b
  4723   001AF6                     
  4724                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 50:     uint8_t pin_state=0;
  4725   001AF6  0E00               	movlw	0
  4726   001AF8  0100               	movlb	0	; () banked
  4727   001AFA  6F9F               	movwf	column_pin_read__logic@pin_state& (0+255),b
  4728                           
  4729                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 51:     switch (value){
  4730   001AFC  EF98  F00D         	goto	l6147
  4731   001B00                     l65:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 53:                 pin_state= PORTBbits.RB0;
  4735   001B00  0E00               	movlw	0
  4736   001B02  B081               	btfsc	129,0,c	;volatile
  4737   001B04  0E01               	movlw	1
  4738   001B06  6F9F               	movwf	column_pin_read__logic@pin_state& (0+255),b
  4739                           
  4740                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 54:                 break;
  4741   001B08  EFB5  F00D         	goto	l6149
  4742   001B0C                     l67:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 56:                 pin_state= PORTBbits.RB1;
  4746   001B0C  0E00               	movlw	0
  4747   001B0E  B281               	btfsc	129,1,c	;volatile
  4748   001B10  0E01               	movlw	1
  4749   001B12  6F9F               	movwf	column_pin_read__logic@pin_state& (0+255),b
  4750                           
  4751                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 57:                 break;
  4752   001B14  EFB5  F00D         	goto	l6149
  4753   001B18                     l68:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 59:                 pin_state= PORTBbits.RB2;
  4757   001B18  0E00               	movlw	0
  4758   001B1A  B481               	btfsc	129,2,c	;volatile
  4759   001B1C  0E01               	movlw	1
  4760   001B1E  6F9F               	movwf	column_pin_read__logic@pin_state& (0+255),b
  4761                           
  4762                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 60:                 break;
  4763   001B20  EFB5  F00D         	goto	l6149
  4764   001B24                     l69:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 62:                 pin_state= PORTBbits.RB3;
  4768   001B24  0E00               	movlw	0
  4769   001B26  B681               	btfsc	129,3,c	;volatile
  4770   001B28  0E01               	movlw	1
  4771   001B2A  6F9F               	movwf	column_pin_read__logic@pin_state& (0+255),b
  4772                           
  4773                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 63:                 break;
  4774   001B2C  EFB5  F00D         	goto	l6149
  4775   001B30                     l6147:
  4776                           
  4777                           ; BSR set to: 0
  4778   001B30  519E               	movf	column_pin_read__logic@value& (0+255),w,b
  4779   001B32  6F9C               	movwf	??_column_pin_read__logic& (0+255),b
  4780   001B34  6B9D               	clrf	(??_column_pin_read__logic+1)& (0+255),b
  4781                           
  4782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4783                           ; Switch size 1, requested type "simple"
  4784                           ; Number of cases is 1, Range of values is 0 to 0
  4785                           ; switch strategies available:
  4786                           ; Name         Instructions Cycles
  4787                           ; simple_byte            4     3 (average)
  4788                           ;	Chosen strategy is simple_byte
  4789   001B36  519D               	movf	(??_column_pin_read__logic+1)& (0+255),w,b
  4790   001B38  0A00               	xorlw	0	; case 0
  4791   001B3A  B4D8               	btfsc	status,2,c
  4792   001B3C  EFA2  F00D         	goto	l7641
  4793   001B40  EFB5  F00D         	goto	l6149
  4794   001B44                     l7641:
  4795                           
  4796                           ; BSR set to: 0
  4797                           ; Switch size 1, requested type "simple"
  4798                           ; Number of cases is 4, Range of values is 1 to 4
  4799                           ; switch strategies available:
  4800                           ; Name         Instructions Cycles
  4801                           ; simple_byte           13     7 (average)
  4802                           ;	Chosen strategy is simple_byte
  4803   001B44  519C               	movf	??_column_pin_read__logic& (0+255),w,b
  4804   001B46  0A01               	xorlw	1	; case 1
  4805   001B48  B4D8               	btfsc	status,2,c
  4806   001B4A  EF80  F00D         	goto	l65
  4807   001B4E  0A03               	xorlw	3	; case 2
  4808   001B50  B4D8               	btfsc	status,2,c
  4809   001B52  EF86  F00D         	goto	l67
  4810   001B56  0A01               	xorlw	1	; case 3
  4811   001B58  B4D8               	btfsc	status,2,c
  4812   001B5A  EF8C  F00D         	goto	l68
  4813   001B5E  0A07               	xorlw	7	; case 4
  4814   001B60  B4D8               	btfsc	status,2,c
  4815   001B62  EF92  F00D         	goto	l69
  4816   001B66  EFB5  F00D         	goto	l6149
  4817   001B6A                     l6149:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;AECUL_Modules/KEYPAD/KEYPAD.c: 67:     return pin_state;
  4821   001B6A  519F               	movf	column_pin_read__logic@pin_state& (0+255),w,b
  4822   001B6C                     
  4823                           ; BSR set to: 0
  4824   001B6C  0012               	return		;funcret
  4825   001B6E                     __end_of_column_pin_read__logic:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function ___awmod *****************
  4829 ;; Defined at:
  4830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  dividend        2    0[BANK0 ] int 
  4833 ;;  divisor         2    2[BANK0 ] int 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  sign            1    5[BANK0 ] unsigned char 
  4836 ;;  counter         1    4[BANK0 ] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  2    0[BANK0 ] int 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:        6 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 7
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text4
  4861   0017F2                     __ptext4:
  4862                           	callstack 0
  4863   0017F2                     ___awmod:
  4864                           	callstack 23
  4865   0017F2  0E00               	movlw	0
  4866   0017F4  0100               	movlb	0	; () banked
  4867   0017F6  6FA1               	movwf	___awmod@sign& (0+255),b
  4868   0017F8                     
  4869                           ; BSR set to: 0
  4870   0017F8  BF9D               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4871   0017FA  EF03  F00C         	goto	u4220
  4872   0017FE  EF01  F00C         	goto	u4221
  4873   001802                     u4221:
  4874   001802  EF09  F00C         	goto	l6401
  4875   001806                     u4220:
  4876   001806                     
  4877                           ; BSR set to: 0
  4878   001806  6D9C               	negf	___awmod@dividend& (0+255),b
  4879   001808  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4880   00180A  B0D8               	btfsc	status,0,c
  4881   00180C  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4882   00180E                     
  4883                           ; BSR set to: 0
  4884   00180E  0E01               	movlw	1
  4885   001810  6FA1               	movwf	___awmod@sign& (0+255),b
  4886   001812                     l6401:
  4887                           
  4888                           ; BSR set to: 0
  4889   001812  BF9F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4890   001814  EF10  F00C         	goto	u4230
  4891   001818  EF0E  F00C         	goto	u4231
  4892   00181C                     u4231:
  4893   00181C  EF14  F00C         	goto	l6405
  4894   001820                     u4230:
  4895   001820                     
  4896                           ; BSR set to: 0
  4897   001820  6D9E               	negf	___awmod@divisor& (0+255),b
  4898   001822  1F9F               	comf	(___awmod@divisor+1)& (0+255),f,b
  4899   001824  B0D8               	btfsc	status,0,c
  4900   001826  2B9F               	incf	(___awmod@divisor+1)& (0+255),f,b
  4901   001828                     l6405:
  4902                           
  4903                           ; BSR set to: 0
  4904   001828  519E               	movf	___awmod@divisor& (0+255),w,b
  4905   00182A  119F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4906   00182C  B4D8               	btfsc	status,2,c
  4907   00182E  EF1B  F00C         	goto	u4241
  4908   001832  EF1D  F00C         	goto	u4240
  4909   001836                     u4241:
  4910   001836  EF41  F00C         	goto	l6421
  4911   00183A                     u4240:
  4912   00183A                     
  4913                           ; BSR set to: 0
  4914   00183A  0E01               	movlw	1
  4915   00183C  6FA0               	movwf	___awmod@counter& (0+255),b
  4916   00183E  EF25  F00C         	goto	l6411
  4917   001842                     l6409:
  4918                           
  4919                           ; BSR set to: 0
  4920   001842  90D8               	bcf	status,0,c
  4921   001844  379E               	rlcf	___awmod@divisor& (0+255),f,b
  4922   001846  379F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4923   001848  2BA0               	incf	___awmod@counter& (0+255),f,b
  4924   00184A                     l6411:
  4925                           
  4926                           ; BSR set to: 0
  4927   00184A  AF9F               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4928   00184C  EF2A  F00C         	goto	u4251
  4929   001850  EF2C  F00C         	goto	u4250
  4930   001854                     u4251:
  4931   001854  EF21  F00C         	goto	l6409
  4932   001858                     u4250:
  4933   001858                     l6413:
  4934                           
  4935                           ; BSR set to: 0
  4936   001858  519E               	movf	___awmod@divisor& (0+255),w,b
  4937   00185A  5D9C               	subwf	___awmod@dividend& (0+255),w,b
  4938   00185C  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4939   00185E  599D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4940   001860  A0D8               	btfss	status,0,c
  4941   001862  EF35  F00C         	goto	u4261
  4942   001866  EF37  F00C         	goto	u4260
  4943   00186A                     u4261:
  4944   00186A  EF3B  F00C         	goto	l6417
  4945   00186E                     u4260:
  4946   00186E                     
  4947                           ; BSR set to: 0
  4948   00186E  519E               	movf	___awmod@divisor& (0+255),w,b
  4949   001870  5F9C               	subwf	___awmod@dividend& (0+255),f,b
  4950   001872  519F               	movf	(___awmod@divisor+1)& (0+255),w,b
  4951   001874  5B9D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4952   001876                     l6417:
  4953                           
  4954                           ; BSR set to: 0
  4955   001876  90D8               	bcf	status,0,c
  4956   001878  339F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4957   00187A  339E               	rrcf	___awmod@divisor& (0+255),f,b
  4958   00187C                     
  4959                           ; BSR set to: 0
  4960   00187C  2FA0               	decfsz	___awmod@counter& (0+255),f,b
  4961   00187E  EF2C  F00C         	goto	l6413
  4962   001882                     l6421:
  4963                           
  4964                           ; BSR set to: 0
  4965   001882  51A1               	movf	___awmod@sign& (0+255),w,b
  4966   001884  B4D8               	btfsc	status,2,c
  4967   001886  EF47  F00C         	goto	u4271
  4968   00188A  EF49  F00C         	goto	u4270
  4969   00188E                     u4271:
  4970   00188E  EF4D  F00C         	goto	l6425
  4971   001892                     u4270:
  4972   001892                     
  4973                           ; BSR set to: 0
  4974   001892  6D9C               	negf	___awmod@dividend& (0+255),b
  4975   001894  1F9D               	comf	(___awmod@dividend+1)& (0+255),f,b
  4976   001896  B0D8               	btfsc	status,0,c
  4977   001898  2B9D               	incf	(___awmod@dividend+1)& (0+255),f,b
  4978   00189A                     l6425:
  4979                           
  4980                           ; BSR set to: 0
  4981   00189A  C09C  F09C         	movff	___awmod@dividend,?___awmod
  4982   00189E  C09D  F09D         	movff	___awmod@dividend+1,?___awmod+1
  4983   0018A2                     
  4984                           ; BSR set to: 0
  4985   0018A2  0012               	return		;funcret
  4986   0018A4                     __end_of___awmod:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function ___awdiv *****************
  4990 ;; Defined at:
  4991 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  dividend        2    0[BANK0 ] int 
  4994 ;;  divisor         2    2[BANK0 ] int 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  quotient        2    6[BANK0 ] int 
  4997 ;;  sign            1    5[BANK0 ] unsigned char 
  4998 ;;  counter         1    4[BANK0 ] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  2    0[BANK0 ] int 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:        8 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 7
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text5
  5023   0015A8                     __ptext5:
  5024                           	callstack 0
  5025   0015A8                     ___awdiv:
  5026                           	callstack 23
  5027   0015A8  0E00               	movlw	0
  5028   0015AA  0100               	movlb	0	; () banked
  5029   0015AC  6FA1               	movwf	___awdiv@sign& (0+255),b
  5030   0015AE                     
  5031                           ; BSR set to: 0
  5032   0015AE  BF9F               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5033   0015B0  EFDE  F00A         	goto	u4160
  5034   0015B4  EFDC  F00A         	goto	u4161
  5035   0015B8                     u4161:
  5036   0015B8  EFE4  F00A         	goto	l6357
  5037   0015BC                     u4160:
  5038   0015BC                     
  5039                           ; BSR set to: 0
  5040   0015BC  6D9E               	negf	___awdiv@divisor& (0+255),b
  5041   0015BE  1F9F               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5042   0015C0  B0D8               	btfsc	status,0,c
  5043   0015C2  2B9F               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5044   0015C4                     
  5045                           ; BSR set to: 0
  5046   0015C4  0E01               	movlw	1
  5047   0015C6  6FA1               	movwf	___awdiv@sign& (0+255),b
  5048   0015C8                     l6357:
  5049                           
  5050                           ; BSR set to: 0
  5051   0015C8  BF9D               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5052   0015CA  EFEB  F00A         	goto	u4170
  5053   0015CE  EFE9  F00A         	goto	u4171
  5054   0015D2                     u4171:
  5055   0015D2  EFF1  F00A         	goto	l6363
  5056   0015D6                     u4170:
  5057   0015D6                     
  5058                           ; BSR set to: 0
  5059   0015D6  6D9C               	negf	___awdiv@dividend& (0+255),b
  5060   0015D8  1F9D               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5061   0015DA  B0D8               	btfsc	status,0,c
  5062   0015DC  2B9D               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5063   0015DE                     
  5064                           ; BSR set to: 0
  5065   0015DE  0E01               	movlw	1
  5066   0015E0  1BA1               	xorwf	___awdiv@sign& (0+255),f,b
  5067   0015E2                     l6363:
  5068                           
  5069                           ; BSR set to: 0
  5070   0015E2  0E00               	movlw	0
  5071   0015E4  6FA3               	movwf	(___awdiv@quotient+1)& (0+255),b
  5072   0015E6  0E00               	movlw	0
  5073   0015E8  6FA2               	movwf	___awdiv@quotient& (0+255),b
  5074   0015EA                     
  5075                           ; BSR set to: 0
  5076   0015EA  519E               	movf	___awdiv@divisor& (0+255),w,b
  5077   0015EC  119F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5078   0015EE  B4D8               	btfsc	status,2,c
  5079   0015F0  EFFC  F00A         	goto	u4181
  5080   0015F4  EFFE  F00A         	goto	u4180
  5081   0015F8                     u4181:
  5082   0015F8  EF26  F00B         	goto	l6385
  5083   0015FC                     u4180:
  5084   0015FC                     
  5085                           ; BSR set to: 0
  5086   0015FC  0E01               	movlw	1
  5087   0015FE  6FA0               	movwf	___awdiv@counter& (0+255),b
  5088   001600  EF06  F00B         	goto	l6371
  5089   001604                     l6369:
  5090                           
  5091                           ; BSR set to: 0
  5092   001604  90D8               	bcf	status,0,c
  5093   001606  379E               	rlcf	___awdiv@divisor& (0+255),f,b
  5094   001608  379F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5095   00160A  2BA0               	incf	___awdiv@counter& (0+255),f,b
  5096   00160C                     l6371:
  5097                           
  5098                           ; BSR set to: 0
  5099   00160C  AF9F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5100   00160E  EF0B  F00B         	goto	u4191
  5101   001612  EF0D  F00B         	goto	u4190
  5102   001616                     u4191:
  5103   001616  EF02  F00B         	goto	l6369
  5104   00161A                     u4190:
  5105   00161A                     l6373:
  5106                           
  5107                           ; BSR set to: 0
  5108   00161A  90D8               	bcf	status,0,c
  5109   00161C  37A2               	rlcf	___awdiv@quotient& (0+255),f,b
  5110   00161E  37A3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5111   001620                     
  5112                           ; BSR set to: 0
  5113   001620  519E               	movf	___awdiv@divisor& (0+255),w,b
  5114   001622  5D9C               	subwf	___awdiv@dividend& (0+255),w,b
  5115   001624  519F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5116   001626  599D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5117   001628  A0D8               	btfss	status,0,c
  5118   00162A  EF19  F00B         	goto	u4201
  5119   00162E  EF1B  F00B         	goto	u4200
  5120   001632                     u4201:
  5121   001632  EF20  F00B         	goto	l6381
  5122   001636                     u4200:
  5123   001636                     
  5124                           ; BSR set to: 0
  5125   001636  519E               	movf	___awdiv@divisor& (0+255),w,b
  5126   001638  5F9C               	subwf	___awdiv@dividend& (0+255),f,b
  5127   00163A  519F               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5128   00163C  5B9D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5129   00163E                     
  5130                           ; BSR set to: 0
  5131   00163E  81A2               	bsf	___awdiv@quotient& (0+255),0,b
  5132   001640                     l6381:
  5133                           
  5134                           ; BSR set to: 0
  5135   001640  90D8               	bcf	status,0,c
  5136   001642  339F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5137   001644  339E               	rrcf	___awdiv@divisor& (0+255),f,b
  5138   001646                     
  5139                           ; BSR set to: 0
  5140   001646  2FA0               	decfsz	___awdiv@counter& (0+255),f,b
  5141   001648  EF0D  F00B         	goto	l6373
  5142   00164C                     l6385:
  5143                           
  5144                           ; BSR set to: 0
  5145   00164C  51A1               	movf	___awdiv@sign& (0+255),w,b
  5146   00164E  B4D8               	btfsc	status,2,c
  5147   001650  EF2C  F00B         	goto	u4211
  5148   001654  EF2E  F00B         	goto	u4210
  5149   001658                     u4211:
  5150   001658  EF32  F00B         	goto	l6389
  5151   00165C                     u4210:
  5152   00165C                     
  5153                           ; BSR set to: 0
  5154   00165C  6DA2               	negf	___awdiv@quotient& (0+255),b
  5155   00165E  1FA3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5156   001660  B0D8               	btfsc	status,0,c
  5157   001662  2BA3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5158   001664                     l6389:
  5159                           
  5160                           ; BSR set to: 0
  5161   001664  C0A2  F09C         	movff	___awdiv@quotient,?___awdiv
  5162   001668  C0A3  F09D         	movff	___awdiv@quotient+1,?___awdiv+1
  5163   00166C                     
  5164                           ; BSR set to: 0
  5165   00166C  0012               	return		;funcret
  5166   00166E                     __end_of___awdiv:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _TempSensor_TC74_Read_Temp *****************
  5170 ;; Defined at:
  5171 ;;		line 9 in file "AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  TC74_Address    1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  TC74_Address    1   12[BANK0 ] unsigned char 
  5176 ;;  TC74_TempVal    1   13[BANK0 ] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      unsigned char 
  5179 ;; Registers used:
  5180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 11
  5193 ;; This function calls:
  5194 ;;		_I2C_Read1ByteRegister
  5195 ;; This function is called by:
  5196 ;;		_main
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text6
  5201   0021AE                     __ptext6:
  5202                           	callstack 0
  5203   0021AE                     _TempSensor_TC74_Read_Temp:
  5204                           	callstack 19
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;incstack = 0
  5208                           ;TempSensor_TC74_Read_Temp@TC74_Address stored from wreg
  5209   0021AE  0100               	movlb	0	; () banked
  5210   0021B0  6FA8               	movwf	TempSensor_TC74_Read_Temp@TC74_Address& (0+255),b
  5211   0021B2                     
  5212                           ;AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c: 11:     TC74_TempValue = I2C_Read1ByteRe
      +                          gister(TC74_Address, 0x00);
  5213   0021B2  0E00               	movlw	0
  5214   0021B4  0100               	movlb	0	; () banked
  5215   0021B6  6FA5               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  5216   0021B8  51A8               	movf	TempSensor_TC74_Read_Temp@TC74_Address& (0+255),w,b
  5217   0021BA  EC38  F00D         	call	_I2C_Read1ByteRegister
  5218   0021BE  0100               	movlb	0	; () banked
  5219   0021C0  6FA9               	movwf	TempSensor_TC74_Read_Temp@TC74_TempValue& (0+255),b
  5220   0021C2                     
  5221                           ; BSR set to: 0
  5222                           ;AECUL_Modules/TemSensor_TC74/TemSensor_TC74.c: 13:     return TC74_TempValue;
  5223   0021C2  51A9               	movf	TempSensor_TC74_Read_Temp@TC74_TempValue& (0+255),w,b
  5224   0021C4                     
  5225                           ; BSR set to: 0
  5226   0021C4  0012               	return		;funcret
  5227   0021C6                     __end_of_TempSensor_TC74_Read_Temp:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _I2C_Read1ByteRegister *****************
  5231 ;; Defined at:
  5232 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  address         1    wreg     unsigned char 
  5235 ;;  reg             1    9[BANK0 ] unsigned char 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  address         1   10[BANK0 ] unsigned char 
  5238 ;;  returnValue     1   11[BANK0 ] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      unsigned char 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5248 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;Total ram usage:        3 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; Hardware stack levels required when called: 10
  5255 ;; This function calls:
  5256 ;;		_I2C_Close
  5257 ;;		_I2C_MasterWrite
  5258 ;;		_I2C_Open
  5259 ;;		_I2C_SetAddressNackCallback
  5260 ;;		_I2C_SetBuffer
  5261 ;;		_I2C_SetDataCompleteCallback
  5262 ;; This function is called by:
  5263 ;;		_TempSensor_TC74_Read_Temp
  5264 ;;		_EEPROM_24C02C_Read_Byte
  5265 ;;		_RealTimeClockDS1307_Get_Date_Time
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text7
  5270   001A70                     __ptext7:
  5271                           	callstack 0
  5272   001A70                     _I2C_Read1ByteRegister:
  5273                           	callstack 19
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;incstack = 0
  5277                           ;I2C_Read1ByteRegister@address stored from wreg
  5278   001A70  0100               	movlb	0	; () banked
  5279   001A72  6FA6               	movwf	I2C_Read1ByteRegister@address& (0+255),b
  5280   001A74                     
  5281                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  5282   001A74  0E00               	movlw	0
  5283   001A76  0100               	movlb	0	; () banked
  5284   001A78  6FA7               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
  5285   001A7A                     l6103:
  5286   001A7A  0100               	movlb	0	; () banked
  5287   001A7C  51A6               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
  5288   001A7E  ECA5  F00C         	call	_I2C_Open
  5289   001A82  0900               	iorlw	0
  5290   001A84  B4D8               	btfsc	status,2,c
  5291   001A86  EF47  F00D         	goto	u3961
  5292   001A8A  EF49  F00D         	goto	u3960
  5293   001A8E                     u3961:
  5294   001A8E  EF3D  F00D         	goto	l6103
  5295   001A92                     u3960:
  5296   001A92                     
  5297                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  5298   001A92  0E7E               	movlw	low _rd1RegCompleteHandler
  5299   001A94  0100               	movlb	0	; () banked
  5300   001A96  6FA1               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  5301   001A98  0E20               	movlw	high _rd1RegCompleteHandler
  5302   001A9A  6FA2               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  5303   001A9C  0EA7               	movlw	low I2C_Read1ByteRegister@returnValue
  5304   001A9E  6FA3               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  5305   001AA0  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  5306   001AA2  6FA4               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  5307   001AA4  ECE3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  5308   001AA8                     
  5309                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  5310   001AA8  0EA5               	movlw	low I2C_Read1ByteRegister@reg
  5311   001AAA  0100               	movlb	0	; () banked
  5312   001AAC  6F9C               	movwf	I2C_SetBuffer@buffer& (0+255),b
  5313   001AAE  0E00               	movlw	high I2C_Read1ByteRegister@reg
  5314   001AB0  6F9D               	movwf	(I2C_SetBuffer@buffer+1)& (0+255),b
  5315   001AB2  0E00               	movlw	0
  5316   001AB4  6F9F               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  5317   001AB6  0E01               	movlw	1
  5318   001AB8  6F9E               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  5319   001ABA  EC95  F010         	call	_I2C_SetBuffer	;wreg free
  5320   001ABE                     
  5321                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  5322   001ABE  0E00               	movlw	0
  5323   001AC0  0100               	movlb	0	; () banked
  5324   001AC2  6FA1               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  5325   001AC4  0E00               	movlw	0
  5326   001AC6  6FA2               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  5327   001AC8  0E00               	movlw	0
  5328   001ACA  6FA3               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  5329   001ACC  0E00               	movlw	0
  5330   001ACE  6FA4               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  5331   001AD0  ECEF  F010         	call	_I2C_SetAddressNackCallback	;wreg free
  5332   001AD4                     
  5333                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  5334   001AD4  EC8A  F011         	call	_I2C_MasterWrite	;wreg free
  5335   001AD8                     l6113:
  5336   001AD8  ECFC  F00F         	call	_I2C_Close	;wreg free
  5337   001ADC  06E8               	decf	wreg,f,c
  5338   001ADE  B4D8               	btfsc	status,2,c
  5339   001AE0  EF74  F00D         	goto	u3971
  5340   001AE4  EF76  F00D         	goto	u3970
  5341   001AE8                     u3971:
  5342   001AE8  EF6C  F00D         	goto	l6113
  5343   001AEC                     u3970:
  5344   001AEC                     
  5345                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  5346   001AEC  0100               	movlb	0	; () banked
  5347   001AEE  51A7               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
  5348   001AF0                     
  5349                           ; BSR set to: 0
  5350   001AF0  0012               	return		;funcret
  5351   001AF2                     __end_of_I2C_Read1ByteRegister:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5355 ;; Defined at:
  5356 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  5359 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5360 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5361 ;;  ptr             2    7[BANK0 ] PTR void 
  5362 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5363 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        4 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 8
  5382 ;; This function calls:
  5383 ;;		_I2C_SetCallback
  5384 ;; This function is called by:
  5385 ;;		_I2C_Read1ByteRegister
  5386 ;;		_I2C_Read2ByteRegister
  5387 ;;		_I2C_Write1ByteRegister
  5388 ;;		_I2C_Write2ByteRegister
  5389 ;;		_I2C_ReadDataBlock
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text8
  5394   0021C6                     __ptext8:
  5395                           	callstack 0
  5396   0021C6                     _I2C_SetDataCompleteCallback:
  5397                           	callstack 20
  5398   0021C6                     
  5399                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  5400   0021C6  C0A1  F09C         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  5401   0021CA  C0A2  F09D         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  5402   0021CE  C0A3  F09E         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  5403   0021D2  C0A4  F09F         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  5404   0021D6  0E00               	movlw	0
  5405   0021D8  ECF5  F00D         	call	_I2C_SetCallback
  5406   0021DC  0012               	return		;funcret
  5407   0021DE                     __end_of_I2C_SetDataCompleteCallback:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _I2C_SetBuffer *****************
  5411 ;; Defined at:
  5412 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  buffer          2    0[BANK0 ] PTR void 
  5415 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5416 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5417 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  5418 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;Total ram usage:        4 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 7
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_I2C_Read1ByteRegister
  5441 ;;		_I2C_Read2ByteRegister
  5442 ;;		_I2C_Write1ByteRegister
  5443 ;;		_I2C_Write2ByteRegister
  5444 ;;		_I2C_WriteNBytes
  5445 ;;		_I2C_ReadNBytes
  5446 ;;		_I2C_ReadDataBlock
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text9
  5451   00212A                     __ptext9:
  5452                           	callstack 0
  5453   00212A                     _I2C_SetBuffer:
  5454                           	callstack 21
  5455   00212A                     
  5456                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  5457   00212A  0100               	movlb	0	; () banked
  5458   00212C  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  5459   00212E  EF9B  F010         	goto	u3871
  5460   002132  EF9D  F010         	goto	u3870
  5461   002136                     u3871:
  5462   002136  EFA6  F010         	goto	l478
  5463   00213A                     u3870:
  5464   00213A                     
  5465                           ; BSR set to: 0
  5466                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  5467   00213A  C09C  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  5468   00213E  C09D  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  5469   002142                     
  5470                           ; BSR set to: 0
  5471                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  5472   002142  C09E  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  5473   002146  C09F  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  5474   00214A                     
  5475                           ; BSR set to: 0
  5476                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  5477   00214A  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  5478   00214C                     l478:
  5479                           
  5480                           ; BSR set to: 0
  5481   00214C  0012               	return		;funcret
  5482   00214E                     __end_of_I2C_SetBuffer:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _I2C_SetAddressNackCallback *****************
  5486 ;; Defined at:
  5487 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  5490 ;;		 -> NULL(1), 
  5491 ;;  ptr             2    7[BANK0 ] PTR void 
  5492 ;;		 -> NULL(0), 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5504 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;Total ram usage:        4 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 8
  5511 ;; This function calls:
  5512 ;;		_I2C_SetCallback
  5513 ;; This function is called by:
  5514 ;;		_I2C_Read1ByteRegister
  5515 ;;		_I2C_Read2ByteRegister
  5516 ;;		_I2C_Write1ByteRegister
  5517 ;;		_I2C_Write2ByteRegister
  5518 ;;		_I2C_WriteNBytes
  5519 ;;		_I2C_ReadDataBlock
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text10
  5524   0021DE                     __ptext10:
  5525                           	callstack 0
  5526   0021DE                     _I2C_SetAddressNackCallback:
  5527                           	callstack 20
  5528   0021DE                     
  5529                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  5530   0021DE  C0A1  F09C         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  5531   0021E2  C0A2  F09D         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  5532   0021E6  C0A3  F09E         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  5533   0021EA  C0A4  F09F         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  5534   0021EE  0E02               	movlw	2
  5535   0021F0  ECF5  F00D         	call	_I2C_SetCallback
  5536   0021F4  0012               	return		;funcret
  5537   0021F6                     __end_of_I2C_SetAddressNackCallback:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _I2C_SetCallback *****************
  5541 ;; Defined at:
  5542 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  idx             1    wreg     enum E3139
  5545 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  5546 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5547 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5548 ;;  ptr             2    2[BANK0 ] PTR void 
  5549 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5550 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  idx             1    4[BANK0 ] enum E3139
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;Total ram usage:        5 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 7
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_I2C_SetDataCompleteCallback
  5573 ;;		_I2C_SetAddressNackCallback
  5574 ;;		_I2C_SetWriteCollisionCallback
  5575 ;;		_I2C_SetDataNackCallback
  5576 ;;		_I2C_SetTimeoutCallback
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text11
  5581   001BEA                     __ptext11:
  5582                           	callstack 0
  5583   001BEA                     _I2C_SetCallback:
  5584                           	callstack 20
  5585                           
  5586                           ;incstack = 0
  5587                           ;I2C_SetCallback@idx stored from wreg
  5588   001BEA  0100               	movlb	0	; () banked
  5589   001BEC  6FA0               	movwf	I2C_SetCallback@idx& (0+255),b
  5590   001BEE                     
  5591                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  5592   001BEE  0100               	movlb	0	; () banked
  5593   001BF0  519C               	movf	I2C_SetCallback@cb& (0+255),w,b
  5594   001BF2  119D               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
  5595   001BF4  B4D8               	btfsc	status,2,c
  5596   001BF6  EFFF  F00D         	goto	u3841
  5597   001BFA  EF01  F00E         	goto	u3840
  5598   001BFE                     u3841:
  5599   001BFE  EF1B  F00E         	goto	l5809
  5600   001C02                     u3840:
  5601   001C02                     
  5602                           ; BSR set to: 0
  5603                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  5604   001C02  51A0               	movf	I2C_SetCallback@idx& (0+255),w,b
  5605   001C04  0D02               	mullw	2
  5606   001C06  0E60               	movlw	low _I2C_Status
  5607   001C08  24F3               	addwf	243,w,c
  5608   001C0A  6ED9               	movwf	fsr2l,c
  5609   001C0C  0E00               	movlw	high _I2C_Status
  5610   001C0E  20F4               	addwfc	prodh,w,c
  5611   001C10  6EDA               	movwf	fsr2h,c
  5612   001C12  C09C  FFDE         	movff	I2C_SetCallback@cb,postinc2
  5613   001C16  C09D  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  5614                           
  5615                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  5616   001C1A  51A0               	movf	I2C_SetCallback@idx& (0+255),w,b
  5617   001C1C  0D02               	mullw	2
  5618   001C1E  0E6C               	movlw	low (_I2C_Status+12)
  5619   001C20  24F3               	addwf	243,w,c
  5620   001C22  6ED9               	movwf	fsr2l,c
  5621   001C24  0E00               	movlw	high (_I2C_Status+12)
  5622   001C26  20F4               	addwfc	prodh,w,c
  5623   001C28  6EDA               	movwf	fsr2h,c
  5624   001C2A  C09E  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  5625   001C2E  C09F  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  5626                           
  5627                           ;mcc_generated_files/i2c_master.c: 310:     }
  5628   001C32  EF31  F00E         	goto	l501
  5629   001C36                     l5809:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5633   001C36  51A0               	movf	I2C_SetCallback@idx& (0+255),w,b
  5634   001C38  0D02               	mullw	2
  5635   001C3A  0E60               	movlw	low _I2C_Status
  5636   001C3C  24F3               	addwf	243,w,c
  5637   001C3E  6ED9               	movwf	fsr2l,c
  5638   001C40  0E00               	movlw	high _I2C_Status
  5639   001C42  20F4               	addwfc	prodh,w,c
  5640   001C44  6EDA               	movwf	fsr2h,c
  5641   001C46  0EAA               	movlw	low _I2C_CallbackReturnStop
  5642   001C48  6EDE               	movwf	postinc2,c
  5643   001C4A  0E23               	movlw	high _I2C_CallbackReturnStop
  5644   001C4C  6EDD               	movwf	postdec2,c
  5645                           
  5646                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  5647   001C4E  51A0               	movf	I2C_SetCallback@idx& (0+255),w,b
  5648   001C50  0D02               	mullw	2
  5649   001C52  0E6C               	movlw	low (_I2C_Status+12)
  5650   001C54  24F3               	addwf	243,w,c
  5651   001C56  6ED9               	movwf	fsr2l,c
  5652   001C58  0E00               	movlw	high (_I2C_Status+12)
  5653   001C5A  20F4               	addwfc	prodh,w,c
  5654   001C5C  6EDA               	movwf	fsr2h,c
  5655   001C5E  6ADE               	clrf	postinc2,c
  5656   001C60  6ADD               	clrf	postdec2,c
  5657   001C62                     l501:
  5658                           
  5659                           ; BSR set to: 0
  5660   001C62  0012               	return		;funcret
  5661   001C64                     __end_of_I2C_SetCallback:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function _I2C_Open *****************
  5665 ;; Defined at:
  5666 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  address         1    wreg     unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  address         1    2[BANK0 ] unsigned char 
  5671 ;;  returnValue     1    3[BANK0 ] enum E358
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      enum E358
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;Total ram usage:        2 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; Hardware stack levels required when called: 8
  5688 ;; This function calls:
  5689 ;;		_I2C_MasterClearIrq
  5690 ;;		_I2C_MasterEnableIrq
  5691 ;;		_I2C_MasterOpen
  5692 ;;		_I2C_SetInterruptHandler
  5693 ;; This function is called by:
  5694 ;;		_I2C_Read1ByteRegister
  5695 ;;		_I2C_Read2ByteRegister
  5696 ;;		_I2C_Write1ByteRegister
  5697 ;;		_I2C_Write2ByteRegister
  5698 ;;		_I2C_WriteNBytes
  5699 ;;		_I2C_ReadNBytes
  5700 ;;		_I2C_ReadDataBlock
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text12
  5705   00194A                     __ptext12:
  5706                           	callstack 0
  5707   00194A                     _I2C_Open:
  5708                           	callstack 20
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;incstack = 0
  5712                           ;I2C_Open@address stored from wreg
  5713   00194A  0100               	movlb	0	; () banked
  5714   00194C  6F9E               	movwf	I2C_Open@address& (0+255),b
  5715   00194E                     
  5716                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5717   00194E  0E01               	movlw	1
  5718   001950  0100               	movlb	0	; () banked
  5719   001952  6F9F               	movwf	I2C_Open@returnValue& (0+255),b
  5720   001954                     
  5721                           ; BSR set to: 0
  5722                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  5723   001954  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  5724   001956  EFAF  F00C         	goto	u3861
  5725   00195A  EFB1  F00C         	goto	u3860
  5726   00195E                     u3861:
  5727   00195E  EFF4  F00C         	goto	l5931
  5728   001962                     u3860:
  5729   001962                     
  5730                           ; BSR set to: 0
  5731                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  5732   001962  C09E  F07C         	movff	I2C_Open@address,_I2C_Status+28
  5733   001966                     
  5734                           ; BSR set to: 0
  5735                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  5736   001966  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5737   001968                     
  5738                           ; BSR set to: 0
  5739                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  5740   001968  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  5741   00196A                     
  5742                           ; BSR set to: 0
  5743                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  5744   00196A  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5745   00196C                     
  5746                           ; BSR set to: 0
  5747                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  5748   00196C  0E0E               	movlw	14
  5749   00196E  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5750   001970                     
  5751                           ; BSR set to: 0
  5752                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  5753   001970  0E01               	movlw	1
  5754   001972  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  5755   001974  0EF4               	movlw	244
  5756   001976  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  5757   001978                     
  5758                           ; BSR set to: 0
  5759                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  5760   001978  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5761   00197A                     
  5762                           ; BSR set to: 0
  5763                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  5764   00197A  0EAA               	movlw	low _I2C_CallbackReturnStop
  5765   00197C  6F60               	movwf	_I2C_Status& (0+255),b
  5766   00197E  0E23               	movlw	high _I2C_CallbackReturnStop
  5767   001980  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  5768   001982                     
  5769                           ; BSR set to: 0
  5770                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5771   001982  0E00               	movlw	0
  5772   001984  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  5773   001986  0E00               	movlw	0
  5774   001988  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  5775   00198A                     
  5776                           ; BSR set to: 0
  5777                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5778   00198A  0EAA               	movlw	low _I2C_CallbackReturnStop
  5779   00198C  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  5780   00198E  0E23               	movlw	high _I2C_CallbackReturnStop
  5781   001990  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  5782   001992                     
  5783                           ; BSR set to: 0
  5784                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5785   001992  0E00               	movlw	0
  5786   001994  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  5787   001996  0E00               	movlw	0
  5788   001998  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  5789   00199A                     
  5790                           ; BSR set to: 0
  5791                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5792   00199A  0EAA               	movlw	low _I2C_CallbackReturnStop
  5793   00199C  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  5794   00199E  0E23               	movlw	high _I2C_CallbackReturnStop
  5795   0019A0  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  5796   0019A2                     
  5797                           ; BSR set to: 0
  5798                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5799   0019A2  0E00               	movlw	0
  5800   0019A4  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  5801   0019A6  0E00               	movlw	0
  5802   0019A8  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  5803   0019AA                     
  5804                           ; BSR set to: 0
  5805                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5806   0019AA  0EAA               	movlw	low _I2C_CallbackReturnStop
  5807   0019AC  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  5808   0019AE  0E23               	movlw	high _I2C_CallbackReturnStop
  5809   0019B0  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  5810   0019B2                     
  5811                           ; BSR set to: 0
  5812                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5813   0019B2  0E00               	movlw	0
  5814   0019B4  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  5815   0019B6  0E00               	movlw	0
  5816   0019B8  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  5817   0019BA                     
  5818                           ; BSR set to: 0
  5819                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5820   0019BA  0EA6               	movlw	low _I2C_CallbackReturnReset
  5821   0019BC  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  5822   0019BE  0E23               	movlw	high _I2C_CallbackReturnReset
  5823   0019C0  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  5824   0019C2                     
  5825                           ; BSR set to: 0
  5826                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5827   0019C2  0E00               	movlw	0
  5828   0019C4  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  5829   0019C6  0E00               	movlw	0
  5830   0019C8  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  5831   0019CA                     
  5832                           ; BSR set to: 0
  5833                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  5834   0019CA  0E6C               	movlw	low _I2C_MasterIsr
  5835   0019CC  6F9C               	movwf	I2C_SetInterruptHandler@InterruptHandler& (0+255),b
  5836   0019CE  0E23               	movlw	high _I2C_MasterIsr
  5837   0019D0  6F9D               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5838   0019D2  EC71  F011         	call	_I2C_SetInterruptHandler	;wreg free
  5839   0019D6                     
  5840                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  5841   0019D6  ECC9  F011         	call	_I2C_MasterClearIrq	;wreg free
  5842   0019DA                     
  5843                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  5844   0019DA  ECB9  F010         	call	_I2C_MasterOpen	;wreg free
  5845   0019DE                     
  5846                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  5847   0019DE  ECC1  F011         	call	_I2C_MasterEnableIrq	;wreg free
  5848   0019E2                     
  5849                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  5850   0019E2  0E00               	movlw	0
  5851   0019E4  0100               	movlb	0	; () banked
  5852   0019E6  6F9F               	movwf	I2C_Open@returnValue& (0+255),b
  5853   0019E8                     l5931:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  5857   0019E8  519F               	movf	I2C_Open@returnValue& (0+255),w,b
  5858   0019EA                     
  5859                           ; BSR set to: 0
  5860   0019EA  0012               	return		;funcret
  5861   0019EC                     __end_of_I2C_Open:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function _I2C_SetInterruptHandler *****************
  5865 ;; Defined at:
  5866 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5869 ;;		 -> I2C_MasterIsr(1), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;Total ram usage:        2 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 7
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_I2C_Open
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text13
  5896   0022E2                     __ptext13:
  5897                           	callstack 0
  5898   0022E2                     _I2C_SetInterruptHandler:
  5899                           	callstack 20
  5900   0022E2                     
  5901                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  5902   0022E2  C09C  F00D         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  5903   0022E6  C09D  F00E         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  5904   0022EA  0012               	return		;funcret
  5905   0022EC                     __end_of_I2C_SetInterruptHandler:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function _I2C_MasterOpen *****************
  5909 ;; Defined at:
  5910 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;		None
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      _Bool 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;Total ram usage:        0 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 7
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_I2C_Open
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text14
  5939   002172                     __ptext14:
  5940                           	callstack 0
  5941   002172                     _I2C_MasterOpen:
  5942                           	callstack 20
  5943   002172                     
  5944                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  5945   002172  BAC6               	btfsc	198,5,c	;volatile
  5946   002174  EFBE  F010         	goto	u3811
  5947   002178  EFC0  F010         	goto	u3810
  5948   00217C                     u3811:
  5949   00217C  EFC9  F010         	goto	l620
  5950   002180                     u3810:
  5951   002180                     
  5952                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x80;
  5953   002180  0E80               	movlw	128
  5954   002182  6EC7               	movwf	199,c	;volatile
  5955                           
  5956                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  5957   002184  0E08               	movlw	8
  5958   002186  6EC6               	movwf	198,c	;volatile
  5959                           
  5960                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  5961   002188  0E00               	movlw	0
  5962   00218A  6EC5               	movwf	197,c	;volatile
  5963                           
  5964                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x27;
  5965   00218C  0E27               	movlw	39
  5966   00218E  6EC8               	movwf	200,c	;volatile
  5967   002190                     
  5968                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  5969   002190  8AC6               	bsf	198,5,c	;volatile
  5970   002192                     l620:
  5971   002192  0012               	return		;funcret
  5972   002194                     __end_of_I2C_MasterOpen:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _I2C_MasterEnableIrq *****************
  5976 ;; Defined at:
  5977 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		None
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 7
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_I2C_Open
  6002 ;;		_I2C_SetTimeOut
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text15
  6007   002382                     __ptext15:
  6008                           	callstack 0
  6009   002382                     _I2C_MasterEnableIrq:
  6010                           	callstack 20
  6011   002382                     
  6012                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  6013   002382  869D               	bsf	157,3,c	;volatile
  6014   002384  0012               	return		;funcret
  6015   002386                     __end_of_I2C_MasterEnableIrq:
  6016                           	callstack 0
  6017                           
  6018 ;; *************** function _I2C_MasterWrite *****************
  6019 ;; Defined at:
  6020 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      enum E358
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;Total ram usage:        0 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; Hardware stack levels required when called: 9
  6041 ;; This function calls:
  6042 ;;		_I2C_MasterOperation
  6043 ;; This function is called by:
  6044 ;;		_I2C_Read1ByteRegister
  6045 ;;		_I2C_Read2ByteRegister
  6046 ;;		_I2C_Write1ByteRegister
  6047 ;;		_I2C_Write2ByteRegister
  6048 ;;		_I2C_WriteNBytes
  6049 ;;		_I2C_ReadDataBlock
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text16
  6054   002314                     __ptext16:
  6055                           	callstack 0
  6056   002314                     _I2C_MasterWrite:
  6057                           	callstack 19
  6058   002314                     
  6059                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  6060   002314  0E00               	movlw	0
  6061   002316  EC60  F00F         	call	_I2C_MasterOperation
  6062   00231A  0012               	return		;funcret
  6063   00231C                     __end_of_I2C_MasterWrite:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _I2C_MasterOperation *****************
  6067 ;; Defined at:
  6068 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  read            1    wreg     _Bool 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  read            1    0[BANK0 ] _Bool 
  6073 ;;  returnValue     1    1[BANK0 ] enum E358
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      enum E358
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;Total ram usage:        2 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 8
  6090 ;; This function calls:
  6091 ;;		_I2C_MasterStart
  6092 ;; This function is called by:
  6093 ;;		_I2C_MasterWrite
  6094 ;;		_I2C_MasterRead
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text17
  6099   001EC0                     __ptext17:
  6100                           	callstack 0
  6101   001EC0                     _I2C_MasterOperation:
  6102                           	callstack 19
  6103                           
  6104                           ;incstack = 0
  6105                           ;I2C_MasterOperation@read stored from wreg
  6106   001EC0  0100               	movlb	0	; () banked
  6107   001EC2  6F9C               	movwf	I2C_MasterOperation@read& (0+255),b
  6108   001EC4                     
  6109                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  6110   001EC4  0E01               	movlw	1
  6111   001EC6  0100               	movlb	0	; () banked
  6112   001EC8  6F9D               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  6113   001ECA                     
  6114                           ; BSR set to: 0
  6115                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  6116   001ECA  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6117   001ECC  EF6A  F00F         	goto	u3821
  6118   001ED0  EF6C  F00F         	goto	u3820
  6119   001ED4                     u3821:
  6120   001ED4  EF7F  F00F         	goto	l5801
  6121   001ED8                     u3820:
  6122   001ED8                     
  6123                           ; BSR set to: 0
  6124                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  6125   001ED8  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  6126   001EDA                     
  6127                           ; BSR set to: 0
  6128                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  6129   001EDA  0E00               	movlw	0
  6130   001EDC  6F9D               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  6131   001EDE                     
  6132                           ; BSR set to: 0
  6133                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  6134   001EDE  519C               	movf	I2C_MasterOperation@read& (0+255),w,b
  6135   001EE0  B4D8               	btfsc	status,2,c
  6136   001EE2  EF75  F00F         	goto	u3831
  6137   001EE6  EF77  F00F         	goto	u3830
  6138   001EEA                     u3831:
  6139   001EEA  EF7B  F00F         	goto	l5797
  6140   001EEE                     u3830:
  6141   001EEE                     
  6142                           ; BSR set to: 0
  6143                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  6144   001EEE  0E01               	movlw	1
  6145   001EF0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  6146                           
  6147                           ;mcc_generated_files/i2c_master.c: 237:         }
  6148   001EF2  EF7D  F00F         	goto	l5799
  6149   001EF6                     l5797:
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  6153   001EF6  0E02               	movlw	2
  6154   001EF8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  6155   001EFA                     l5799:
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  6159   001EFA  ECC3  F011         	call	_I2C_MasterStart	;wreg free
  6160   001EFE                     l5801:
  6161                           
  6162                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  6163   001EFE  0100               	movlb	0	; () banked
  6164   001F00  519D               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  6165   001F02                     
  6166                           ; BSR set to: 0
  6167   001F02  0012               	return		;funcret
  6168   001F04                     __end_of_I2C_MasterOperation:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _I2C_MasterStart *****************
  6172 ;; Defined at:
  6173 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		None
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 7
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_I2C_MasterOperation
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text18
  6202   002386                     __ptext18:
  6203                           	callstack 0
  6204   002386                     _I2C_MasterStart:
  6205                           	callstack 19
  6206   002386                     
  6207                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  6208   002386  80C5               	bsf	197,0,c	;volatile
  6209   002388  0012               	return		;funcret
  6210   00238A                     __end_of_I2C_MasterStart:
  6211                           	callstack 0
  6212                           
  6213 ;; *************** function _I2C_Close *****************
  6214 ;; Defined at:
  6215 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  returnValue     1    0[BANK0 ] enum E358
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      enum E358
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;Total ram usage:        1 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 8
  6236 ;; This function calls:
  6237 ;;		_I2C_MasterClearIrq
  6238 ;;		_I2C_MasterClose
  6239 ;;		_I2C_MasterDisableIrq
  6240 ;; This function is called by:
  6241 ;;		_I2C_Read1ByteRegister
  6242 ;;		_I2C_Read2ByteRegister
  6243 ;;		_I2C_Write1ByteRegister
  6244 ;;		_I2C_Write2ByteRegister
  6245 ;;		_I2C_WriteNBytes
  6246 ;;		_I2C_ReadNBytes
  6247 ;;		_I2C_ReadDataBlock
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text19
  6252   001FF8                     __ptext19:
  6253                           	callstack 0
  6254   001FF8                     _I2C_Close:
  6255                           	callstack 20
  6256   001FF8                     
  6257                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  6258   001FF8  0E01               	movlw	1
  6259   001FFA  0100               	movlb	0	; () banked
  6260   001FFC  6F9C               	movwf	I2C_Close@returnValue& (0+255),b
  6261   001FFE                     
  6262                           ; BSR set to: 0
  6263                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  6264   001FFE  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6265   002000  EF04  F010         	goto	u3881
  6266   002004  EF06  F010         	goto	u3880
  6267   002008                     u3881:
  6268   002008  EF10  F010         	goto	l5961
  6269   00200C                     u3880:
  6270   00200C                     
  6271                           ; BSR set to: 0
  6272                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  6273   00200C  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6274                           
  6275                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  6276   00200E  697C               	setf	(_I2C_Status+28)& (0+255),b
  6277   002010                     
  6278                           ; BSR set to: 0
  6279                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  6280   002010  ECC9  F011         	call	_I2C_MasterClearIrq	;wreg free
  6281                           
  6282                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  6283   002014  ECC5  F011         	call	_I2C_MasterDisableIrq	;wreg free
  6284                           
  6285                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  6286   002018  ECC7  F011         	call	_I2C_MasterClose	;wreg free
  6287   00201C                     
  6288                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  6289   00201C  C082  F09C         	movff	_I2C_Status+34,I2C_Close@returnValue
  6290   002020                     l5961:
  6291                           
  6292                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  6293   002020  0100               	movlb	0	; () banked
  6294   002022  519C               	movf	I2C_Close@returnValue& (0+255),w,b
  6295   002024                     
  6296                           ; BSR set to: 0
  6297   002024  0012               	return		;funcret
  6298   002026                     __end_of_I2C_Close:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _I2C_MasterDisableIrq *****************
  6302 ;; Defined at:
  6303 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;		None
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      void 
  6310 ;; Registers used:
  6311 ;;		None
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;Total ram usage:        0 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 7
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_I2C_Close
  6328 ;;		_I2C_SetTimeOut
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text20
  6333   00238A                     __ptext20:
  6334                           	callstack 0
  6335   00238A                     _I2C_MasterDisableIrq:
  6336                           	callstack 20
  6337   00238A                     
  6338                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  6339   00238A  969D               	bcf	157,3,c	;volatile
  6340   00238C  0012               	return		;funcret
  6341   00238E                     __end_of_I2C_MasterDisableIrq:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function _I2C_MasterClose *****************
  6345 ;; Defined at:
  6346 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		None
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;Total ram usage:        0 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 7
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_I2C_Close
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text21
  6375   00238E                     __ptext21:
  6376                           	callstack 0
  6377   00238E                     _I2C_MasterClose:
  6378                           	callstack 20
  6379   00238E                     
  6380                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  6381   00238E  9AC6               	bcf	198,5,c	;volatile
  6382   002390  0012               	return		;funcret
  6383   002392                     __end_of_I2C_MasterClose:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function _I2C_MasterClearIrq *****************
  6387 ;; Defined at:
  6388 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		None
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 7
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_I2C_Open
  6413 ;;		_I2C_Close
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text22
  6418   002392                     __ptext22:
  6419                           	callstack 0
  6420   002392                     _I2C_MasterClearIrq:
  6421                           	callstack 20
  6422   002392                     
  6423                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  6424   002392  969E               	bcf	158,3,c	;volatile
  6425   002394  0012               	return		;funcret
  6426   002396                     __end_of_I2C_MasterClearIrq:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _SYSTEM_Initialize *****************
  6430 ;; Defined at:
  6431 ;;		line 4 in file "mcc_generated_files/mcc.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 9
  6452 ;; This function calls:
  6453 ;;		_EUSART_Initialize
  6454 ;;		_I2C_Initialize
  6455 ;;		_INTERRUPT_Initialize
  6456 ;;		_OSCILLATOR_Initialize
  6457 ;;		_PIN_MANAGER_Initialize
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text23
  6464   002226                     __ptext23:
  6465                           	callstack 0
  6466   002226                     _SYSTEM_Initialize:
  6467                           	callstack 21
  6468   002226                     
  6469                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  6470   002226  ECE2  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  6471                           
  6472                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  6473   00222A  EC76  F011         	call	_OSCILLATOR_Initialize	;wreg free
  6474   00222E                     
  6475                           ;mcc_generated_files/mcc.c: 8:     INTERRUPT_Initialize();
  6476   00222E  EC8E  F011         	call	_INTERRUPT_Initialize	;wreg free
  6477   002232                     
  6478                           ;mcc_generated_files/mcc.c: 9:     I2C_Initialize();
  6479   002232  EC34  F011         	call	_I2C_Initialize	;wreg free
  6480   002236                     
  6481                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  6482   002236  EC82  F00F         	call	_EUSART_Initialize	;wreg free
  6483   00223A  0012               	return		;funcret
  6484   00223C                     __end_of_SYSTEM_Initialize:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function _PIN_MANAGER_Initialize *****************
  6488 ;; Defined at:
  6489 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 7
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_SYSTEM_Initialize
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text24
  6518   001FC4                     __ptext24:
  6519                           	callstack 0
  6520   001FC4                     _PIN_MANAGER_Initialize:
  6521                           	callstack 22
  6522   001FC4                     
  6523                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6524   001FC4  0E00               	movlw	0
  6525   001FC6  6E8D               	movwf	141,c	;volatile
  6526                           
  6527                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6528   001FC8  0E00               	movlw	0
  6529   001FCA  6E8C               	movwf	140,c	;volatile
  6530                           
  6531                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6532   001FCC  0E00               	movlw	0
  6533   001FCE  6E89               	movwf	137,c	;volatile
  6534                           
  6535                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6536   001FD0  0E00               	movlw	0
  6537   001FD2  6E8A               	movwf	138,c	;volatile
  6538                           
  6539                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6540   001FD4  0E00               	movlw	0
  6541   001FD6  6E8B               	movwf	139,c	;volatile
  6542                           
  6543                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6544   001FD8  0E07               	movlw	7
  6545   001FDA  6E96               	movwf	150,c	;volatile
  6546   001FDC                     
  6547                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6548   001FDC  6892               	setf	146,c	;volatile
  6549                           
  6550                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x0F;
  6551   001FDE  0E0F               	movlw	15
  6552   001FE0  6E93               	movwf	147,c	;volatile
  6553                           
  6554                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xB8;
  6555   001FE2  0EB8               	movlw	184
  6556   001FE4  6E94               	movwf	148,c	;volatile
  6557                           
  6558                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  6559   001FE6  0E00               	movlw	0
  6560   001FE8  6E95               	movwf	149,c	;volatile
  6561   001FEA                     
  6562                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6563   001FEA  687E               	setf	126,c	;volatile
  6564                           
  6565                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x08;
  6566   001FEC  0E08               	movlw	8
  6567   001FEE  6E7F               	movwf	127,c	;volatile
  6568                           
  6569                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6570   001FF0  0E00               	movlw	0
  6571   001FF2  6E7C               	movwf	124,c	;volatile
  6572   001FF4                     
  6573                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6574   001FF4  8EF1               	bsf	241,7,c	;volatile
  6575   001FF6  0012               	return		;funcret
  6576   001FF8                     __end_of_PIN_MANAGER_Initialize:
  6577                           	callstack 0
  6578                           
  6579 ;; *************** function _OSCILLATOR_Initialize *****************
  6580 ;; Defined at:
  6581 ;;		line 13 in file "mcc_generated_files/mcc.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;		None
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;Total ram usage:        0 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 7
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_SYSTEM_Initialize
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text25
  6610   0022EC                     __ptext25:
  6611                           	callstack 0
  6612   0022EC                     _OSCILLATOR_Initialize:
  6613                           	callstack 22
  6614   0022EC                     
  6615                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x30;
  6616   0022EC  0E30               	movlw	48
  6617   0022EE  6ED3               	movwf	211,c	;volatile
  6618                           
  6619                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
  6620   0022F0  0E00               	movlw	0
  6621   0022F2  6E9B               	movwf	155,c	;volatile
  6622   0022F4  0012               	return		;funcret
  6623   0022F6                     __end_of_OSCILLATOR_Initialize:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _INTERRUPT_Initialize *****************
  6627 ;; Defined at:
  6628 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		None
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;Total ram usage:        0 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 7
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_SYSTEM_Initialize
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text26
  6657   00231C                     __ptext26:
  6658                           	callstack 0
  6659   00231C                     _INTERRUPT_Initialize:
  6660                           	callstack 22
  6661   00231C                     
  6662                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  6663   00231C  8ED0               	bsf	208,7,c	;volatile
  6664                           
  6665                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR2bits.BCLIP = 1;
  6666   00231E  86A2               	bsf	162,3,c	;volatile
  6667                           
  6668                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SSPIP = 1;
  6669   002320  869F               	bsf	159,3,c	;volatile
  6670   002322  0012               	return		;funcret
  6671   002324                     __end_of_INTERRUPT_Initialize:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function _I2C_Initialize *****************
  6675 ;; Defined at:
  6676 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used: 1
  6696 ;; Hardware stack levels required when called: 7
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_SYSTEM_Initialize
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text27
  6705   002268                     __ptext27:
  6706                           	callstack 0
  6707   002268                     _I2C_Initialize:
  6708                           	callstack 22
  6709   002268                     
  6710                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  6711   002268  0E80               	movlw	128
  6712   00226A  6EC7               	movwf	199,c	;volatile
  6713                           
  6714                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  6715   00226C  0E08               	movlw	8
  6716   00226E  6EC6               	movwf	198,c	;volatile
  6717                           
  6718                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  6719   002270  0E00               	movlw	0
  6720   002272  6EC5               	movwf	197,c	;volatile
  6721                           
  6722                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  6723   002274  0E27               	movlw	39
  6724   002276  6EC8               	movwf	200,c	;volatile
  6725   002278                     
  6726                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  6727   002278  9AC6               	bcf	198,5,c	;volatile
  6728   00227A  0012               	return		;funcret
  6729   00227C                     __end_of_I2C_Initialize:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _EUSART_Initialize *****************
  6733 ;; Defined at:
  6734 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;Total ram usage:        0 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 8
  6755 ;; This function calls:
  6756 ;;		_EUSART_SetErrorHandler
  6757 ;;		_EUSART_SetFramingErrorHandler
  6758 ;;		_EUSART_SetOverrunErrorHandler
  6759 ;; This function is called by:
  6760 ;;		_SYSTEM_Initialize
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text28
  6765   001F04                     __ptext28:
  6766                           	callstack 0
  6767   001F04                     _EUSART_Initialize:
  6768                           	callstack 21
  6769   001F04                     
  6770                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6771   001F04  0E08               	movlw	8
  6772   001F06  6EB8               	movwf	184,c	;volatile
  6773                           
  6774                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6775   001F08  0E90               	movlw	144
  6776   001F0A  6EAB               	movwf	171,c	;volatile
  6777                           
  6778                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  6779   001F0C  0E24               	movlw	36
  6780   001F0E  6EAC               	movwf	172,c	;volatile
  6781                           
  6782                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xA0;
  6783   001F10  0EA0               	movlw	160
  6784   001F12  6EAF               	movwf	175,c	;volatile
  6785                           
  6786                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  6787   001F14  0E01               	movlw	1
  6788   001F16  6EB0               	movwf	176,c	;volatile
  6789   001F18                     
  6790                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6791   001F18  0E00               	movlw	0
  6792   001F1A  0100               	movlb	0	; () banked
  6793   001F1C  6F9C               	movwf	EUSART_SetFramingErrorHandler@interruptHandler& (0+255),b
  6794   001F1E  0E00               	movlw	0
  6795   001F20  6F9D               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  6796   001F22  EC80  F011         	call	_EUSART_SetFramingErrorHandler	;wreg free
  6797   001F26                     
  6798                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6799   001F26  0E00               	movlw	0
  6800   001F28  0100               	movlb	0	; () banked
  6801   001F2A  6F9C               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler& (0+255),b
  6802   001F2C  0E00               	movlw	0
  6803   001F2E  6F9D               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  6804   001F30  EC7B  F011         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  6805   001F34                     
  6806                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6807   001F34  0E00               	movlw	0
  6808   001F36  0100               	movlb	0	; () banked
  6809   001F38  6F9C               	movwf	EUSART_SetErrorHandler@interruptHandler& (0+255),b
  6810   001F3A  0E00               	movlw	0
  6811   001F3C  6F9D               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)& (0+255),b
  6812   001F3E  EC85  F011         	call	_EUSART_SetErrorHandler	;wreg free
  6813   001F42                     
  6814                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6815   001F42  0E00               	movlw	0
  6816   001F44  6E22               	movwf	_eusartRxLastError^0,c	;volatile
  6817   001F46  0012               	return		;funcret
  6818   001F48                     __end_of_EUSART_Initialize:
  6819                           	callstack 0
  6820                           
  6821 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6822 ;; Defined at:
  6823 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6826 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;Total ram usage:        2 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 7
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_EUSART_Initialize
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text29
  6853   0022F6                     __ptext29:
  6854                           	callstack 0
  6855   0022F6                     _EUSART_SetOverrunErrorHandler:
  6856                           	callstack 21
  6857   0022F6                     
  6858                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6859   0022F6  C09C  F009         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  6860   0022FA  C09D  F00A         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  6861   0022FE  0012               	return		;funcret
  6862   002300                     __end_of_EUSART_SetOverrunErrorHandler:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6866 ;; Defined at:
  6867 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6870 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      void 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6882 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;Total ram usage:        2 bytes
  6887 ;; Hardware stack levels used: 1
  6888 ;; Hardware stack levels required when called: 7
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_EUSART_Initialize
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text30
  6897   002300                     __ptext30:
  6898                           	callstack 0
  6899   002300                     _EUSART_SetFramingErrorHandler:
  6900                           	callstack 21
  6901   002300                     
  6902                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6903   002300  C09C  F00B         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  6904   002304  C09D  F00C         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  6905   002308  0012               	return		;funcret
  6906   00230A                     __end_of_EUSART_SetFramingErrorHandler:
  6907                           	callstack 0
  6908                           
  6909 ;; *************** function _EUSART_SetErrorHandler *****************
  6910 ;; Defined at:
  6911 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6914 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;Total ram usage:        2 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; Hardware stack levels required when called: 7
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_EUSART_Initialize
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text31
  6941   00230A                     __ptext31:
  6942                           	callstack 0
  6943   00230A                     _EUSART_SetErrorHandler:
  6944                           	callstack 21
  6945   00230A                     
  6946                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6947   00230A  C09C  F007         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  6948   00230E  C09D  F008         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  6949   002312  0012               	return		;funcret
  6950   002314                     __end_of_EUSART_SetErrorHandler:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _LCD_vSend_string *****************
  6954 ;; Defined at:
  6955 ;;		line 37 in file "AECUL_Modules/LCD/LCD.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  data            2    5[BANK0 ] PTR unsigned char 
  6958 ;;		 -> STR_48(12), STR_47(15), STR_46(18), STR_45(12), 
  6959 ;;		 -> STR_44(13), STR_43(12), STR_42(13), STR_41(12), 
  6960 ;;		 -> STR_40(13), STR_39(12), STR_38(11), STR_37(14), 
  6961 ;;		 -> STR_36(18), STR_35(12), STR_34(13), STR_33(12), 
  6962 ;;		 -> STR_32(11), STR_31(18), STR_30(12), STR_29(12), 
  6963 ;;		 -> STR_28(12), STR_27(14), STR_26(11), STR_25(7), 
  6964 ;;		 -> STR_24(9), STR_23(12), STR_22(12), STR_21(18), 
  6965 ;;		 -> STR_20(18), STR_19(12), STR_18(11), STR_17(14), 
  6966 ;;		 -> STR_16(8), STR_15(17), STR_14(16), STR_13(14), 
  6967 ;;		 -> STR_12(15), STR_11(15), STR_10(12), STR_9(17), 
  6968 ;;		 -> STR_8(12), STR_7(17), STR_6(11), STR_5(12), 
  6969 ;;		 -> STR_4(15), STR_3(11), STR_2(10), 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;Total ram usage:        2 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; Hardware stack levels required when called: 9
  6988 ;; This function calls:
  6989 ;;		_LCD_vSend_char
  6990 ;; This function is called by:
  6991 ;;		_main
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text32
  6996   001F88                     __ptext32:
  6997                           	callstack 0
  6998   001F88                     _LCD_vSend_string:
  6999                           	callstack 21
  7000   001F88                     
  7001                           ;AECUL_Modules/LCD/LCD.c: 37: void LCD_vSend_string(char *data);AECUL_Modules/LCD/LCD.c:
      +                           38: {;AECUL_Modules/LCD/LCD.c: 39:  while((*data)!=0)
  7002   001F88  EFD2  F00F         	goto	l6263
  7003   001F8C                     l6259:
  7004                           
  7005                           ;AECUL_Modules/LCD/LCD.c: 40:  {;AECUL_Modules/LCD/LCD.c: 41:   LCD_vSend_char(*data);
  7006   001F8C  C0A1  FFF6         	movff	LCD_vSend_string@data,tblptrl
  7007   001F90  C0A2  FFF7         	movff	LCD_vSend_string@data+1,tblptrh
  7008   001F94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7009   001F94  6AF8               	clrf	tblptru,c
  7010   001F96                     	endif
  7011   001F96                     	if	0	;tblptru may be non-zero
  7012   001F96                     	endif
  7013   001F96  0008               	tblrd		*
  7014   001F98  50F5               	movf	tablat,w,c
  7015   001F9A  EC1E  F011         	call	_LCD_vSend_char
  7016   001F9E                     
  7017                           ;AECUL_Modules/LCD/LCD.c: 42:   data++;
  7018   001F9E  0100               	movlb	0	; () banked
  7019   001FA0  4BA1               	infsnz	LCD_vSend_string@data& (0+255),f,b
  7020   001FA2  2BA2               	incf	(LCD_vSend_string@data+1)& (0+255),f,b
  7021   001FA4                     l6263:
  7022                           
  7023                           ;AECUL_Modules/LCD/LCD.c: 39:  while((*data)!=0)
  7024   001FA4  C0A1  FFF6         	movff	LCD_vSend_string@data,tblptrl
  7025   001FA8  C0A2  FFF7         	movff	LCD_vSend_string@data+1,tblptrh
  7026   001FAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7027   001FAC  6AF8               	clrf	tblptru,c
  7028   001FAE                     	endif
  7029   001FAE                     	if	0	;tblptru may be non-zero
  7030   001FAE                     	endif
  7031   001FAE  0008               	tblrd		*
  7032   001FB0  50F5               	movf	tablat,w,c
  7033   001FB2  0900               	iorlw	0
  7034   001FB4  A4D8               	btfss	status,2,c
  7035   001FB6  EFDF  F00F         	goto	u4061
  7036   001FBA  EFE1  F00F         	goto	u4060
  7037   001FBE                     u4061:
  7038   001FBE  EFC6  F00F         	goto	l6259
  7039   001FC2                     u4060:
  7040   001FC2  0012               	return		;funcret
  7041   001FC4                     __end_of_LCD_vSend_string:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function _LCD_vSend_char *****************
  7045 ;; Defined at:
  7046 ;;		line 29 in file "AECUL_Modules/LCD/LCD.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  data            1    wreg     unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  data            1    4[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;Total ram usage:        1 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 8
  7067 ;; This function calls:
  7068 ;;		_DIO_write_port
  7069 ;;		_send_falling_edge
  7070 ;; This function is called by:
  7071 ;;		_LCD_vSend_string
  7072 ;;		_main
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text33
  7077   00223C                     __ptext33:
  7078                           	callstack 0
  7079   00223C                     _LCD_vSend_char:
  7080                           	callstack 21
  7081                           
  7082                           ;incstack = 0
  7083                           ;LCD_vSend_char@data stored from wreg
  7084   00223C  0100               	movlb	0	; () banked
  7085   00223E  6FA0               	movwf	LCD_vSend_char@data& (0+255),b
  7086   002240                     
  7087                           ;AECUL_Modules/LCD/LCD.c: 29: void LCD_vSend_char(uint8_t data);AECUL_Modules/LCD/LCD.c:
      +                           30: {;AECUL_Modules/LCD/LCD.c: 31:  DIO_write_port('D',data);
  7088   002240  C0A0  F09C         	movff	LCD_vSend_char@data,DIO_write_port@portvalue
  7089   002244  0E44               	movlw	68
  7090   002246  ECA5  F00E         	call	_DIO_write_port
  7091   00224A  808B               	bsf	139,0,c	;volatile
  7092   00224C                     
  7093                           ;AECUL_Modules/LCD/LCD.c: 33:  send_falling_edge();
  7094   00224C  EC80  F010         	call	_send_falling_edge	;wreg free
  7095   002250  0012               	return		;funcret
  7096   002252                     __end_of_LCD_vSend_char:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _LCD_vInit *****************
  7100 ;; Defined at:
  7101 ;;		line 4 in file "AECUL_Modules/LCD/LCD.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;Total ram usage:        1 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 9
  7122 ;; This function calls:
  7123 ;;		_LCD_vSend_cmd
  7124 ;; This function is called by:
  7125 ;;		_main
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text34
  7130   0020D6                     __ptext34:
  7131                           	callstack 0
  7132   0020D6                     _LCD_vInit:
  7133                           	callstack 21
  7134   0020D6  928B               	bcf	139,1,c	;volatile
  7135   0020D8                     
  7136                           ;AECUL_Modules/LCD/LCD.c: 8:  LCD_vSend_cmd(0X38);
  7137   0020D8  0E38               	movlw	56
  7138   0020DA  EC29  F011         	call	_LCD_vSend_cmd
  7139                           
  7140                           ;AECUL_Modules/LCD/LCD.c: 9:  LCD_vSend_cmd(0X01);
  7141   0020DE  0E01               	movlw	1
  7142   0020E0  EC29  F011         	call	_LCD_vSend_cmd
  7143                           
  7144                           ;AECUL_Modules/LCD/LCD.c: 10:  LCD_vSend_cmd(0X0E);
  7145   0020E4  0E0E               	movlw	14
  7146   0020E6  EC29  F011         	call	_LCD_vSend_cmd
  7147   0020EA                     
  7148                           ;AECUL_Modules/LCD/LCD.c: 11:  _delay((unsigned long)((10)*(16000000/4000.0)));
  7149   0020EA  0E34               	movlw	52
  7150   0020EC  0100               	movlb	0	; () banked
  7151   0020EE  6FA1               	movwf	??_LCD_vInit& (0+255),b
  7152   0020F0  0EF1               	movlw	241
  7153   0020F2                     u5907:
  7154   0020F2  2EE8               	decfsz	wreg,f,c
  7155   0020F4  D7FE               	bra	u5907
  7156   0020F6  2FA1               	decfsz	??_LCD_vInit& (0+255),f,b
  7157   0020F8  D7FC               	bra	u5907
  7158   0020FA  F000 F000          	nop2	
  7159   0020FE  0012               	return		;funcret
  7160   002100                     __end_of_LCD_vInit:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _LCD_movecursor *****************
  7164 ;; Defined at:
  7165 ;;		line 52 in file "AECUL_Modules/LCD/LCD.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  row             1    wreg     unsigned char 
  7168 ;;  coloumn         1    5[BANK0 ] unsigned char 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  row             1    7[BANK0 ] unsigned char 
  7171 ;;  data            1    6[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7181 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;Total ram usage:        3 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 9
  7188 ;; This function calls:
  7189 ;;		_LCD_vSend_cmd
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text35
  7196   0019EC                     __ptext35:
  7197                           	callstack 0
  7198   0019EC                     _LCD_movecursor:
  7199                           	callstack 21
  7200                           
  7201                           ;incstack = 0
  7202                           ;LCD_movecursor@row stored from wreg
  7203   0019EC  0100               	movlb	0	; () banked
  7204   0019EE  6FA3               	movwf	LCD_movecursor@row& (0+255),b
  7205   0019F0                     
  7206                           ;AECUL_Modules/LCD/LCD.c: 52: void LCD_movecursor(uint8_t row,uint8_t coloumn);AECUL_Mod
      +                          ules/LCD/LCD.c: 53: {;AECUL_Modules/LCD/LCD.c: 54:  uint8_t data ;;AECUL_Modules/LCD/LCD
      +                          .c: 56:  if(row>2||row<1||coloumn>16||coloumn<1)
  7207   0019F0  0E03               	movlw	3
  7208   0019F2  0100               	movlb	0	; () banked
  7209   0019F4  61A3               	cpfslt	LCD_movecursor@row& (0+255),b
  7210   0019F6  EFFF  F00C         	goto	u4071
  7211   0019FA  EF01  F00D         	goto	u4070
  7212   0019FE                     u4071:
  7213   0019FE  EF19  F00D         	goto	l6275
  7214   001A02                     u4070:
  7215   001A02                     
  7216                           ; BSR set to: 0
  7217   001A02  51A3               	movf	LCD_movecursor@row& (0+255),w,b
  7218   001A04  B4D8               	btfsc	status,2,c
  7219   001A06  EF07  F00D         	goto	u4081
  7220   001A0A  EF09  F00D         	goto	u4080
  7221   001A0E                     u4081:
  7222   001A0E  EF19  F00D         	goto	l6275
  7223   001A12                     u4080:
  7224   001A12                     
  7225                           ; BSR set to: 0
  7226   001A12  0E11               	movlw	17
  7227   001A14  61A1               	cpfslt	LCD_movecursor@coloumn& (0+255),b
  7228   001A16  EF0F  F00D         	goto	u4091
  7229   001A1A  EF11  F00D         	goto	u4090
  7230   001A1E                     u4091:
  7231   001A1E  EF19  F00D         	goto	l6275
  7232   001A22                     u4090:
  7233   001A22                     
  7234                           ; BSR set to: 0
  7235   001A22  51A1               	movf	LCD_movecursor@coloumn& (0+255),w,b
  7236   001A24  A4D8               	btfss	status,2,c
  7237   001A26  EF17  F00D         	goto	u4101
  7238   001A2A  EF19  F00D         	goto	u4100
  7239   001A2E                     u4101:
  7240   001A2E  EF1B  F00D         	goto	l6277
  7241   001A32                     u4100:
  7242   001A32                     l6275:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;AECUL_Modules/LCD/LCD.c: 57:  {;AECUL_Modules/LCD/LCD.c: 58:   data=0x80;
  7246   001A32  0E80               	movlw	128
  7247   001A34  6FA2               	movwf	LCD_movecursor@data& (0+255),b
  7248   001A36                     l6277:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;AECUL_Modules/LCD/LCD.c: 62:  if(row==1)
  7252   001A36  05A3               	decf	LCD_movecursor@row& (0+255),w,b
  7253   001A38  A4D8               	btfss	status,2,c
  7254   001A3A  EF21  F00D         	goto	u4111
  7255   001A3E  EF23  F00D         	goto	u4110
  7256   001A42                     u4111:
  7257   001A42  EF28  F00D         	goto	l6281
  7258   001A46                     u4110:
  7259   001A46                     
  7260                           ; BSR set to: 0
  7261                           ;AECUL_Modules/LCD/LCD.c: 63:  {;AECUL_Modules/LCD/LCD.c: 64:   data=0x80+coloumn-1 ;
  7262   001A46  51A1               	movf	LCD_movecursor@coloumn& (0+255),w,b
  7263   001A48  0F7F               	addlw	127
  7264   001A4A  6FA2               	movwf	LCD_movecursor@data& (0+255),b
  7265                           
  7266                           ;AECUL_Modules/LCD/LCD.c: 65:  }
  7267   001A4C  EF34  F00D         	goto	l6285
  7268   001A50                     l6281:
  7269                           
  7270                           ; BSR set to: 0
  7271   001A50  0E02               	movlw	2
  7272   001A52  19A3               	xorwf	LCD_movecursor@row& (0+255),w,b
  7273   001A54  A4D8               	btfss	status,2,c
  7274   001A56  EF2F  F00D         	goto	u4121
  7275   001A5A  EF31  F00D         	goto	u4120
  7276   001A5E                     u4121:
  7277   001A5E  EF34  F00D         	goto	l6285
  7278   001A62                     u4120:
  7279   001A62                     
  7280                           ; BSR set to: 0
  7281                           ;AECUL_Modules/LCD/LCD.c: 67:  {;AECUL_Modules/LCD/LCD.c: 68:   data=0xc0+coloumn-1;
  7282   001A62  51A1               	movf	LCD_movecursor@coloumn& (0+255),w,b
  7283   001A64  0FBF               	addlw	191
  7284   001A66  6FA2               	movwf	LCD_movecursor@data& (0+255),b
  7285   001A68                     l6285:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;AECUL_Modules/LCD/LCD.c: 72:  LCD_vSend_cmd(data);
  7289   001A68  51A2               	movf	LCD_movecursor@data& (0+255),w,b
  7290   001A6A  EC29  F011         	call	_LCD_vSend_cmd
  7291   001A6E  0012               	return		;funcret
  7292   001A70                     __end_of_LCD_movecursor:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _LCD_clearscreen *****************
  7296 ;; Defined at:
  7297 ;;		line 48 in file "AECUL_Modules/LCD/LCD.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 9
  7318 ;; This function calls:
  7319 ;;		_LCD_vSend_cmd
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text36
  7326   002324                     __ptext36:
  7327                           	callstack 0
  7328   002324                     _LCD_clearscreen:
  7329                           	callstack 21
  7330   002324                     
  7331                           ;AECUL_Modules/LCD/LCD.c: 50:  LCD_vSend_cmd(0X01);
  7332   002324  0E01               	movlw	1
  7333   002326  EC29  F011         	call	_LCD_vSend_cmd
  7334   00232A  0012               	return		;funcret
  7335   00232C                     __end_of_LCD_clearscreen:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function _LCD_vSend_cmd *****************
  7339 ;; Defined at:
  7340 ;;		line 22 in file "AECUL_Modules/LCD/LCD.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  cmd             1    wreg     unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  cmd             1    4[BANK0 ] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;Total ram usage:        1 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 8
  7361 ;; This function calls:
  7362 ;;		_DIO_write_port
  7363 ;;		_send_falling_edge
  7364 ;; This function is called by:
  7365 ;;		_LCD_vInit
  7366 ;;		_LCD_clearscreen
  7367 ;;		_LCD_movecursor
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text37
  7372   002252                     __ptext37:
  7373                           	callstack 0
  7374   002252                     _LCD_vSend_cmd:
  7375                           	callstack 21
  7376                           
  7377                           ;incstack = 0
  7378                           ;LCD_vSend_cmd@cmd stored from wreg
  7379   002252  0100               	movlb	0	; () banked
  7380   002254  6FA0               	movwf	LCD_vSend_cmd@cmd& (0+255),b
  7381   002256                     
  7382                           ;AECUL_Modules/LCD/LCD.c: 22: void LCD_vSend_cmd(uint8_t cmd);AECUL_Modules/LCD/LCD.c: 2
      +                          3: {;AECUL_Modules/LCD/LCD.c: 24:  DIO_write_port('D',cmd);
  7383   002256  C0A0  F09C         	movff	LCD_vSend_cmd@cmd,DIO_write_port@portvalue
  7384   00225A  0E44               	movlw	68
  7385   00225C  ECA5  F00E         	call	_DIO_write_port
  7386   002260  908B               	bcf	139,0,c	;volatile
  7387   002262                     
  7388                           ;AECUL_Modules/LCD/LCD.c: 26:  send_falling_edge();
  7389   002262  EC80  F010         	call	_send_falling_edge	;wreg free
  7390   002266  0012               	return		;funcret
  7391   002268                     __end_of_LCD_vSend_cmd:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _send_falling_edge *****************
  7395 ;; Defined at:
  7396 ;;		line 14 in file "AECUL_Modules/LCD/LCD.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;Total ram usage:        1 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 7
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_LCD_vSend_cmd
  7421 ;;		_LCD_vSend_char
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text38
  7426   002100                     __ptext38:
  7427                           	callstack 0
  7428   002100                     _send_falling_edge:
  7429                           	callstack 21
  7430   002100  848B               	bsf	139,2,c	;volatile
  7431   002102                     
  7432                           ;AECUL_Modules/LCD/LCD.c: 18:  _delay((unsigned long)((2)*(16000000/4000.0)));
  7433   002102  0E0B               	movlw	11
  7434   002104  0100               	movlb	0	; () banked
  7435   002106  6F9C               	movwf	??_send_falling_edge& (0+255),b
  7436   002108  0E62               	movlw	98
  7437   00210A                     u5917:
  7438   00210A  2EE8               	decfsz	wreg,f,c
  7439   00210C  D7FE               	bra	u5917
  7440   00210E  2F9C               	decfsz	??_send_falling_edge& (0+255),f,b
  7441   002110  D7FC               	bra	u5917
  7442   002112  F000               	nop	
  7443   002114  948B               	bcf	139,2,c	;volatile
  7444   002116                     
  7445                           ;AECUL_Modules/LCD/LCD.c: 20:  _delay((unsigned long)((2)*(16000000/4000.0)));
  7446   002116  0E0B               	movlw	11
  7447   002118  0100               	movlb	0	; () banked
  7448   00211A  6F9C               	movwf	??_send_falling_edge& (0+255),b
  7449   00211C  0E62               	movlw	98
  7450   00211E                     u5927:
  7451   00211E  2EE8               	decfsz	wreg,f,c
  7452   002120  D7FE               	bra	u5927
  7453   002122  2F9C               	decfsz	??_send_falling_edge& (0+255),f,b
  7454   002124  D7FC               	bra	u5927
  7455   002126  F000               	nop	
  7456   002128  0012               	return		;funcret
  7457   00212A                     __end_of_send_falling_edge:
  7458                           	callstack 0
  7459                           
  7460 ;; *************** function _DIO_write_port *****************
  7461 ;; Defined at:
  7462 ;;		line 96 in file "mcc_generated_files/pin_manager.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  portname        1    wreg     unsigned char 
  7465 ;;  portvalue       1    0[BANK0 ] unsigned char 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  portname        1    3[BANK0 ] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7477 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;Total ram usage:        4 bytes
  7482 ;; Hardware stack levels used: 1
  7483 ;; Hardware stack levels required when called: 7
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_LCD_vSend_cmd
  7488 ;;		_LCD_vSend_char
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text39
  7493   001D4A                     __ptext39:
  7494                           	callstack 0
  7495   001D4A                     _DIO_write_port:
  7496                           	callstack 21
  7497                           
  7498                           ;incstack = 0
  7499                           ;DIO_write_port@portname stored from wreg
  7500   001D4A  0100               	movlb	0	; () banked
  7501   001D4C  6F9F               	movwf	DIO_write_port@portname& (0+255),b
  7502   001D4E                     
  7503                           ;mcc_generated_files/pin_manager.c: 96: void DIO_write_port(uint8_t portname,uint8_t por
      +                          tvalue);mcc_generated_files/pin_manager.c: 97: {;mcc_generated_files/pin_manager.c: 98: 
      +                           switch(portname)
  7504   001D4E  EFB9  F00E         	goto	l5875
  7505   001D52                     l311:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;mcc_generated_files/pin_manager.c: 101:   PORTA=portvalue;
  7509   001D52  C09C  FF80         	movff	DIO_write_port@portvalue,3968	;volatile
  7510                           
  7511                           ;mcc_generated_files/pin_manager.c: 102:   break ;
  7512   001D56  EFD7  F00E         	goto	l317
  7513   001D5A                     l313:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;mcc_generated_files/pin_manager.c: 104:   PORTB=portvalue;
  7517   001D5A  C09C  FF81         	movff	DIO_write_port@portvalue,3969	;volatile
  7518                           
  7519                           ;mcc_generated_files/pin_manager.c: 105:   break ;
  7520   001D5E  EFD7  F00E         	goto	l317
  7521   001D62                     l314:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;mcc_generated_files/pin_manager.c: 107:   PORTC=portvalue;
  7525   001D62  C09C  FF82         	movff	DIO_write_port@portvalue,3970	;volatile
  7526                           
  7527                           ;mcc_generated_files/pin_manager.c: 108:   break ;
  7528   001D66  EFD7  F00E         	goto	l317
  7529   001D6A                     l315:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;mcc_generated_files/pin_manager.c: 110:   PORTD=portvalue;
  7533   001D6A  C09C  FF83         	movff	DIO_write_port@portvalue,3971	;volatile
  7534                           
  7535                           ;mcc_generated_files/pin_manager.c: 111:   break ;
  7536   001D6E  EFD7  F00E         	goto	l317
  7537   001D72                     l5875:
  7538   001D72  0100               	movlb	0	; () banked
  7539   001D74  519F               	movf	DIO_write_port@portname& (0+255),w,b
  7540   001D76  6F9D               	movwf	??_DIO_write_port& (0+255),b
  7541   001D78  6B9E               	clrf	(??_DIO_write_port+1)& (0+255),b
  7542                           
  7543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7544                           ; Switch size 1, requested type "simple"
  7545                           ; Number of cases is 1, Range of values is 0 to 0
  7546                           ; switch strategies available:
  7547                           ; Name         Instructions Cycles
  7548                           ; simple_byte            4     3 (average)
  7549                           ;	Chosen strategy is simple_byte
  7550   001D7A  519E               	movf	(??_DIO_write_port+1)& (0+255),w,b
  7551   001D7C  0A00               	xorlw	0	; case 0
  7552   001D7E  B4D8               	btfsc	status,2,c
  7553   001D80  EFC4  F00E         	goto	l7643
  7554   001D84  EFD7  F00E         	goto	l317
  7555   001D88                     l7643:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ; Switch size 1, requested type "simple"
  7559                           ; Number of cases is 4, Range of values is 65 to 68
  7560                           ; switch strategies available:
  7561                           ; Name         Instructions Cycles
  7562                           ; simple_byte           13     7 (average)
  7563                           ;	Chosen strategy is simple_byte
  7564   001D88  519D               	movf	??_DIO_write_port& (0+255),w,b
  7565   001D8A  0A41               	xorlw	65	; case 65
  7566   001D8C  B4D8               	btfsc	status,2,c
  7567   001D8E  EFA9  F00E         	goto	l311
  7568   001D92  0A03               	xorlw	3	; case 66
  7569   001D94  B4D8               	btfsc	status,2,c
  7570   001D96  EFAD  F00E         	goto	l313
  7571   001D9A  0A01               	xorlw	1	; case 67
  7572   001D9C  B4D8               	btfsc	status,2,c
  7573   001D9E  EFB1  F00E         	goto	l314
  7574   001DA2  0A07               	xorlw	7	; case 68
  7575   001DA4  B4D8               	btfsc	status,2,c
  7576   001DA6  EFB5  F00E         	goto	l315
  7577   001DAA  EFD7  F00E         	goto	l317
  7578   001DAE                     l317:
  7579                           
  7580                           ; BSR set to: 0
  7581   001DAE  0012               	return		;funcret
  7582   001DB0                     __end_of_DIO_write_port:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _EUSART_Write *****************
  7586 ;; Defined at:
  7587 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  txData          1    wreg     unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  txData          1    0[BANK0 ] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        1 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 7
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;;		_UART_LoggingDebugData_Send_String
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text40
  7617   0021F6                     __ptext40:
  7618                           	callstack 0
  7619   0021F6                     _EUSART_Write:
  7620                           	callstack 23
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;incstack = 0
  7624                           ;EUSART_Write@txData stored from wreg
  7625   0021F6  0100               	movlb	0	; () banked
  7626   0021F8  6F9C               	movwf	EUSART_Write@txData& (0+255),b
  7627   0021FA                     l776:
  7628                           
  7629                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  7630   0021FA  A89E               	btfss	158,4,c	;volatile
  7631   0021FC  EF02  F011         	goto	u4131
  7632   002200  EF04  F011         	goto	u4130
  7633   002204                     u4131:
  7634   002204  EFFD  F010         	goto	l776
  7635   002208                     u4130:
  7636   002208                     
  7637                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  7638   002208  C09C  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  7639   00220C  0012               	return		;funcret
  7640   00220E                     __end_of_EUSART_Write:
  7641                           	callstack 0
  7642                           
  7643 ;; *************** function _DATAEE_WriteByte *****************
  7644 ;; Defined at:
  7645 ;;		line 173 in file "mcc_generated_files/memory.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  bAdd            2    8[BANK0 ] unsigned short 
  7648 ;;  bData           1   10[BANK0 ] unsigned char 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;Total ram usage:        4 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 7
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_main
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text41
  7675   001E78                     __ptext41:
  7676                           	callstack 0
  7677   001E78                     _DATAEE_WriteByte:
  7678                           	callstack 23
  7679   001E78                     
  7680                           ;mcc_generated_files/memory.c: 173: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 174: {;mcc_generated_files/memory.c: 175:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  7681   001E78  0E00               	movlw	0
  7682   001E7A  BEF2               	btfsc	242,7,c	;volatile
  7683   001E7C  0E01               	movlw	1
  7684   001E7E  0100               	movlb	0	; () banked
  7685   001E80  6FA7               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
  7686   001E82                     
  7687                           ; BSR set to: 0
  7688                           ;mcc_generated_files/memory.c: 177:     EEADRH = ((bAdd >> 8) & 0x03);
  7689   001E82  51A5               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
  7690   001E84  0B03               	andlw	3
  7691   001E86  6EAA               	movwf	170,c	;volatile
  7692   001E88                     
  7693                           ; BSR set to: 0
  7694                           ;mcc_generated_files/memory.c: 178:     EEADR = (bAdd & 0xFF);
  7695   001E88  C0A4  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  7696   001E8C                     
  7697                           ; BSR set to: 0
  7698                           ;mcc_generated_files/memory.c: 179:     EEDATA = bData;
  7699   001E8C  C0A6  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  7700   001E90                     
  7701                           ; BSR set to: 0
  7702                           ;mcc_generated_files/memory.c: 180:     EECON1bits.EEPGD = 0;
  7703   001E90  9EA6               	bcf	166,7,c	;volsfr
  7704   001E92                     
  7705                           ; BSR set to: 0
  7706                           ;mcc_generated_files/memory.c: 181:     EECON1bits.CFGS = 0;
  7707   001E92  9CA6               	bcf	166,6,c	;volsfr
  7708   001E94                     
  7709                           ; BSR set to: 0
  7710                           ;mcc_generated_files/memory.c: 182:     EECON1bits.WREN = 1;
  7711   001E94  84A6               	bsf	166,2,c	;volsfr
  7712   001E96                     
  7713                           ; BSR set to: 0
  7714                           ;mcc_generated_files/memory.c: 183:     INTCONbits.GIE = 0;
  7715   001E96  9EF2               	bcf	242,7,c	;volatile
  7716   001E98                     
  7717                           ; BSR set to: 0
  7718                           ;mcc_generated_files/memory.c: 184:     EECON2 = 0x55;
  7719   001E98  0E55               	movlw	85
  7720   001E9A  6EA7               	movwf	167,c	;volsfr
  7721   001E9C                     
  7722                           ; BSR set to: 0
  7723                           ;mcc_generated_files/memory.c: 185:     EECON2 = 0xAA;
  7724   001E9C  0EAA               	movlw	170
  7725   001E9E  6EA7               	movwf	167,c	;volsfr
  7726   001EA0                     
  7727                           ; BSR set to: 0
  7728                           ;mcc_generated_files/memory.c: 186:     EECON1bits.WR = 1;
  7729   001EA0  82A6               	bsf	166,1,c	;volsfr
  7730   001EA2                     l853:
  7731                           
  7732                           ;mcc_generated_files/memory.c: 188:     while (EECON1bits.WR)
  7733   001EA2  B2A6               	btfsc	166,1,c	;volsfr
  7734   001EA4  EF56  F00F         	goto	u4141
  7735   001EA8  EF58  F00F         	goto	u4140
  7736   001EAC                     u4141:
  7737   001EAC  EF51  F00F         	goto	l853
  7738   001EB0                     u4140:
  7739   001EB0                     
  7740                           ;mcc_generated_files/memory.c: 192:     EECON1bits.WREN = 0;
  7741   001EB0  94A6               	bcf	166,2,c	;volsfr
  7742                           
  7743                           ;mcc_generated_files/memory.c: 193:     INTCONbits.GIE = GIEBitValue;
  7744   001EB2  0100               	movlb	0	; () banked
  7745   001EB4  B1A7               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
  7746   001EB6  D002               	bra	u4155
  7747   001EB8  9EF2               	bcf	242,7,c	;volatile
  7748   001EBA  D001               	bra	u4156
  7749   001EBC                     u4155:
  7750   001EBC  8EF2               	bsf	242,7,c	;volatile
  7751   001EBE                     u4156:
  7752   001EBE  0012               	return		;funcret
  7753   001EC0                     __end_of_DATAEE_WriteByte:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function _DATAEE_ReadByte *****************
  7757 ;; Defined at:
  7758 ;;		line 196 in file "mcc_generated_files/memory.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  bAdd            2    0[BANK0 ] unsigned short 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      unsigned char 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;Total ram usage:        2 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 7
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_main
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text42
  7787   002194                     __ptext42:
  7788                           	callstack 0
  7789   002194                     _DATAEE_ReadByte:
  7790                           	callstack 23
  7791   002194                     
  7792                           ;mcc_generated_files/memory.c: 196: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 197: {;mcc_generated_files/memory.c: 198:     EEADRH = ((bAdd >> 8) & 0
      +                          x03);
  7793   002194  0100               	movlb	0	; () banked
  7794   002196  519D               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
  7795   002198  0B03               	andlw	3
  7796   00219A  6EAA               	movwf	170,c	;volatile
  7797   00219C                     
  7798                           ; BSR set to: 0
  7799                           ;mcc_generated_files/memory.c: 199:     EEADR = (bAdd & 0xFF);
  7800   00219C  C09C  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  7801   0021A0                     
  7802                           ; BSR set to: 0
  7803                           ;mcc_generated_files/memory.c: 200:     EECON1bits.CFGS = 0;
  7804   0021A0  9CA6               	bcf	166,6,c	;volsfr
  7805   0021A2                     
  7806                           ; BSR set to: 0
  7807                           ;mcc_generated_files/memory.c: 201:     EECON1bits.EEPGD = 0;
  7808   0021A2  9EA6               	bcf	166,7,c	;volsfr
  7809   0021A4                     
  7810                           ; BSR set to: 0
  7811                           ;mcc_generated_files/memory.c: 202:     EECON1bits.RD = 1;
  7812   0021A4  80A6               	bsf	166,0,c	;volsfr
  7813   0021A6                     
  7814                           ; BSR set to: 0
  7815                           ;mcc_generated_files/memory.c: 203:     __nop();
  7816   0021A6  F000               	nop	
  7817   0021A8                     
  7818                           ;mcc_generated_files/memory.c: 204:     __nop();
  7819   0021A8  F000               	nop	
  7820   0021AA                     
  7821                           ;mcc_generated_files/memory.c: 206:     return (EEDATA);
  7822   0021AA  50A8               	movf	168,w,c	;volatile
  7823   0021AC  0012               	return		;funcret
  7824   0021AE                     __end_of_DATAEE_ReadByte:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  7828 ;; Defined at:
  7829 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;Total ram usage:       10 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 6
  7850 ;; This function calls:
  7851 ;;		NULL
  7852 ;;		_I2C_MasterIsr
  7853 ;; This function is called by:
  7854 ;;		Interrupt level 2
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	intcode
  7859   000008                     __pintcode:
  7860                           	callstack 0
  7861   000008                     _INTERRUPT_InterruptManagerHigh:
  7862                           	callstack 19
  7863                           
  7864                           ;incstack = 0
  7865   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7866   00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  7867   00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  7868   000012  CFD9 F034          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  7869   000016  CFDA F035          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  7870   00001A  CFF3 F036          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  7871   00001E  CFF4 F037          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  7872   000022  CFF6 F038          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  7873   000026  CFF7 F039          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  7874   00002A  CFF8 F03A          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  7875   00002E  CFF5 F03B          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  7876   000032                     
  7877                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  7878   000032  A6A0               	btfss	160,3,c	;volatile
  7879   000034  EF1E  F000         	goto	i2u444_41
  7880   000038  EF20  F000         	goto	i2u444_40
  7881   00003C                     i2u444_41:
  7882   00003C  EF35  F000         	goto	i2l705
  7883   000040                     i2u444_40:
  7884   000040  A6A1               	btfss	161,3,c	;volatile
  7885   000042  EF25  F000         	goto	i2u445_41
  7886   000046  EF27  F000         	goto	i2u445_40
  7887   00004A                     i2u445_41:
  7888   00004A  EF35  F000         	goto	i2l705
  7889   00004E                     i2u445_40:
  7890   00004E                     i2l6603:
  7891                           
  7892                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         MSSP_InterruptHandler();
  7893   00004E  D802               	call	i2u446_48
  7894   000050  EF33  F000         	goto	i2u446_49
  7895   000054                     i2u446_48:
  7896   000054  0005               	push	
  7897   000056  6EFA               	movwf	pclath,c
  7898   000058  500D               	movf	_MSSP_InterruptHandler^0,w,c
  7899   00005A  6EFD               	movwf	tosl,c
  7900   00005C  500E               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  7901   00005E  6EFE               	movwf	tosh,c
  7902   000060  6AFF               	clrf	tosu,c
  7903   000062  50FA               	movf	pclath,w,c
  7904   000064  0012               	return		;indir
  7905   000066                     i2u446_49:
  7906                           
  7907                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  7908   000066  EF45  F000         	goto	i2l709
  7909   00006A                     i2l705:
  7910   00006A  A69D               	btfss	157,3,c	;volatile
  7911   00006C  EF3A  F000         	goto	i2u447_41
  7912   000070  EF3C  F000         	goto	i2u447_40
  7913   000074                     i2u447_41:
  7914   000074  EF45  F000         	goto	i2l709
  7915   000078                     i2u447_40:
  7916   000078  A69E               	btfss	158,3,c	;volatile
  7917   00007A  EF41  F000         	goto	i2u448_41
  7918   00007E  EF43  F000         	goto	i2u448_40
  7919   000082                     i2u448_41:
  7920   000082  EF45  F000         	goto	i2l709
  7921   000086                     i2u448_40:
  7922   000086  EF27  F000         	goto	i2l6603
  7923   00008A                     i2l709:
  7924   00008A  C03B  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  7925   00008E  C03A  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  7926   000092  C039  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  7927   000096  C038  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  7928   00009A  C037  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  7929   00009E  C036  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  7930   0000A2  C035  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  7931   0000A6  C034  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  7932   0000AA  C033  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  7933   0000AE  C032  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  7934   0000B2  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7935   0000B4  0011               	retfie		f
  7936   0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _I2C_MasterIsr *****************
  7940 ;; Defined at:
  7941 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;Total ram usage:        0 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 5
  7962 ;; This function calls:
  7963 ;;		_I2C_MasterFsm
  7964 ;; This function is called by:
  7965 ;;		_I2C_Open
  7966 ;;		_INTERRUPT_InterruptManagerHigh
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text44
  7971   00236C                     __ptext44:
  7972                           	callstack 0
  7973   00236C                     _I2C_MasterIsr:
  7974                           	callstack 19
  7975   00236C                     
  7976                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  7977   00236C  EC6D  F00E         	call	_I2C_MasterFsm	;wreg free
  7978   002370  0012               	return		;funcret
  7979   002372                     __end_of_I2C_MasterIsr:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function _I2C_MasterFsm *****************
  7983 ;; Defined at:
  7984 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;Total ram usage:        2 bytes
  8003 ;; Hardware stack levels used: 1
  8004 ;; Hardware stack levels required when called: 4
  8005 ;; This function calls:
  8006 ;;		_I2C_DO_ADDRESS_NACK
  8007 ;;		_I2C_DO_IDLE
  8008 ;;		_I2C_DO_RCEN
  8009 ;;		_I2C_DO_RESET
  8010 ;;		_I2C_DO_RX
  8011 ;;		_I2C_DO_RX_ACK
  8012 ;;		_I2C_DO_RX_NACK_RESTART
  8013 ;;		_I2C_DO_RX_NACK_STOP
  8014 ;;		_I2C_DO_SEND_ADR_READ
  8015 ;;		_I2C_DO_SEND_ADR_WRITE
  8016 ;;		_I2C_DO_SEND_RESTART
  8017 ;;		_I2C_DO_SEND_RESTART_READ
  8018 ;;		_I2C_DO_SEND_RESTART_WRITE
  8019 ;;		_I2C_DO_SEND_STOP
  8020 ;;		_I2C_DO_TX
  8021 ;;		_I2C_DO_TX_EMPTY
  8022 ;;		_I2C_MasterIsNack
  8023 ;;		i2_I2C_MasterClearIrq
  8024 ;; This function is called by:
  8025 ;;		_I2C_MasterIsr
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text45
  8030   001CDA                     __ptext45:
  8031                           	callstack 0
  8032   001CDA                     _I2C_MasterFsm:
  8033                           	callstack 19
  8034   001CDA                     
  8035                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  8036   001CDA  ECCB  F011         	call	i2_I2C_MasterClearIrq	;wreg free
  8037   001CDE                     
  8038                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  8039   001CDE  0100               	movlb	0	; () banked
  8040   001CE0  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  8041   001CE2  EF75  F00E         	goto	i2u399_41
  8042   001CE6  EF77  F00E         	goto	i2u399_40
  8043   001CEA                     i2u399_41:
  8044   001CEA  EF84  F00E         	goto	i2l6203
  8045   001CEE                     i2u399_40:
  8046   001CEE                     
  8047                           ; BSR set to: 0
  8048   001CEE  EC3E  F011         	call	_I2C_MasterIsNack	;wreg free
  8049   001CF2  0900               	iorlw	0
  8050   001CF4  B4D8               	btfsc	status,2,c
  8051   001CF6  EF7F  F00E         	goto	i2u400_41
  8052   001CFA  EF81  F00E         	goto	i2u400_40
  8053   001CFE                     i2u400_41:
  8054   001CFE  EF84  F00E         	goto	i2l6203
  8055   001D02                     i2u400_40:
  8056   001D02                     
  8057                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  8058   001D02  0E0F               	movlw	15
  8059   001D04  0100               	movlb	0	; () banked
  8060   001D06  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8061   001D08                     i2l6203:
  8062                           
  8063                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  8064   001D08  0100               	movlb	0	; () banked
  8065   001D0A  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  8066   001D0C  0D02               	mullw	2
  8067   001D0E  0E2B               	movlw	low _i2c_fsmStateTable
  8068   001D10  24F3               	addwf	243,w,c
  8069   001D12  6EF6               	movwf	tblptrl,c
  8070   001D14  0EFE               	movlw	high _i2c_fsmStateTable
  8071   001D16  20F4               	addwfc	244,w,c
  8072   001D18  6EF7               	movwf	tblptrh,c
  8073   001D1A                     	if	1	;There are 3 active tblptr bytes
  8074   001D1A  6AF8               	clrf	tblptru,c
  8075   001D1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8076   001D1E  22F8               	addwfc	tblptru,f,c
  8077   001D20                     	endif
  8078   001D20  0009               	tblrd		*+
  8079   001D22  CFF5 F030          	movff	tablat,??_I2C_MasterFsm
  8080   001D26  0009               	tblrd		*+
  8081   001D28  CFF5 F031          	movff	tablat,??_I2C_MasterFsm+1
  8082   001D2C  D802               	call	i2u401_48
  8083   001D2E  EFA2  F00E         	goto	i2u401_49
  8084   001D32                     i2u401_48:
  8085   001D32  0005               	push	
  8086   001D34  6EFA               	movwf	pclath,c
  8087   001D36  5030               	movf	??_I2C_MasterFsm^0,w,c
  8088   001D38  6EFD               	movwf	tosl,c
  8089   001D3A  5031               	movf	(??_I2C_MasterFsm+1)^0,w,c
  8090   001D3C  6EFE               	movwf	tosh,c
  8091   001D3E  6AFF               	clrf	tosu,c
  8092   001D40  50FA               	movf	pclath,w,c
  8093   001D42  0012               	return		;indir
  8094   001D44                     i2u401_49:
  8095   001D44  0100               	movlb	0	; () banked
  8096   001D46  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8097   001D48                     
  8098                           ; BSR set to: 0
  8099   001D48  0012               	return		;funcret
  8100   001D4A                     __end_of_I2C_MasterFsm:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function i2_I2C_MasterClearIrq *****************
  8104 ;; Defined at:
  8105 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		None
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;Total ram usage:        0 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_I2C_MasterFsm
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text46
  8133   002396                     __ptext46:
  8134                           	callstack 0
  8135   002396                     i2_I2C_MasterClearIrq:
  8136                           	callstack 22
  8137   002396                     
  8138                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  8139   002396  969E               	bcf	158,3,c	;volatile
  8140   002398  0012               	return		;funcret
  8141   00239A                     __end_ofi2_I2C_MasterClearIrq:
  8142                           	callstack 0
  8143                           
  8144 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  8145 ;; Defined at:
  8146 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      enum E3121
  8153 ;; Registers used:
  8154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;Total ram usage:        2 bytes
  8165 ;; Hardware stack levels used: 1
  8166 ;; Hardware stack levels required when called: 3
  8167 ;; This function calls:
  8168 ;;		NULL
  8169 ;;		_I2C_CallbackReturnReset
  8170 ;;		_I2C_CallbackReturnStop
  8171 ;;		_I2C_DO_SEND_RESTART
  8172 ;;		_I2C_DO_SEND_STOP
  8173 ;;		_rd1RegCompleteHandler
  8174 ;;		_rd2RegCompleteHandler
  8175 ;;		_rdBlkRegCompleteHandler
  8176 ;;		_wr1RegCompleteHandler
  8177 ;;		_wr2RegCompleteHandler
  8178 ;; This function is called by:
  8179 ;;		_I2C_MasterFsm
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text47
  8184   001DB0                     __ptext47:
  8185                           	callstack 0
  8186   001DB0                     _I2C_DO_ADDRESS_NACK:
  8187                           	callstack 19
  8188   001DB0                     
  8189                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  8190   001DB0  0100               	movlb	0	; () banked
  8191   001DB2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8192   001DB4                     
  8193                           ; BSR set to: 0
  8194                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  8195   001DB4  0E02               	movlw	2
  8196   001DB6  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8197                           
  8198                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  8199   001DB8  EFE6  F00E         	goto	i2l6089
  8200   001DBC                     i2l6079:
  8201                           
  8202                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  8203   001DBC  ECA6  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  8204   001DC0  EF0A  F00F         	goto	i2l599
  8205   001DC4                     i2l6083:
  8206                           
  8207                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  8208   001DC4  ECA2  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  8209   001DC8  EF0A  F00F         	goto	i2l599
  8210   001DCC                     i2l6089:
  8211                           
  8212                           ; BSR set to: 0
  8213   001DCC  C070  F02C         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  8214   001DD0  C071  F02D         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  8215   001DD4  D802               	call	i2u395_48
  8216   001DD6  EFF6  F00E         	goto	i2u395_49
  8217   001DDA                     i2u395_48:
  8218   001DDA  0005               	push	
  8219   001DDC  6EFA               	movwf	pclath,c
  8220   001DDE  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  8221   001DE0  6EFD               	movwf	tosl,c
  8222   001DE2  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  8223   001DE4  6EFE               	movwf	tosh,c
  8224   001DE6  6AFF               	clrf	tosu,c
  8225   001DE8  50FA               	movf	pclath,w,c
  8226   001DEA  0012               	return		;indir
  8227   001DEC                     i2u395_49:
  8228   001DEC  6E2E               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  8229   001DEE  6A2F               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  8230                           
  8231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8232                           ; Switch size 1, requested type "simple"
  8233                           ; Number of cases is 1, Range of values is 0 to 0
  8234                           ; switch strategies available:
  8235                           ; Name         Instructions Cycles
  8236                           ; simple_byte            4     3 (average)
  8237                           ;	Chosen strategy is simple_byte
  8238   001DF0  502F               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  8239   001DF2  0A00               	xorlw	0	; case 0
  8240   001DF4  B4D8               	btfsc	status,2,c
  8241   001DF6  EFFF  F00E         	goto	i2l7645
  8242   001DFA  EFE2  F00E         	goto	i2l6083
  8243   001DFE                     i2l7645:
  8244                           
  8245                           ; Switch size 1, requested type "simple"
  8246                           ; Number of cases is 2, Range of values is 2 to 3
  8247                           ; switch strategies available:
  8248                           ; Name         Instructions Cycles
  8249                           ; simple_byte            7     4 (average)
  8250                           ;	Chosen strategy is simple_byte
  8251   001DFE  502E               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  8252   001E00  0A02               	xorlw	2	; case 2
  8253   001E02  B4D8               	btfsc	status,2,c
  8254   001E04  EFDE  F00E         	goto	i2l6079
  8255   001E08  0A01               	xorlw	1	; case 3
  8256   001E0A  B4D8               	btfsc	status,2,c
  8257   001E0C  EFDE  F00E         	goto	i2l6079
  8258   001E10  EFE2  F00E         	goto	i2l6083
  8259   001E14                     i2l599:
  8260   001E14  0012               	return		;funcret
  8261   001E16                     __end_of_I2C_DO_ADDRESS_NACK:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function _I2C_DO_RESET *****************
  8265 ;; Defined at:
  8266 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      enum E3121
  8273 ;; Registers used:
  8274 ;;		wreg, status,2
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;Total ram usage:        0 bytes
  8285 ;; Hardware stack levels used: 1
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_I2C_MasterFsm
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text48
  8294   0022BE                     __ptext48:
  8295                           	callstack 0
  8296   0022BE                     _I2C_DO_RESET:
  8297                           	callstack 22
  8298   0022BE                     
  8299                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  8300   0022BE  0100               	movlb	0	; () banked
  8301   0022C0  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  8302   0022C2                     
  8303                           ; BSR set to: 0
  8304                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  8305   0022C2  0E00               	movlw	0
  8306   0022C4  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8307   0022C6                     
  8308                           ; BSR set to: 0
  8309                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  8310   0022C6  0E0E               	movlw	14
  8311   0022C8                     
  8312                           ; BSR set to: 0
  8313   0022C8  0012               	return		;funcret
  8314   0022CA                     __end_of_I2C_DO_RESET:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  8318 ;; Defined at:
  8319 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      enum E3121
  8326 ;; Registers used:
  8327 ;;		wreg, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 1
  8340 ;; This function calls:
  8341 ;;		_I2C_MasterSendNack
  8342 ;; This function is called by:
  8343 ;;		_I2C_DO_RX
  8344 ;;		_I2C_MasterFsm
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text49
  8349   00232C                     __ptext49:
  8350                           	callstack 0
  8351   00232C                     _I2C_DO_RX_NACK_RESTART:
  8352                           	callstack 21
  8353   00232C                     
  8354                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  8355   00232C  ECBC  F011         	call	_I2C_MasterSendNack	;wreg free
  8356   002330                     
  8357                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  8358   002330  0E09               	movlw	9
  8359   002332  0012               	return		;funcret
  8360   002334                     __end_of_I2C_DO_RX_NACK_RESTART:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  8364 ;; Defined at:
  8365 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      enum E3121
  8372 ;; Registers used:
  8373 ;;		wreg, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 1
  8386 ;; This function calls:
  8387 ;;		_I2C_MasterSendNack
  8388 ;; This function is called by:
  8389 ;;		_I2C_DO_RX
  8390 ;;		_I2C_MasterFsm
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text50
  8395   002334                     __ptext50:
  8396                           	callstack 0
  8397   002334                     _I2C_DO_RX_NACK_STOP:
  8398                           	callstack 21
  8399   002334                     
  8400                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  8401   002334  ECBC  F011         	call	_I2C_MasterSendNack	;wreg free
  8402   002338                     
  8403                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  8404   002338  0E0A               	movlw	10
  8405   00233A  0012               	return		;funcret
  8406   00233C                     __end_of_I2C_DO_RX_NACK_STOP:
  8407                           	callstack 0
  8408                           
  8409 ;; *************** function _I2C_DO_RX_ACK *****************
  8410 ;; Defined at:
  8411 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      enum E3121
  8418 ;; Registers used:
  8419 ;;		wreg, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; Hardware stack levels required when called: 1
  8432 ;; This function calls:
  8433 ;;		_I2C_MasterSendAck
  8434 ;; This function is called by:
  8435 ;;		_I2C_MasterFsm
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text51
  8440   00233C                     __ptext51:
  8441                           	callstack 0
  8442   00233C                     _I2C_DO_RX_ACK:
  8443                           	callstack 21
  8444   00233C                     
  8445                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  8446   00233C  ECB9  F011         	call	_I2C_MasterSendAck	;wreg free
  8447   002340                     
  8448                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  8449   002340  0E05               	movlw	5
  8450   002342  0012               	return		;funcret
  8451   002344                     __end_of_I2C_DO_RX_ACK:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _I2C_DO_SEND_STOP *****************
  8455 ;; Defined at:
  8456 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      enum E3121
  8463 ;; Registers used:
  8464 ;;		wreg, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        0 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 1
  8477 ;; This function calls:
  8478 ;;		_I2C_MasterStop
  8479 ;; This function is called by:
  8480 ;;		_I2C_DO_TX
  8481 ;;		_I2C_DO_TX_EMPTY
  8482 ;;		_I2C_DO_ADDRESS_NACK
  8483 ;;		_I2C_MasterFsm
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text52
  8488   002344                     __ptext52:
  8489                           	callstack 0
  8490   002344                     _I2C_DO_SEND_STOP:
  8491                           	callstack 20
  8492   002344                     
  8493                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  8494   002344  ECD7  F011         	call	_I2C_MasterStop	;wreg free
  8495   002348                     
  8496                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  8497   002348  0E00               	movlw	0
  8498   00234A  0012               	return		;funcret
  8499   00234C                     __end_of_I2C_DO_SEND_STOP:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function _I2C_DO_SEND_RESTART *****************
  8503 ;; Defined at:
  8504 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      enum E3121
  8511 ;; Registers used:
  8512 ;;		wreg, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 1
  8525 ;; This function calls:
  8526 ;;		_I2C_MasterEnableRestart
  8527 ;; This function is called by:
  8528 ;;		_I2C_DO_TX_EMPTY
  8529 ;;		_I2C_DO_ADDRESS_NACK
  8530 ;;		_I2C_MasterFsm
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text53
  8535   00234C                     __ptext53:
  8536                           	callstack 0
  8537   00234C                     _I2C_DO_SEND_RESTART:
  8538                           	callstack 20
  8539   00234C                     
  8540                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  8541   00234C  ECD9  F011         	call	_I2C_MasterEnableRestart	;wreg free
  8542   002350                     
  8543                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  8544   002350  0E01               	movlw	1
  8545   002352  0012               	return		;funcret
  8546   002354                     __end_of_I2C_DO_SEND_RESTART:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  8550 ;; Defined at:
  8551 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      enum E3121
  8558 ;; Registers used:
  8559 ;;		wreg, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 1
  8572 ;; This function calls:
  8573 ;;		_I2C_MasterEnableRestart
  8574 ;; This function is called by:
  8575 ;;		_I2C_DO_TX
  8576 ;;		_I2C_MasterFsm
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text54
  8581   002354                     __ptext54:
  8582                           	callstack 0
  8583   002354                     _I2C_DO_SEND_RESTART_WRITE:
  8584                           	callstack 20
  8585   002354                     
  8586                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  8587   002354  ECD9  F011         	call	_I2C_MasterEnableRestart	;wreg free
  8588   002358                     
  8589                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  8590   002358  0E02               	movlw	2
  8591   00235A  0012               	return		;funcret
  8592   00235C                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  8596 ;; Defined at:
  8597 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      enum E3121
  8604 ;; Registers used:
  8605 ;;		wreg, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;Total ram usage:        0 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 1
  8618 ;; This function calls:
  8619 ;;		_I2C_MasterEnableRestart
  8620 ;; This function is called by:
  8621 ;;		_I2C_DO_TX
  8622 ;;		_I2C_MasterFsm
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text55
  8627   00235C                     __ptext55:
  8628                           	callstack 0
  8629   00235C                     _I2C_DO_SEND_RESTART_READ:
  8630                           	callstack 20
  8631   00235C                     
  8632                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  8633   00235C  ECD9  F011         	call	_I2C_MasterEnableRestart	;wreg free
  8634   002360                     
  8635                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  8636   002360  0E01               	movlw	1
  8637   002362  0012               	return		;funcret
  8638   002364                     __end_of_I2C_DO_SEND_RESTART_READ:
  8639                           	callstack 0
  8640                           
  8641 ;; *************** function _I2C_DO_RCEN *****************
  8642 ;; Defined at:
  8643 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      enum E3121
  8650 ;; Registers used:
  8651 ;;		wreg, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 1
  8664 ;; This function calls:
  8665 ;;		_I2C_MasterStartRx
  8666 ;; This function is called by:
  8667 ;;		_I2C_MasterFsm
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text56
  8672   0022CA                     __ptext56:
  8673                           	callstack 0
  8674   0022CA                     _I2C_DO_RCEN:
  8675                           	callstack 21
  8676   0022CA                     
  8677                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  8678   0022CA  0100               	movlb	0	; () banked
  8679   0022CC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8680   0022CE                     
  8681                           ; BSR set to: 0
  8682                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  8683   0022CE  ECD1  F011         	call	_I2C_MasterStartRx	;wreg free
  8684   0022D2                     
  8685                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  8686   0022D2  0E04               	movlw	4
  8687   0022D4  0012               	return		;funcret
  8688   0022D6                     __end_of_I2C_DO_RCEN:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function _I2C_DO_RX *****************
  8692 ;; Defined at:
  8693 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      enum E3121
  8700 ;; Registers used:
  8701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;Total ram usage:        2 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 3
  8714 ;; This function calls:
  8715 ;;		NULL
  8716 ;;		_I2C_CallbackReturnReset
  8717 ;;		_I2C_CallbackReturnStop
  8718 ;;		_I2C_DO_RX_NACK_RESTART
  8719 ;;		_I2C_DO_RX_NACK_STOP
  8720 ;;		_I2C_MasterGetRxData
  8721 ;;		_I2C_MasterSendAck
  8722 ;;		_rd1RegCompleteHandler
  8723 ;;		_rd2RegCompleteHandler
  8724 ;;		_rdBlkRegCompleteHandler
  8725 ;;		_wr1RegCompleteHandler
  8726 ;;		_wr2RegCompleteHandler
  8727 ;; This function is called by:
  8728 ;;		_I2C_MasterFsm
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text57
  8733   0018A4                     __ptext57:
  8734                           	callstack 0
  8735   0018A4                     _I2C_DO_RX:
  8736                           	callstack 19
  8737   0018A4                     
  8738                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  8739   0018A4  ECCF  F011         	call	_I2C_MasterGetRxData	;wreg free
  8740   0018A8  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  8741   0018AC  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  8742   0018B0  6EDF               	movwf	indf2,c
  8743   0018B2  0100               	movlb	0	; () banked
  8744   0018B4  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  8745   0018B6  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  8746   0018B8                     
  8747                           ; BSR set to: 0
  8748                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  8749   0018B8  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  8750   0018BA  A0D8               	btfss	status,0,c
  8751   0018BC  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  8752   0018BE  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  8753   0018C0  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  8754   0018C2  B4D8               	btfsc	status,2,c
  8755   0018C4  EF66  F00C         	goto	i2u392_41
  8756   0018C8  EF68  F00C         	goto	i2u392_40
  8757   0018CC                     i2u392_41:
  8758   0018CC  EF6D  F00C         	goto	i2l536
  8759   0018D0                     i2u392_40:
  8760   0018D0                     
  8761                           ; BSR set to: 0
  8762                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  8763   0018D0  ECB9  F011         	call	_I2C_MasterSendAck	;wreg free
  8764   0018D4                     
  8765                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  8766   0018D4  0E05               	movlw	5
  8767   0018D6  EFA4  F00C         	goto	i2l537
  8768   0018DA                     i2l536:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  8772   0018DA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  8773                           
  8774                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  8775   0018DC  EF78  F00C         	goto	i2l6039
  8776   0018E0                     i2l6029:
  8777                           
  8778                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  8779   0018E0  EC96  F011         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  8780   0018E4  EFA4  F00C         	goto	i2l537
  8781   0018E8                     i2l6033:
  8782                           
  8783                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  8784   0018E8  EC9A  F011         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  8785   0018EC  EFA4  F00C         	goto	i2l537
  8786   0018F0                     i2l6039:
  8787                           
  8788                           ; BSR set to: 0
  8789   0018F0  C06C  F02C         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  8790   0018F4  C06D  F02D         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  8791   0018F8  D802               	call	i2u393_48
  8792   0018FA  EF88  F00C         	goto	i2u393_49
  8793   0018FE                     i2u393_48:
  8794   0018FE  0005               	push	
  8795   001900  6EFA               	movwf	pclath,c
  8796   001902  5160               	movf	_I2C_Status& (0+255),w,b
  8797   001904  6EFD               	movwf	tosl,c
  8798   001906  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  8799   001908  6EFE               	movwf	tosh,c
  8800   00190A  6AFF               	clrf	tosu,c
  8801   00190C  50FA               	movf	pclath,w,c
  8802   00190E  0012               	return		;indir
  8803   001910                     i2u393_49:
  8804   001910  6E2E               	movwf	??_I2C_DO_RX^0,c
  8805   001912  6A2F               	clrf	(??_I2C_DO_RX+1)^0,c
  8806                           
  8807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8808                           ; Switch size 1, requested type "simple"
  8809                           ; Number of cases is 1, Range of values is 0 to 0
  8810                           ; switch strategies available:
  8811                           ; Name         Instructions Cycles
  8812                           ; simple_byte            4     3 (average)
  8813                           ;	Chosen strategy is simple_byte
  8814   001914  502F               	movf	(??_I2C_DO_RX+1)^0,w,c
  8815   001916  0A00               	xorlw	0	; case 0
  8816   001918  B4D8               	btfsc	status,2,c
  8817   00191A  EF91  F00C         	goto	i2l7647
  8818   00191E  EF74  F00C         	goto	i2l6033
  8819   001922                     i2l7647:
  8820                           
  8821                           ; Switch size 1, requested type "simple"
  8822                           ; Number of cases is 4, Range of values is 1 to 4
  8823                           ; switch strategies available:
  8824                           ; Name         Instructions Cycles
  8825                           ; simple_byte           13     7 (average)
  8826                           ;	Chosen strategy is simple_byte
  8827   001922  502E               	movf	??_I2C_DO_RX^0,w,c
  8828   001924  0A01               	xorlw	1	; case 1
  8829   001926  B4D8               	btfsc	status,2,c
  8830   001928  EF74  F00C         	goto	i2l6033
  8831   00192C  0A03               	xorlw	3	; case 2
  8832   00192E  B4D8               	btfsc	status,2,c
  8833   001930  EF70  F00C         	goto	i2l6029
  8834   001934  0A01               	xorlw	1	; case 3
  8835   001936  B4D8               	btfsc	status,2,c
  8836   001938  EF70  F00C         	goto	i2l6029
  8837   00193C  0A07               	xorlw	7	; case 4
  8838   00193E  B4D8               	btfsc	status,2,c
  8839   001940  EF74  F00C         	goto	i2l6033
  8840   001944  EF74  F00C         	goto	i2l6033
  8841   001948                     i2l537:
  8842   001948  0012               	return		;funcret
  8843   00194A                     __end_of_I2C_DO_RX:
  8844                           	callstack 0
  8845                           
  8846 ;; *************** function _I2C_DO_TX *****************
  8847 ;; Defined at:
  8848 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      enum E3121
  8855 ;; Registers used:
  8856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 3
  8869 ;; This function calls:
  8870 ;;		NULL
  8871 ;;		_I2C_CallbackReturnReset
  8872 ;;		_I2C_CallbackReturnStop
  8873 ;;		_I2C_DO_SEND_RESTART_READ
  8874 ;;		_I2C_DO_SEND_RESTART_WRITE
  8875 ;;		_I2C_DO_SEND_STOP
  8876 ;;		_I2C_MasterIsNack
  8877 ;;		_I2C_MasterSendTxData
  8878 ;;		_rd1RegCompleteHandler
  8879 ;;		_rd2RegCompleteHandler
  8880 ;;		_rdBlkRegCompleteHandler
  8881 ;;		_wr1RegCompleteHandler
  8882 ;;		_wr2RegCompleteHandler
  8883 ;; This function is called by:
  8884 ;;		_I2C_MasterFsm
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text58
  8889   00166E                     __ptext58:
  8890                           	callstack 0
  8891   00166E                     _I2C_DO_TX:
  8892                           	callstack 19
  8893   00166E                     
  8894                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  8895   00166E  EC3E  F011         	call	_I2C_MasterIsNack	;wreg free
  8896   001672  0900               	iorlw	0
  8897   001674  B4D8               	btfsc	status,2,c
  8898   001676  EF3F  F00B         	goto	i2u389_41
  8899   00167A  EF41  F00B         	goto	i2u389_40
  8900   00167E                     i2u389_41:
  8901   00167E  EF7C  F00B         	goto	i2l520
  8902   001682                     i2u389_40:
  8903   001682  EF4F  F00B         	goto	i2l5999
  8904   001686                     i2l5985:
  8905                           
  8906                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  8907   001686  ECAE  F011         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  8908   00168A  EF98  F00B         	goto	i2l523
  8909   00168E                     i2l5989:
  8910                           
  8911                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  8912   00168E  ECAA  F011         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  8913   001692  EF98  F00B         	goto	i2l523
  8914   001696                     i2l5993:
  8915                           
  8916                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  8917   001696  ECA2  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  8918   00169A  EF98  F00B         	goto	i2l523
  8919   00169E                     i2l5999:
  8920   00169E  C072  F02C         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  8921   0016A2  C073  F02D         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  8922   0016A6  D802               	call	i2u390_48
  8923   0016A8  EF60  F00B         	goto	i2u390_49
  8924   0016AC                     i2u390_48:
  8925   0016AC  0005               	push	
  8926   0016AE  6EFA               	movwf	pclath,c
  8927   0016B0  0100               	movlb	0	; () banked
  8928   0016B2  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  8929   0016B4  6EFD               	movwf	tosl,c
  8930   0016B6  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  8931   0016B8  6EFE               	movwf	tosh,c
  8932   0016BA  6AFF               	clrf	tosu,c
  8933   0016BC  50FA               	movf	pclath,w,c
  8934   0016BE  0012               	return		;indir
  8935   0016C0                     i2u390_49:
  8936   0016C0  6E2E               	movwf	??_I2C_DO_TX^0,c
  8937   0016C2  6A2F               	clrf	(??_I2C_DO_TX+1)^0,c
  8938                           
  8939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8940                           ; Switch size 1, requested type "simple"
  8941                           ; Number of cases is 1, Range of values is 0 to 0
  8942                           ; switch strategies available:
  8943                           ; Name         Instructions Cycles
  8944                           ; simple_byte            4     3 (average)
  8945                           ;	Chosen strategy is simple_byte
  8946   0016C4  502F               	movf	(??_I2C_DO_TX+1)^0,w,c
  8947   0016C6  0A00               	xorlw	0	; case 0
  8948   0016C8  B4D8               	btfsc	status,2,c
  8949   0016CA  EF69  F00B         	goto	i2l7649
  8950   0016CE  EF4B  F00B         	goto	i2l5993
  8951   0016D2                     i2l7649:
  8952                           
  8953                           ; Switch size 1, requested type "simple"
  8954                           ; Number of cases is 4, Range of values is 1 to 4
  8955                           ; switch strategies available:
  8956                           ; Name         Instructions Cycles
  8957                           ; simple_byte           13     7 (average)
  8958                           ;	Chosen strategy is simple_byte
  8959   0016D2  502E               	movf	??_I2C_DO_TX^0,w,c
  8960   0016D4  0A01               	xorlw	1	; case 1
  8961   0016D6  B4D8               	btfsc	status,2,c
  8962   0016D8  EF4B  F00B         	goto	i2l5993
  8963   0016DC  0A03               	xorlw	3	; case 2
  8964   0016DE  B4D8               	btfsc	status,2,c
  8965   0016E0  EF43  F00B         	goto	i2l5985
  8966   0016E4  0A01               	xorlw	1	; case 3
  8967   0016E6  B4D8               	btfsc	status,2,c
  8968   0016E8  EF47  F00B         	goto	i2l5989
  8969   0016EC  0A07               	xorlw	7	; case 4
  8970   0016EE  B4D8               	btfsc	status,2,c
  8971   0016F0  EF4B  F00B         	goto	i2l5993
  8972   0016F4  EF4B  F00B         	goto	i2l5993
  8973   0016F8                     i2l520:
  8974                           
  8975                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  8976   0016F8  0100               	movlb	0	; () banked
  8977   0016FA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8978   0016FC                     
  8979                           ; BSR set to: 0
  8980                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  8981   0016FC  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  8982   001700  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  8983   001704  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  8984   001706  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  8985   001708  50DF               	movf	indf2,w,c
  8986   00170A  ECB2  F011         	call	_I2C_MasterSendTxData
  8987   00170E                     
  8988                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  8989   00170E  0100               	movlb	0	; () banked
  8990   001710  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  8991   001712  A0D8               	btfss	status,0,c
  8992   001714  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  8993   001716  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  8994   001718  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  8995   00171A  A4D8               	btfss	status,2,c
  8996   00171C  EF92  F00B         	goto	i2u391_41
  8997   001720  EF94  F00B         	goto	i2u391_40
  8998   001724                     i2u391_41:
  8999   001724  EF97  F00B         	goto	i2l6007
  9000   001728                     i2u391_40:
  9001   001728                     
  9002                           ; BSR set to: 0
  9003   001728  0E06               	movlw	6
  9004   00172A  EF98  F00B         	goto	i2l523
  9005   00172E                     i2l6007:
  9006                           
  9007                           ; BSR set to: 0
  9008   00172E  0E03               	movlw	3
  9009   001730                     i2l523:
  9010   001730  0012               	return		;funcret
  9011   001732                     __end_of_I2C_DO_TX:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  9015 ;; Defined at:
  9016 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      enum E3121
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;Total ram usage:        0 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 1
  9037 ;; This function calls:
  9038 ;;		_I2C_MasterSendTxData
  9039 ;; This function is called by:
  9040 ;;		_I2C_MasterFsm
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text59
  9045   0022B0                     __ptext59:
  9046                           	callstack 0
  9047   0022B0                     _I2C_DO_SEND_ADR_WRITE:
  9048                           	callstack 21
  9049   0022B0                     
  9050                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  9051   0022B0  0100               	movlb	0	; () banked
  9052   0022B2  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9053   0022B4                     
  9054                           ; BSR set to: 0
  9055                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
  9056   0022B4  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  9057   0022B6  ECB2  F011         	call	_I2C_MasterSendTxData
  9058   0022BA                     
  9059                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  9060   0022BA  0E03               	movlw	3
  9061   0022BC  0012               	return		;funcret
  9062   0022BE                     __end_of_I2C_DO_SEND_ADR_WRITE:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  9066 ;; Defined at:
  9067 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      enum E3121
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 1
  9088 ;; This function calls:
  9089 ;;		_I2C_MasterSendTxData
  9090 ;; This function is called by:
  9091 ;;		_I2C_MasterFsm
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text60
  9096   002290                     __ptext60:
  9097                           	callstack 0
  9098   002290                     _I2C_DO_SEND_ADR_READ:
  9099                           	callstack 21
  9100   002290                     
  9101                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  9102   002290  0100               	movlb	0	; () banked
  9103   002292  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9104   002294                     
  9105                           ; BSR set to: 0
  9106                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress | 1));
  9107   002294  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  9108   002296  0901               	iorlw	1
  9109   002298  ECB2  F011         	call	_I2C_MasterSendTxData
  9110   00229C                     
  9111                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  9112   00229C  0E05               	movlw	5
  9113   00229E  0012               	return		;funcret
  9114   0022A0                     __end_of_I2C_DO_SEND_ADR_READ:
  9115                           	callstack 0
  9116                           
  9117 ;; *************** function _I2C_DO_IDLE *****************
  9118 ;; Defined at:
  9119 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      enum E3121
  9126 ;; Registers used:
  9127 ;;		wreg, status,2
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;Total ram usage:        0 bytes
  9138 ;; Hardware stack levels used: 1
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_I2C_MasterFsm
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text61
  9147   0022D6                     __ptext61:
  9148                           	callstack 0
  9149   0022D6                     _I2C_DO_IDLE:
  9150                           	callstack 22
  9151   0022D6                     
  9152                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  9153   0022D6  0100               	movlb	0	; () banked
  9154   0022D8  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  9155   0022DA                     
  9156                           ; BSR set to: 0
  9157                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  9158   0022DA  0E00               	movlw	0
  9159   0022DC  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9160   0022DE                     
  9161                           ; BSR set to: 0
  9162                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  9163   0022DE  0E0E               	movlw	14
  9164   0022E0                     
  9165                           ; BSR set to: 0
  9166   0022E0  0012               	return		;funcret
  9167   0022E2                     __end_of_I2C_DO_IDLE:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function _I2C_DO_TX_EMPTY *****************
  9171 ;; Defined at:
  9172 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      enum E3121
  9179 ;; Registers used:
  9180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;Total ram usage:        2 bytes
  9191 ;; Hardware stack levels used: 1
  9192 ;; Hardware stack levels required when called: 3
  9193 ;; This function calls:
  9194 ;;		NULL
  9195 ;;		_I2C_CallbackReturnReset
  9196 ;;		_I2C_CallbackReturnStop
  9197 ;;		_I2C_DO_SEND_RESTART
  9198 ;;		_I2C_DO_SEND_STOP
  9199 ;;		_I2C_MasterSetIrq
  9200 ;;		_rd1RegCompleteHandler
  9201 ;;		_rd2RegCompleteHandler
  9202 ;;		_rdBlkRegCompleteHandler
  9203 ;;		_wr1RegCompleteHandler
  9204 ;;		_wr2RegCompleteHandler
  9205 ;; This function is called by:
  9206 ;;		_I2C_MasterFsm
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text62
  9211   001B6E                     __ptext62:
  9212                           	callstack 0
  9213   001B6E                     _I2C_DO_TX_EMPTY:
  9214                           	callstack 19
  9215   001B6E                     
  9216                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  9217   001B6E  0100               	movlb	0	; () banked
  9218   001B70  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  9219                           
  9220                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9221   001B72  EFC8  F00D         	goto	i2l6063
  9222   001B76                     i2l6047:
  9223                           
  9224                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  9225   001B76  ECA6  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  9226   001B7A  EFF4  F00D         	goto	i2l554
  9227   001B7E                     i2l6051:
  9228                           
  9229                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  9230   001B7E  ECCD  F011         	call	_I2C_MasterSetIrq	;wreg free
  9231   001B82                     
  9232                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  9233   001B82  0E03               	movlw	3
  9234   001B84  EFF4  F00D         	goto	i2l554
  9235   001B88                     i2l6057:
  9236                           
  9237                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  9238   001B88  ECA2  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  9239   001B8C  EFF4  F00D         	goto	i2l554
  9240   001B90                     i2l6063:
  9241                           
  9242                           ; BSR set to: 0
  9243   001B90  C06C  F02C         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  9244   001B94  C06D  F02D         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  9245   001B98  D802               	call	i2u394_48
  9246   001B9A  EFD8  F00D         	goto	i2u394_49
  9247   001B9E                     i2u394_48:
  9248   001B9E  0005               	push	
  9249   001BA0  6EFA               	movwf	pclath,c
  9250   001BA2  5160               	movf	_I2C_Status& (0+255),w,b
  9251   001BA4  6EFD               	movwf	tosl,c
  9252   001BA6  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  9253   001BA8  6EFE               	movwf	tosh,c
  9254   001BAA  6AFF               	clrf	tosu,c
  9255   001BAC  50FA               	movf	pclath,w,c
  9256   001BAE  0012               	return		;indir
  9257   001BB0                     i2u394_49:
  9258   001BB0  6E2E               	movwf	??_I2C_DO_TX_EMPTY^0,c
  9259   001BB2  6A2F               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  9260                           
  9261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9262                           ; Switch size 1, requested type "simple"
  9263                           ; Number of cases is 1, Range of values is 0 to 0
  9264                           ; switch strategies available:
  9265                           ; Name         Instructions Cycles
  9266                           ; simple_byte            4     3 (average)
  9267                           ;	Chosen strategy is simple_byte
  9268   001BB4  502F               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  9269   001BB6  0A00               	xorlw	0	; case 0
  9270   001BB8  B4D8               	btfsc	status,2,c
  9271   001BBA  EFE1  F00D         	goto	i2l7651
  9272   001BBE  EFC4  F00D         	goto	i2l6057
  9273   001BC2                     i2l7651:
  9274                           
  9275                           ; Switch size 1, requested type "simple"
  9276                           ; Number of cases is 4, Range of values is 1 to 4
  9277                           ; switch strategies available:
  9278                           ; Name         Instructions Cycles
  9279                           ; simple_byte           13     7 (average)
  9280                           ;	Chosen strategy is simple_byte
  9281   001BC2  502E               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  9282   001BC4  0A01               	xorlw	1	; case 1
  9283   001BC6  B4D8               	btfsc	status,2,c
  9284   001BC8  EFC4  F00D         	goto	i2l6057
  9285   001BCC  0A03               	xorlw	3	; case 2
  9286   001BCE  B4D8               	btfsc	status,2,c
  9287   001BD0  EFBB  F00D         	goto	i2l6047
  9288   001BD4  0A01               	xorlw	1	; case 3
  9289   001BD6  B4D8               	btfsc	status,2,c
  9290   001BD8  EFBB  F00D         	goto	i2l6047
  9291   001BDC  0A07               	xorlw	7	; case 4
  9292   001BDE  B4D8               	btfsc	status,2,c
  9293   001BE0  EFBF  F00D         	goto	i2l6051
  9294   001BE4  EFC4  F00D         	goto	i2l6057
  9295   001BE8                     i2l554:
  9296   001BE8  0012               	return		;funcret
  9297   001BEA                     __end_of_I2C_DO_TX_EMPTY:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _I2C_MasterSetIrq *****************
  9301 ;; Defined at:
  9302 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		None
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_I2C_DO_TX_EMPTY
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text63
  9330   00239A                     __ptext63:
  9331                           	callstack 0
  9332   00239A                     _I2C_MasterSetIrq:
  9333                           	callstack 21
  9334   00239A                     
  9335                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  9336   00239A  869E               	bsf	158,3,c	;volatile
  9337   00239C  0012               	return		;funcret
  9338   00239E                     __end_of_I2C_MasterSetIrq:
  9339                           	callstack 0
  9340                           
  9341 ;; *************** function _I2C_MasterIsNack *****************
  9342 ;; Defined at:
  9343 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      _Bool 
  9350 ;; Registers used:
  9351 ;;		wreg
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;Total ram usage:        0 bytes
  9362 ;; Hardware stack levels used: 1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_I2C_MasterFsm
  9367 ;;		_I2C_DO_TX
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           	psect	text64
  9372   00227C                     __ptext64:
  9373                           	callstack 0
  9374   00227C                     _I2C_MasterIsNack:
  9375                           	callstack 22
  9376   00227C                     
  9377                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  9378   00227C  BCC5               	btfsc	197,6,c	;volatile
  9379   00227E  EF43  F011         	goto	i2u385_41
  9380   002282  EF46  F011         	goto	i2u385_40
  9381   002286                     i2u385_41:
  9382   002286  0E01               	movlw	1
  9383   002288  EF47  F011         	goto	i2u385_46
  9384   00228C                     i2u385_40:
  9385   00228C  0E00               	movlw	0
  9386   00228E                     i2u385_46:
  9387   00228E  0012               	return		;funcret
  9388   002290                     __end_of_I2C_MasterIsNack:
  9389                           	callstack 0
  9390                           
  9391 ;; *************** function _I2C_MasterSendTxData *****************
  9392 ;; Defined at:
  9393 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  data            1    wreg     unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  data            1    0[COMRAM] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;Total ram usage:        1 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_I2C_DO_SEND_ADR_READ
  9417 ;;		_I2C_DO_SEND_ADR_WRITE
  9418 ;;		_I2C_DO_TX
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text65
  9423   002364                     __ptext65:
  9424                           	callstack 0
  9425   002364                     _I2C_MasterSendTxData:
  9426                           	callstack 21
  9427                           
  9428                           ;incstack = 0
  9429                           ;I2C_MasterSendTxData@data stored from wreg
  9430   002364  6E23               	movwf	I2C_MasterSendTxData@data^0,c
  9431   002366                     
  9432                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  9433   002366  C023  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  9434   00236A  0012               	return		;funcret
  9435   00236C                     __end_of_I2C_MasterSendTxData:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function _I2C_MasterSendAck *****************
  9439 ;; Defined at:
  9440 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		None
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;;		_I2C_DO_RX
  9464 ;;		_I2C_DO_RX_ACK
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text66
  9469   002372                     __ptext66:
  9470                           	callstack 0
  9471   002372                     _I2C_MasterSendAck:
  9472                           	callstack 21
  9473   002372                     
  9474                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  9475   002372  9AC5               	bcf	197,5,c	;volatile
  9476                           
  9477                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  9478   002374  88C5               	bsf	197,4,c	;volatile
  9479   002376  0012               	return		;funcret
  9480   002378                     __end_of_I2C_MasterSendAck:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _I2C_MasterGetRxData *****************
  9484 ;; Defined at:
  9485 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_I2C_DO_RX
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text67
  9513   00239E                     __ptext67:
  9514                           	callstack 0
  9515   00239E                     _I2C_MasterGetRxData:
  9516                           	callstack 21
  9517   00239E                     
  9518                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  9519   00239E  50C9               	movf	201,w,c	;volatile
  9520   0023A0  0012               	return		;funcret
  9521   0023A2                     __end_of_I2C_MasterGetRxData:
  9522                           	callstack 0
  9523                           
  9524 ;; *************** function _I2C_MasterSendNack *****************
  9525 ;; Defined at:
  9526 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		None
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;Total ram usage:        0 bytes
  9545 ;; Hardware stack levels used: 1
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_I2C_DO_RX_NACK_STOP
  9550 ;;		_I2C_DO_RX_NACK_RESTART
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text68
  9555   002378                     __ptext68:
  9556                           	callstack 0
  9557   002378                     _I2C_MasterSendNack:
  9558                           	callstack 21
  9559   002378                     
  9560                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  9561   002378  8AC5               	bsf	197,5,c	;volatile
  9562                           
  9563                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  9564   00237A  88C5               	bsf	197,4,c	;volatile
  9565   00237C  0012               	return		;funcret
  9566   00237E                     __end_of_I2C_MasterSendNack:
  9567                           	callstack 0
  9568                           
  9569 ;; *************** function _I2C_MasterStartRx *****************
  9570 ;; Defined at:
  9571 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		None
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_I2C_DO_RCEN
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           	psect	text69
  9599   0023A2                     __ptext69:
  9600                           	callstack 0
  9601   0023A2                     _I2C_MasterStartRx:
  9602                           	callstack 21
  9603   0023A2                     
  9604                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  9605   0023A2  86C5               	bsf	197,3,c	;volatile
  9606   0023A4  0012               	return		;funcret
  9607   0023A6                     __end_of_I2C_MasterStartRx:
  9608                           	callstack 0
  9609                           
  9610 ;; *************** function _I2C_CallbackReturnReset *****************
  9611 ;; Defined at:
  9612 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;  funPtr          2    9[COMRAM] PTR void 
  9615 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9616 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      enum E363
  9621 ;; Registers used:
  9622 ;;		wreg
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9632 ;;Total ram usage:        2 bytes
  9633 ;; Hardware stack levels used: 1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_I2C_Open
  9638 ;;		_I2C_DO_TX
  9639 ;;		_I2C_DO_RX
  9640 ;;		_I2C_DO_TX_EMPTY
  9641 ;;		_I2C_DO_ADDRESS_NACK
  9642 ;;		_I2C_DO_RX_EMPTY
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text70
  9647   0023A6                     __ptext70:
  9648                           	callstack 0
  9649   0023A6                     _I2C_CallbackReturnReset:
  9650                           	callstack 21
  9651   0023A6                     
  9652                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  9653   0023A6  0E05               	movlw	5
  9654   0023A8  0012               	return		;funcret
  9655   0023AA                     __end_of_I2C_CallbackReturnReset:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _I2C_CallbackReturnStop *****************
  9659 ;; Defined at:
  9660 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  funPtr          2    9[COMRAM] PTR void 
  9663 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9664 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      enum E363
  9669 ;; Registers used:
  9670 ;;		wreg
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:        2 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_I2C_Open
  9686 ;;		_I2C_SetCallback
  9687 ;;		i2_I2C_SetCallback
  9688 ;;		_I2C_DO_TX
  9689 ;;		_I2C_DO_RX
  9690 ;;		_I2C_DO_TX_EMPTY
  9691 ;;		_I2C_DO_ADDRESS_NACK
  9692 ;;		_I2C_DO_RX_EMPTY
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text71
  9697   0023AA                     __ptext71:
  9698                           	callstack 0
  9699   0023AA                     _I2C_CallbackReturnStop:
  9700                           	callstack 21
  9701   0023AA                     
  9702                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  9703   0023AA  0E01               	movlw	1
  9704   0023AC  0012               	return		;funcret
  9705   0023AE                     __end_of_I2C_CallbackReturnStop:
  9706                           	callstack 0
  9707                           
  9708 ;; *************** function _rdBlkRegCompleteHandler *****************
  9709 ;; Defined at:
  9710 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  ptr             2    9[COMRAM] PTR void 
  9713 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9714 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  1    wreg      enum E363
  9719 ;; Registers used:
  9720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:        2 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 2
  9733 ;; This function calls:
  9734 ;;		i2_I2C_SetBuffer
  9735 ;;		i2_I2C_SetDataCompleteCallback
  9736 ;; This function is called by:
  9737 ;;		_I2C_ReadDataBlock
  9738 ;;		_I2C_DO_TX
  9739 ;;		_I2C_DO_RX
  9740 ;;		_I2C_DO_TX_EMPTY
  9741 ;;		_I2C_DO_ADDRESS_NACK
  9742 ;;		_I2C_DO_RX_EMPTY
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text72
  9747   001F48                     __ptext72:
  9748                           	callstack 0
  9749   001F48                     _rdBlkRegCompleteHandler:
  9750                           	callstack 19
  9751   001F48                     
  9752                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  9753   001F48  EE20 F002          	lfsr	2,2
  9754   001F4C  502C               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  9755   001F4E  26D9               	addwf	fsr2l,f,c
  9756   001F50  502D               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  9757   001F52  22DA               	addwfc	fsr2h,f,c
  9758   001F54  CFDE F023          	movff	postinc2,i2I2C_SetBuffer@buffer
  9759   001F58  CFDD F024          	movff	postdec2,i2I2C_SetBuffer@buffer+1
  9760   001F5C  C02C  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  9761   001F60  C02D  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  9762   001F64  CFDE F025          	movff	postinc2,i2I2C_SetBuffer@bufferSize
  9763   001F68  CFDD F026          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
  9764   001F6C  ECA7  F010         	call	i2_I2C_SetBuffer	;wreg free
  9765   001F70                     
  9766                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9767   001F70  0E00               	movlw	0
  9768   001F72  6E28               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9769   001F74  0E00               	movlw	0
  9770   001F76  6E29               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9771   001F78  0E00               	movlw	0
  9772   001F7A  6E2A               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9773   001F7C  0E00               	movlw	0
  9774   001F7E  6E2B               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9775   001F80  EC07  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9776   001F84                     
  9777                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  9778   001F84  0E02               	movlw	2
  9779   001F86  0012               	return		;funcret
  9780   001F88                     __end_of_rdBlkRegCompleteHandler:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function _wr1RegCompleteHandler *****************
  9784 ;; Defined at:
  9785 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  ptr             2    9[COMRAM] PTR void 
  9788 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9789 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      enum E363
  9794 ;; Registers used:
  9795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        2 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 2
  9808 ;; This function calls:
  9809 ;;		i2_I2C_SetBuffer
  9810 ;;		i2_I2C_SetDataCompleteCallback
  9811 ;; This function is called by:
  9812 ;;		_I2C_Write1ByteRegister
  9813 ;;		_I2C_DO_TX
  9814 ;;		_I2C_DO_RX
  9815 ;;		_I2C_DO_TX_EMPTY
  9816 ;;		_I2C_DO_ADDRESS_NACK
  9817 ;;		_I2C_DO_RX_EMPTY
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text73
  9822   002026                     __ptext73:
  9823                           	callstack 0
  9824   002026                     _wr1RegCompleteHandler:
  9825                           	callstack 19
  9826   002026                     
  9827                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  9828   002026  C02C  F023         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9829   00202A  C02D  F024         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9830   00202E  0E00               	movlw	0
  9831   002030  6E26               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  9832   002032  0E01               	movlw	1
  9833   002034  6E25               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  9834   002036  ECA7  F010         	call	i2_I2C_SetBuffer	;wreg free
  9835   00203A                     
  9836                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9837   00203A  0E00               	movlw	0
  9838   00203C  6E28               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9839   00203E  0E00               	movlw	0
  9840   002040  6E29               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9841   002042  0E00               	movlw	0
  9842   002044  6E2A               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9843   002046  0E00               	movlw	0
  9844   002048  6E2B               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9845   00204A  EC07  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9846   00204E                     
  9847                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  9848   00204E  0E04               	movlw	4
  9849   002050  0012               	return		;funcret
  9850   002052                     __end_of_wr1RegCompleteHandler:
  9851                           	callstack 0
  9852                           
  9853 ;; *************** function _rd2RegCompleteHandler *****************
  9854 ;; Defined at:
  9855 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  ptr             2    9[COMRAM] PTR void 
  9858 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9859 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      enum E363
  9864 ;; Registers used:
  9865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;Total ram usage:        2 bytes
  9876 ;; Hardware stack levels used: 1
  9877 ;; Hardware stack levels required when called: 2
  9878 ;; This function calls:
  9879 ;;		i2_I2C_SetBuffer
  9880 ;;		i2_I2C_SetDataCompleteCallback
  9881 ;; This function is called by:
  9882 ;;		_I2C_Read2ByteRegister
  9883 ;;		_I2C_DO_TX
  9884 ;;		_I2C_DO_RX
  9885 ;;		_I2C_DO_TX_EMPTY
  9886 ;;		_I2C_DO_ADDRESS_NACK
  9887 ;;		_I2C_DO_RX_EMPTY
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text74
  9892   002052                     __ptext74:
  9893                           	callstack 0
  9894   002052                     _rd2RegCompleteHandler:
  9895                           	callstack 19
  9896   002052                     
  9897                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  9898   002052  C02C  F023         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9899   002056  C02D  F024         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9900   00205A  0E00               	movlw	0
  9901   00205C  6E26               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  9902   00205E  0E02               	movlw	2
  9903   002060  6E25               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  9904   002062  ECA7  F010         	call	i2_I2C_SetBuffer	;wreg free
  9905   002066                     
  9906                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9907   002066  0E00               	movlw	0
  9908   002068  6E28               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9909   00206A  0E00               	movlw	0
  9910   00206C  6E29               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9911   00206E  0E00               	movlw	0
  9912   002070  6E2A               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9913   002072  0E00               	movlw	0
  9914   002074  6E2B               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9915   002076  EC07  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9916   00207A                     
  9917                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  9918   00207A  0E02               	movlw	2
  9919   00207C  0012               	return		;funcret
  9920   00207E                     __end_of_rd2RegCompleteHandler:
  9921                           	callstack 0
  9922                           
  9923 ;; *************** function _rd1RegCompleteHandler *****************
  9924 ;; Defined at:
  9925 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  ptr             2    9[COMRAM] PTR void 
  9928 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9929 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      enum E363
  9934 ;; Registers used:
  9935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;Total ram usage:        2 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 2
  9948 ;; This function calls:
  9949 ;;		i2_I2C_SetBuffer
  9950 ;;		i2_I2C_SetDataCompleteCallback
  9951 ;; This function is called by:
  9952 ;;		_I2C_Read1ByteRegister
  9953 ;;		_I2C_DO_TX
  9954 ;;		_I2C_DO_RX
  9955 ;;		_I2C_DO_TX_EMPTY
  9956 ;;		_I2C_DO_ADDRESS_NACK
  9957 ;;		_I2C_DO_RX_EMPTY
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text75
  9962   00207E                     __ptext75:
  9963                           	callstack 0
  9964   00207E                     _rd1RegCompleteHandler:
  9965                           	callstack 19
  9966   00207E                     
  9967                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  9968   00207E  C02C  F023         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9969   002082  C02D  F024         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9970   002086  0E00               	movlw	0
  9971   002088  6E26               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  9972   00208A  0E01               	movlw	1
  9973   00208C  6E25               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  9974   00208E  ECA7  F010         	call	i2_I2C_SetBuffer	;wreg free
  9975   002092                     
  9976                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9977   002092  0E00               	movlw	0
  9978   002094  6E28               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9979   002096  0E00               	movlw	0
  9980   002098  6E29               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9981   00209A  0E00               	movlw	0
  9982   00209C  6E2A               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9983   00209E  0E00               	movlw	0
  9984   0020A0  6E2B               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9985   0020A2  EC07  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9986   0020A6                     
  9987                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  9988   0020A6  0E02               	movlw	2
  9989   0020A8  0012               	return		;funcret
  9990   0020AA                     __end_of_rd1RegCompleteHandler:
  9991                           	callstack 0
  9992                           
  9993 ;; *************** function _wr2RegCompleteHandler *****************
  9994 ;; Defined at:
  9995 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  ptr             2    9[COMRAM] PTR void 
  9998 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9999 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      enum E363
 10004 ;; Registers used:
 10005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;Total ram usage:        2 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; Hardware stack levels required when called: 2
 10018 ;; This function calls:
 10019 ;;		i2_I2C_SetBuffer
 10020 ;;		i2_I2C_SetDataCompleteCallback
 10021 ;; This function is called by:
 10022 ;;		_I2C_Write2ByteRegister
 10023 ;;		_I2C_DO_TX
 10024 ;;		_I2C_DO_RX
 10025 ;;		_I2C_DO_TX_EMPTY
 10026 ;;		_I2C_DO_ADDRESS_NACK
 10027 ;;		_I2C_DO_RX_EMPTY
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text76
 10032   0020AA                     __ptext76:
 10033                           	callstack 0
 10034   0020AA                     _wr2RegCompleteHandler:
 10035                           	callstack 19
 10036   0020AA                     
 10037                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 10038   0020AA  C02C  F023         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10039   0020AE  C02D  F024         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10040   0020B2  0E00               	movlw	0
 10041   0020B4  6E26               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10042   0020B6  0E02               	movlw	2
 10043   0020B8  6E25               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10044   0020BA  ECA7  F010         	call	i2_I2C_SetBuffer	;wreg free
 10045   0020BE                     
 10046                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10047   0020BE  0E00               	movlw	0
 10048   0020C0  6E28               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10049   0020C2  0E00               	movlw	0
 10050   0020C4  6E29               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10051   0020C6  0E00               	movlw	0
 10052   0020C8  6E2A               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10053   0020CA  0E00               	movlw	0
 10054   0020CC  6E2B               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10055   0020CE  EC07  F011         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10056   0020D2                     
 10057                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 10058   0020D2  0E04               	movlw	4
 10059   0020D4  0012               	return		;funcret
 10060   0020D6                     __end_of_wr2RegCompleteHandler:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 10064 ;; Defined at:
 10065 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 10068 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 10069 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10070 ;;  ptr             2    7[COMRAM] PTR void 
 10071 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10072 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;		None
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  1    wreg      void 
 10077 ;; Registers used:
 10078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;Total ram usage:        4 bytes
 10089 ;; Hardware stack levels used: 1
 10090 ;; Hardware stack levels required when called: 1
 10091 ;; This function calls:
 10092 ;;		i2_I2C_SetCallback
 10093 ;; This function is called by:
 10094 ;;		_rd1RegCompleteHandler
 10095 ;;		_rd2RegCompleteHandler
 10096 ;;		_wr1RegCompleteHandler
 10097 ;;		_wr2RegCompleteHandler
 10098 ;;		_rdBlkRegCompleteHandler
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text77
 10103   00220E                     __ptext77:
 10104                           	callstack 0
 10105   00220E                     i2_I2C_SetDataCompleteCallback:
 10106                           	callstack 19
 10107   00220E                     
 10108                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 10109   00220E  C028  F023         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 10110   002212  C029  F024         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 10111   002216  C02A  F025         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 10112   00221A  C02B  F026         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 10113   00221E  0E00               	movlw	0
 10114   002220  EC32  F00E         	call	i2_I2C_SetCallback
 10115   002224  0012               	return		;funcret
 10116   002226                     __end_ofi2_I2C_SetDataCompleteCallback:
 10117                           	callstack 0
 10118                           
 10119 ;; *************** function i2_I2C_SetCallback *****************
 10120 ;; Defined at:
 10121 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  idx             1    wreg     enum E3139
 10124 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 10125 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 10126 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10127 ;;  ptr             2    2[COMRAM] PTR void 
 10128 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10129 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  idx             1    4[COMRAM] enum E3139
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;Total ram usage:        5 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		i2_I2C_SetDataCompleteCallback
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text78
 10155   001C64                     __ptext78:
 10156                           	callstack 0
 10157   001C64                     i2_I2C_SetCallback:
 10158                           	callstack 19
 10159                           
 10160                           ;incstack = 0
 10161                           ;i2I2C_SetCallback@idx stored from wreg
 10162   001C64  6E27               	movwf	i2I2C_SetCallback@idx^0,c
 10163   001C66                     
 10164                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 10165   001C66  5023               	movf	i2I2C_SetCallback@cb^0,w,c
 10166   001C68  1024               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 10167   001C6A  B4D8               	btfsc	status,2,c
 10168   001C6C  EF3A  F00E         	goto	i2u379_41
 10169   001C70  EF3C  F00E         	goto	i2u379_40
 10170   001C74                     i2u379_41:
 10171   001C74  EF56  F00E         	goto	i2l5707
 10172   001C78                     i2u379_40:
 10173   001C78                     
 10174                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 10175   001C78  5027               	movf	i2I2C_SetCallback@idx^0,w,c
 10176   001C7A  0D02               	mullw	2
 10177   001C7C  0E60               	movlw	low _I2C_Status
 10178   001C7E  24F3               	addwf	243,w,c
 10179   001C80  6ED9               	movwf	fsr2l,c
 10180   001C82  0E00               	movlw	high _I2C_Status
 10181   001C84  20F4               	addwfc	prodh,w,c
 10182   001C86  6EDA               	movwf	fsr2h,c
 10183   001C88  C023  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 10184   001C8C  C024  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 10185                           
 10186                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 10187   001C90  5027               	movf	i2I2C_SetCallback@idx^0,w,c
 10188   001C92  0D02               	mullw	2
 10189   001C94  0E6C               	movlw	low (_I2C_Status+12)
 10190   001C96  24F3               	addwf	243,w,c
 10191   001C98  6ED9               	movwf	fsr2l,c
 10192   001C9A  0E00               	movlw	high (_I2C_Status+12)
 10193   001C9C  20F4               	addwfc	prodh,w,c
 10194   001C9E  6EDA               	movwf	fsr2h,c
 10195   001CA0  C025  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 10196   001CA4  C026  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 10197                           
 10198                           ;mcc_generated_files/i2c_master.c: 310:     }
 10199   001CA8  EF6C  F00E         	goto	i2l501
 10200   001CAC                     i2l5707:
 10201                           
 10202                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 10203   001CAC  5027               	movf	i2I2C_SetCallback@idx^0,w,c
 10204   001CAE  0D02               	mullw	2
 10205   001CB0  0E60               	movlw	low _I2C_Status
 10206   001CB2  24F3               	addwf	243,w,c
 10207   001CB4  6ED9               	movwf	fsr2l,c
 10208   001CB6  0E00               	movlw	high _I2C_Status
 10209   001CB8  20F4               	addwfc	prodh,w,c
 10210   001CBA  6EDA               	movwf	fsr2h,c
 10211   001CBC  0EAA               	movlw	low _I2C_CallbackReturnStop
 10212   001CBE  6EDE               	movwf	postinc2,c
 10213   001CC0  0E23               	movlw	high _I2C_CallbackReturnStop
 10214   001CC2  6EDD               	movwf	postdec2,c
 10215                           
 10216                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 10217   001CC4  5027               	movf	i2I2C_SetCallback@idx^0,w,c
 10218   001CC6  0D02               	mullw	2
 10219   001CC8  0E6C               	movlw	low (_I2C_Status+12)
 10220   001CCA  24F3               	addwf	243,w,c
 10221   001CCC  6ED9               	movwf	fsr2l,c
 10222   001CCE  0E00               	movlw	high (_I2C_Status+12)
 10223   001CD0  20F4               	addwfc	prodh,w,c
 10224   001CD2  6EDA               	movwf	fsr2h,c
 10225   001CD4  6ADE               	clrf	postinc2,c
 10226   001CD6  6ADD               	clrf	postdec2,c
 10227   001CD8                     i2l501:
 10228   001CD8  0012               	return		;funcret
 10229   001CDA                     __end_ofi2_I2C_SetCallback:
 10230                           	callstack 0
 10231                           
 10232 ;; *************** function i2_I2C_SetBuffer *****************
 10233 ;; Defined at:
 10234 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  buffer          2    0[COMRAM] PTR void 
 10237 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 10238 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
 10239 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 10240 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 10241 ;;  bufferSize      2    2[COMRAM] unsigned int 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:        4 bytes
 10258 ;; Hardware stack levels used: 1
 10259 ;; This function calls:
 10260 ;;		Nothing
 10261 ;; This function is called by:
 10262 ;;		_rd1RegCompleteHandler
 10263 ;;		_rd2RegCompleteHandler
 10264 ;;		_wr1RegCompleteHandler
 10265 ;;		_wr2RegCompleteHandler
 10266 ;;		_rdBlkRegCompleteHandler
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text79
 10271   00214E                     __ptext79:
 10272                           	callstack 0
 10273   00214E                     i2_I2C_SetBuffer:
 10274                           	callstack 20
 10275   00214E                     
 10276                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 10277   00214E  0100               	movlb	0	; () banked
 10278   002150  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 10279   002152  EFAD  F010         	goto	i2u380_41
 10280   002156  EFAF  F010         	goto	i2u380_40
 10281   00215A                     i2u380_41:
 10282   00215A  EFB8  F010         	goto	i2l478
 10283   00215E                     i2u380_40:
 10284   00215E                     
 10285                           ; BSR set to: 0
 10286                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 10287   00215E  C023  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 10288   002162  C024  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 10289   002166                     
 10290                           ; BSR set to: 0
 10291                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 10292   002166  C025  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 10293   00216A  C026  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 10294   00216E                     
 10295                           ; BSR set to: 0
 10296                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 10297   00216E  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 10298   002170                     i2l478:
 10299                           
 10300                           ; BSR set to: 0
 10301   002170  0012               	return		;funcret
 10302   002172                     __end_ofi2_I2C_SetBuffer:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function _I2C_MasterStop *****************
 10306 ;; Defined at:
 10307 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		None
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used: 1
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_I2C_DO_SEND_STOP
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text80
 10335   0023AE                     __ptext80:
 10336                           	callstack 0
 10337   0023AE                     _I2C_MasterStop:
 10338                           	callstack 20
 10339   0023AE                     
 10340                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 10341   0023AE  84C5               	bsf	197,2,c	;volatile
 10342   0023B0  0012               	return		;funcret
 10343   0023B2                     __end_of_I2C_MasterStop:
 10344                           	callstack 0
 10345                           
 10346 ;; *************** function _I2C_MasterEnableRestart *****************
 10347 ;; Defined at:
 10348 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;		None
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		None
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used: 1
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_I2C_DO_SEND_RESTART_READ
 10372 ;;		_I2C_DO_SEND_RESTART_WRITE
 10373 ;;		_I2C_DO_SEND_RESTART
 10374 ;;		_I2C_DO_RX_EMPTY
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           	psect	text81
 10379   0023B2                     __ptext81:
 10380                           	callstack 0
 10381   0023B2                     _I2C_MasterEnableRestart:
 10382                           	callstack 20
 10383   0023B2                     
 10384                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 10385   0023B2  82C5               	bsf	197,1,c	;volatile
 10386   0023B4  0012               	return		;funcret
 10387   0023B6                     __end_of_I2C_MasterEnableRestart:
 10388                           	callstack 0
 10389                           
 10390                           	psect	text82
 10391   000000                     __ptext82:
 10392                           	callstack 0
 10393   000000                     
 10394                           	psect	rparam
 10395   000000                     
 10396                           	psect	temp
 10397   00004B                     btemp:
 10398                           	callstack 0
 10399   00004B                     	ds	1
 10400   000000                     int$flags	set	btemp
 10401   000000                     wtemp8	set	btemp+1
 10402   000000                     ttemp5	set	btemp+1
 10403   000000                     ttemp6	set	btemp+4
 10404   000000                     ttemp7	set	btemp+8
 10405                           
 10406                           	psect	idloc
 10407                           
 10408                           ;Config register IDLOC0 @ 0x200000
 10409                           ;	unspecified, using default values
 10410   200000                     	org	2097152
 10411   200000  FF                 	db	255
 10412                           
 10413                           ;Config register IDLOC1 @ 0x200001
 10414                           ;	unspecified, using default values
 10415   200001                     	org	2097153
 10416   200001  FF                 	db	255
 10417                           
 10418                           ;Config register IDLOC2 @ 0x200002
 10419                           ;	unspecified, using default values
 10420   200002                     	org	2097154
 10421   200002  FF                 	db	255
 10422                           
 10423                           ;Config register IDLOC3 @ 0x200003
 10424                           ;	unspecified, using default values
 10425   200003                     	org	2097155
 10426   200003  FF                 	db	255
 10427                           
 10428                           ;Config register IDLOC4 @ 0x200004
 10429                           ;	unspecified, using default values
 10430   200004                     	org	2097156
 10431   200004  FF                 	db	255
 10432                           
 10433                           ;Config register IDLOC5 @ 0x200005
 10434                           ;	unspecified, using default values
 10435   200005                     	org	2097157
 10436   200005  FF                 	db	255
 10437                           
 10438                           ;Config register IDLOC6 @ 0x200006
 10439                           ;	unspecified, using default values
 10440   200006                     	org	2097158
 10441   200006  FF                 	db	255
 10442                           
 10443                           ;Config register IDLOC7 @ 0x200007
 10444                           ;	unspecified, using default values
 10445   200007                     	org	2097159
 10446   200007  FF                 	db	255
 10447                           
 10448                           	psect	config
 10449                           
 10450                           ; Padding undefined space
 10451   300000                     	org	3145728
 10452   300000  FF                 	db	255
 10453                           
 10454                           ;Config register CONFIG1H @ 0x300001
 10455                           ;	Oscillator Selection bits
 10456                           ;	FOSC = HS, HS oscillator
 10457                           ;	Fail-Safe Clock Monitor Enable bit
 10458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10459                           ;	Internal/External Oscillator Switchover bit
 10460                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10461   300001                     	org	3145729
 10462   300001  02                 	db	2
 10463                           
 10464                           ;Config register CONFIG2L @ 0x300002
 10465                           ;	Power-up Timer Enable bit
 10466                           ;	PWRT = OFF, PWRT disabled
 10467                           ;	Brown-out Reset Enable bits
 10468                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10469                           ;	Brown Out Reset Voltage bits
 10470                           ;	BORV = 18, VBOR set to 1.8 V nominal
 10471   300002                     	org	3145730
 10472   300002  1F                 	db	31
 10473                           
 10474                           ;Config register CONFIG2H @ 0x300003
 10475                           ;	Watchdog Timer Enable bit
 10476                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 10477                           ;	Watchdog Timer Postscale Select bits
 10478                           ;	WDTPS = 32768, 1:32768
 10479   300003                     	org	3145731
 10480   300003  1E                 	db	30
 10481                           
 10482                           ; Padding undefined space
 10483   300004                     	org	3145732
 10484   300004  FF                 	db	255
 10485                           
 10486                           ;Config register CONFIG3H @ 0x300005
 10487                           ;	CCP2 MUX bit
 10488                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10489                           ;	PORTB A/D Enable bit
 10490                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10491                           ;	Low-Power Timer1 Oscillator Enable bit
 10492                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10493                           ;	HFINTOSC Fast Start-up
 10494                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 10495                           ;	MCLR Pin Enable bit
 10496                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10497   300005                     	org	3145733
 10498   300005  8B                 	db	139
 10499                           
 10500                           ;Config register CONFIG4L @ 0x300006
 10501                           ;	Stack Full/Underflow Reset Enable bit
 10502                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10503                           ;	Single-Supply ICSP Enable bit
 10504                           ;	LVP = ON, Single-Supply ICSP enabled
 10505                           ;	Extended Instruction Set Enable bit
 10506                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10507                           ;	Background Debugger Enable bit
 10508                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10509   300006                     	org	3145734
 10510   300006  85                 	db	133
 10511                           
 10512                           ; Padding undefined space
 10513   300007                     	org	3145735
 10514   300007  FF                 	db	255
 10515                           
 10516                           ;Config register CONFIG5L @ 0x300008
 10517                           ;	Code Protection Block 0
 10518                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10519                           ;	Code Protection Block 1
 10520                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10521                           ;	Code Protection Block 2
 10522                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10523                           ;	Code Protection Block 3
 10524                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10525   300008                     	org	3145736
 10526   300008  0F                 	db	15
 10527                           
 10528                           ;Config register CONFIG5H @ 0x300009
 10529                           ;	Boot Block Code Protection bit
 10530                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10531                           ;	Data EEPROM Code Protection bit
 10532                           ;	CPD = OFF, Data EEPROM not code-protected
 10533   300009                     	org	3145737
 10534   300009  C0                 	db	192
 10535                           
 10536                           ;Config register CONFIG6L @ 0x30000A
 10537                           ;	Write Protection Block 0
 10538                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10539                           ;	Write Protection Block 1
 10540                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10541                           ;	Write Protection Block 2
 10542                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10543                           ;	Write Protection Block 3
 10544                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 10545   30000A                     	org	3145738
 10546   30000A  0F                 	db	15
 10547                           
 10548                           ;Config register CONFIG6H @ 0x30000B
 10549                           ;	Configuration Register Write Protection bit
 10550                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10551                           ;	Boot Block Write Protection bit
 10552                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10553                           ;	Data EEPROM Write Protection bit
 10554                           ;	WRTD = OFF, Data EEPROM not write-protected
 10555   30000B                     	org	3145739
 10556   30000B  E0                 	db	224
 10557                           
 10558                           ;Config register CONFIG7L @ 0x30000C
 10559                           ;	Table Read Protection Block 0
 10560                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10561                           ;	Table Read Protection Block 1
 10562                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10563                           ;	Table Read Protection Block 2
 10564                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10565                           ;	Table Read Protection Block 3
 10566                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10567   30000C                     	org	3145740
 10568   30000C  0F                 	db	15
 10569                           
 10570                           ;Config register CONFIG7H @ 0x30000D
 10571                           ;	Boot Block Table Read Protection bit
 10572                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10573   30000D                     	org	3145741
 10574   30000D  40                 	db	64
 10575                           tosu	equ	0xFFF
 10576                           tosh	equ	0xFFE
 10577                           tosl	equ	0xFFD
 10578                           stkptr	equ	0xFFC
 10579                           pclatu	equ	0xFFB
 10580                           pclath	equ	0xFFA
 10581                           pcl	equ	0xFF9
 10582                           tblptru	equ	0xFF8
 10583                           tblptrh	equ	0xFF7
 10584                           tblptrl	equ	0xFF6
 10585                           tablat	equ	0xFF5
 10586                           prodh	equ	0xFF4
 10587                           prodl	equ	0xFF3
 10588                           indf0	equ	0xFEF
 10589                           postinc0	equ	0xFEE
 10590                           postdec0	equ	0xFED
 10591                           preinc0	equ	0xFEC
 10592                           plusw0	equ	0xFEB
 10593                           fsr0h	equ	0xFEA
 10594                           fsr0l	equ	0xFE9
 10595                           wreg	equ	0xFE8
 10596                           indf1	equ	0xFE7
 10597                           postinc1	equ	0xFE6
 10598                           postdec1	equ	0xFE5
 10599                           preinc1	equ	0xFE4
 10600                           plusw1	equ	0xFE3
 10601                           fsr1h	equ	0xFE2
 10602                           fsr1l	equ	0xFE1
 10603                           bsr	equ	0xFE0
 10604                           indf2	equ	0xFDF
 10605                           postinc2	equ	0xFDE
 10606                           postdec2	equ	0xFDD
 10607                           preinc2	equ	0xFDC
 10608                           plusw2	equ	0xFDB
 10609                           fsr2h	equ	0xFDA
 10610                           fsr2l	equ	0xFD9
 10611                           status	equ	0xFD8

Data Sizes:
    Strings     420
    Constant    48
    Data        19
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      74
    BANK0           160     18      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2866$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_RX$2872$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_TX_EMPTY$2878$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_RX_EMPTY$2884$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_TX_EMPTY$2883	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_TX_EMPTY$2878	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2877	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_RX$2872	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2871	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_DO_TX$2866	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2865	const PTR FTN()enum E3121 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    S710$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    S710$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    S710$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    S710$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3121[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 

    S410$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    LCD_vSend_string@data	PTR unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[12]), STR_47(CODE[15]), STR_46(CODE[18]), STR_45(CODE[12]), 
		 -> STR_44(CODE[13]), STR_43(CODE[12]), STR_42(CODE[13]), STR_41(CODE[12]), 
		 -> STR_40(CODE[13]), STR_39(CODE[12]), STR_38(CODE[11]), STR_37(CODE[14]), 
		 -> STR_36(CODE[18]), STR_35(CODE[12]), STR_34(CODE[13]), STR_33(CODE[12]), 
		 -> STR_32(CODE[11]), STR_31(CODE[18]), STR_30(CODE[12]), STR_29(CODE[12]), 
		 -> STR_28(CODE[12]), STR_27(CODE[14]), STR_26(CODE[11]), STR_25(CODE[7]), 
		 -> STR_24(CODE[9]), STR_23(CODE[12]), STR_22(CODE[12]), STR_21(CODE[18]), 
		 -> STR_20(CODE[18]), STR_19(CODE[12]), STR_18(CODE[11]), STR_17(CODE[14]), 
		 -> STR_16(CODE[8]), STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[14]), 
		 -> STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[12]), STR_9(CODE[17]), 
		 -> STR_8(CODE[12]), STR_7(CODE[17]), STR_6(CODE[11]), STR_5(CODE[12]), 
		 -> STR_4(CODE[15]), STR_3(CODE[11]), STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_TempSensor_TC74_Read_Temp
    _keypad_get_value->_column_pin_read__logic
    _keypad_get_value->_row_pin_write__logic
    _TempSensor_TC74_Read_Temp->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _LCD_vSend_string->_LCD_vSend_char
    _LCD_vSend_char->_DIO_write_port
    _LCD_vInit->_LCD_vSend_cmd
    _LCD_movecursor->_LCD_vSend_cmd
    _LCD_clearscreen->_LCD_vSend_cmd
    _LCD_vSend_cmd->_DIO_write_port
    _DATAEE_WriteByte->___awdiv

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   24498
                                             14 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART_Write
                    _LCD_clearscreen
                     _LCD_movecursor
                          _LCD_vInit
                     _LCD_vSend_char
                   _LCD_vSend_string
                  _SYSTEM_Initialize
          _TempSensor_TC74_Read_Temp
                            ___awdiv
                            ___awmod
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                     7     7      0     792
                                              4 BANK0      7     7      0
             _column_pin_read__logic
               _row_pin_write__logic
 ---------------------------------------------------------------------------------
 (2) _row_pin_write__logic                                 4     3      1     273
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _column_pin_read__logic                               4     4      0      77
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _TempSensor_TC74_Read_Temp                            2     2      0    7993
                                             12 BANK0      2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    7925
                                              9 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2629
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1872
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2259
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     189
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      68
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      68
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_vSend_string                                     2     0      2    4661
                                              5 BANK0      2     0      2
                     _LCD_vSend_char
 ---------------------------------------------------------------------------------
 (2) _LCD_vSend_char                                       1     1      0     366
                                              4 BANK0      1     1      0
                     _DIO_write_port
                  _send_falling_edge
 ---------------------------------------------------------------------------------
 (1) _LCD_vInit                                            1     1      0     366
                                              5 BANK0      1     1      0
                      _LCD_vSend_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_movecursor                                       3     2      1    1914
                                              5 BANK0      3     2      1
                      _LCD_vSend_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_clearscreen                                      0     0      0     366
                      _LCD_vSend_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_vSend_cmd                                        1     1      0     366
                                              4 BANK0      1     1      0
                     _DIO_write_port
                  _send_falling_edge
 ---------------------------------------------------------------------------------
 (3) _send_falling_edge                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DIO_write_port                                       4     3      1     335
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4987
                                              8 BANK0      4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1322
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      10    10      0   24357
                                             15 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsr                                        0     0      0   24357
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        2     2      0   24357
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (9) i2_I2C_MasterClearIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0    6066
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0    6097
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0    6066
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0    6066
                                             11 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2    1173
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetDataCompleteCallback                       4     0      4     699
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (12) i2_I2C_SetCallback                                   5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_I2C_SetBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     325
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     ___awdiv (ARG)
     ___awmod (ARG)
   _EUSART_Write
   _LCD_clearscreen
     _LCD_vSend_cmd
       _DIO_write_port
       _send_falling_edge
   _LCD_movecursor
     _LCD_vSend_cmd
   _LCD_vInit
     _LCD_vSend_cmd
   _LCD_vSend_char
     _DIO_write_port
     _send_falling_edge
   _LCD_vSend_string
     _LCD_vSend_char
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TempSensor_TC74_Read_Temp
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   ___awdiv
   ___awmod
   _keypad_get_value
     _column_pin_read__logic
     _row_pin_write__logic

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      52       5       51.2%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      4A       1       78.7%
BITBIGSFRhhhlh      1D      0       0      38        0.0%
BITBIGSFRllll       1C      0       0      49        0.0%
BITBIGSFRhhhllh      C      0       0      41        0.0%
BITBIGSFRhhhhh       7      0       0      36        0.0%
BITBIGSFRhhhllh      7      0       0      42        0.0%
BITBIGSFRhhhllh      6      0       0      40        0.0%
BITBIGSFRlh          5      0       0      47        0.0%
BITBIGSFRhhhlll      4      0       0      45        0.0%
BITBIGSFRhhll        4      0       0      46        0.0%
BITBIGSFRhhhllh      3      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      39        0.0%
BITBIGSFRhhhhl       2      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      44        0.0%
BITBIGSFRlllh        1      0       0      48        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      50        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Feb 18 17:03:15 2024

                       ??_I2C_DO_SEND_ADR_READ 0023                    ??_TempSensor_TC74_Read_Temp 00A8  
               __end_of_column_pin_read__logic 1B6E                        ??_I2C_DO_SEND_ADR_WRITE 0024  
                                  _SSPSTATbits 0FC7                                             l32 174C  
                                           l42 175E                                             l52 17A4  
                                           l36 1752                                             l61 17F0  
                                           l71 1B6C                                             l55 17AA  
                                           l39 1758                                             l48 179E  
                                           l65 1B00                                             l81 15A6  
                                           l58 17B0                                             l67 1B0C  
                                           l68 1B18                                             l69 1B24  
                                           l94 20D6                                             l96 20FE  
                                           l99 2100                                   ___awdiv@sign 00A1  
                        ??_I2C_DO_SEND_RESTART 0023                                            l102 2116  
                                          l103 2128                                            l113 2250  
                                          l122 232A                                            l131 1A6E  
                                          l108 2266                                            l311 1D52  
                                          l119 1FC2                                            l313 1D5A  
                                          l314 1D62                                            l154 21C4  
                                          l315 1D6A                                            l307 1FF6  
                                          l317 1DAE                                            l501 1C62  
                                          l342 22F4                                            l451 227A  
                                          l339 223A                                            l700 2322  
                                          l620 2192                                            l197 1AF0  
                                          l623 2390                                            l471 231A  
                                          l455 19EA                                            l641 2388  
                                          l465 1F02                                            l481 21DC  
                                          l459 2024                                            l662 2384  
                                          l478 214C                                            l671 2394  
                                          l487 21F4                                            l752 1F46  
                                          l496 22EA                                            l668 238C  
                                          l853 1EA2                                            l855 1EB0  
                                          l791 2308                                            l856 1EBE  
                                          l776 21FA                                            l794 22FE  
                                          l859 21AC                                            l779 220C  
                                          l955 033A                                            l947 01E6  
                                          l956 05F2                                            l797 2312  
                                          l973 061A                                            l959 03CA  
                       fp__I2C_DO_RX_NACK_STOP 0000                 ?_EUSART_SetFramingErrorHandler 009C  
                             _LCD_vSend_string 1F88                                   ___awmod@sign 00A1  
                                          prod 0FF3                                            tosl 0FFD  
                                          wreg 0FE8                                     _ON_counter 001E  
                 ??_I2C_SetAddressNackCallback 00A5                       ??_I2C_CallbackReturnStop 002E  
                                 _I2C_DO_RESET 22BE                        ??_rd2RegCompleteHandler 002E  
                                         l1400 18A2                                           l1387 166C  
                                         l6101 1A74                                           l6111 1AD4  
                                         l6103 1A7A                                           l6113 1AD8  
                                         l6105 1A92                                           l7001 0B4E  
                                         l6115 1AEC                                           l6107 1AA8  
                                         l7011 0B8C                                           l7003 0B54  
                                         l6301 222E                                           l6109 1ABE  
                                         l6125 1764                                           l6221 14EE  
                                         l6213 14D4                                           l6205 14C0  
                                         l7101 0D86                                           l7013 0B9C  
                                         l7005 0B56                                           l6311 1E82  
                                         l6303 2232                                           l6143 1AF6  
                                         l6119 1736                                           l6223 14F2  
                                         l6207 14C4                                           l7111 0DB2  
                                         l7031 0BE0                                           l7015 0BAC  
                                         l7007 0B68                                           l6321 1E94  
                                         l6313 1E88                                           l6161 2262  
                                         l6305 2236                                           l6401 1812  
                                         l6129 17B6                                           l6241 1580  
                                         l6225 1502                                           l7201 0FCE  
                                         l7121 0DF8                                           l7113 0DCE  
                                         l7033 0BF2                                           l7025 0BD2  
                                         l7017 0BBC                                           l7009 0B86  
                                         l7041 0C34                                           l6331 2194  
                                         l6323 1E96                                           l6315 1E8C  
                                         l6163 2240                                           l6171 1FDC  
                                         l6411 184A                                           l6403 1820  
                                         l6147 1B30                                           l6243 1582  
                                         l6235 1532                                           l6227 1518  
                                         l6219 14D8                                           l7211 0FEC  
                                         l7123 0E0A                                           l7131 0E3A  
                                         l7115 0DDC                                           l7107 0D9C  
                                         l7051 0C78                                           l7043 0C46  
                                         l7027 0BD8                                           l7019 0BC0  
                                         l7035 0C1E                                           l6341 21A6  
                                         l6333 219C                                           l6325 1E98  
                                         l6317 1E90                                           l6309 1E78  
                                         l6157 2256                                           l6253 20D8  
                                         l6165 224A                                           l6261 1F9E  
                                         l6181 2268                                           l6173 1FEA  
                                         l6413 1858                                           l6421 1882  
                                         l6405 1828                                           l6149 1B6A  
                                         l6245 1592                                           l6237 1548  
                                         l6229 152C                                           l7221 1032  
                                         l7213 0FFE                                           l7205 0FD6  
                                         l7141 0E72                                           l7125 0E1A  
                                         l7117 0DE2                                           l7109 0DAE  
                                         l7061 0CBE                                           l7053 0C7E  
                                         l7045 0C4A                                           l7037 0C22  
                                         l7029 0BDE                                           l6343 21A8  
                                         l6335 21A0                                           l6327 1E9C  
                                         l6319 1E92                                           l6159 2260  
                                         l6271 1A12                                           l6255 20EA  
                                         l6167 224C                                           l6263 1FA4  
                                         l6095 2300                                           l6191 1F34  
                                         l6183 2278                                           l6175 1FF4  
                                         l6351 15AE                                           l6423 1892  
                                         l6415 186E                                           l6407 183A  
                                         l6247 1594                                           l6239 1558  
                                         l7311 1220                                           l7303 11E0  
                                         l7231 1070                                           l7223 1038  
                                         l7215 1002                                           l7207 0FDA  
                                         l7143 0E78                                           l7127 0E20  
                                         l7119 0DE8                                           l7071 0CFA  
                                         l7063 0CCC                                           l7055 0C8E  
                                         l7047 0C64                                           l6345 21AA  
                                         l6337 21A2                                           l6329 1EA0  
                                         l6265 2324                                           l6281 1A50  
                                         l6273 1A22                                           l6257 1F88  
                                         l6097 22F6                                           l6193 1F42  
                                         l6185 1F04                                           l6177 22EC  
                                         l6169 1FC4                                           l5801 1EFE  
                                         l6361 15DE                                           l6353 15BC  
                                         l6425 189A                                           l6417 1876  
                                         l6409 1842                                           l6249 15A4  
                                         l7401 13F8                                           l7321 125E  
                                         l7313 1226                                           l7305 11F2  
                                         l7241 10A0                                           l7233 1074  
                                         l7225 1048                                           l7217 101E  
                                         l7161 0ED4                                           l7137 0E50  
                                         l7129 0E24                                           l7073 0D0A  
                                         l7065 0CD2                                           l7057 0CA0  
                                         l7049 0C72                                           l7153 0E96  
                                         l6339 21A4                                           l6283 1A62  
                                         l6275 1A32                                           l6267 19F0  
                                         l6259 1F8C                                           l6099 230A  
                                         l6187 1F18                                           l6179 231C  
                                         l6291 21C2                                           l6371 160C  
                                         l6363 15E2                                           l6355 15C4  
                                         l6419 187C                                           l7411 143E  
                                         l7403 13FC                                           l7323 1264  
                                         l7315 122C                                           l7307 11F6  
                                         l7243 10B2                                           l7251 10D0  
                                         l7227 105A                                           l7235 108A  
                                         l7219 102C                                           l7171 0F0A  
                                         l7163 0EE0                                           l7155 0EA8  
                                         l7139 0E62                                           l7147 0E80  
                                         l7091 0D68                                           l7075 0D10  
                                         l7067 0CD8                                           l7059 0CA4  
                                         l6611 00E6                                           l6285 1A68  
                                         l6277 1A36                                           l6269 1A02  
                                         l6189 1F26                                           l5709 2386  
                                         l5901 197A                                           l5805 1BEE  
                                         l6381 1640                                           l6373 161A  
                                         l6365 15EA                                           l6357 15C8  
                                         l6349 15A8                                           l7421 1462  
                                         l7413 1444                                           l7405 140C  
                                         l7333 1294                                           l7325 1268  
                                         l7317 123C                                           l7309 1212  
                                         l7261 10FC                                           l7253 10D4  
                                         l7245 10C2                                           l7229 106A  
                                         l7181 0F4E                                           l7173 0F1C  
                                         l7165 0EEE                                           l7157 0EAC  
                                         l7149 0E84                                           l7085 0D40  
                                         l7077 0D14                                           l7069 0CE8  
                                         l6621 0170                                           l6613 00E8  
                                         l6295 21FA                                           l6279 1A46  
                                         l5911 19A2                                           l5903 1982  
                                         l5807 1C02                                           l6287 21B2  
                                         l6383 1646                                           l6375 1620  
                                         l6367 15FC                                           l6359 15D6  
                                         l7431 1490                                           l7415 1448  
                                         l7423 1466                                           l7407 141E  
                                         l7335 12A6                                           l7343 12C4  
                                         l7319 124E                                           l7327 127E  
                                         l7271 1142                                           l7263 1118  
                                         l7247 10C8                                           l7191 0F8C  
                                         l7183 0F54                                           l7175 0F20  
                                         l7167 0EF4                                           l7159 0EC6  
                                         l7087 0D52                                           l7095 0D70  
                                         l7079 0D2A                                           l6711 043A  
                                         l6703 03FC                                           l6631 01BA  
                                         l6623 0174                                           l6615 00EA  
                                         l6297 2208                                           l5921 19CA  
                                         l5913 19AA                                           l5905 198A  
                                         l5809 1C36                                           l6289 21B2  
                                         l6377 1636                                           l6369 1604  
                                         l6385 164C                                           l6393 17F2  
                                         l7441 14A6                                           l7433 1494  
                                         l7425 1476                                           l7417 1458  
                                         l7409 142E                                           l7345 12C8  
                                         l7337 12B6                                           l7273 1154  
                                         l7281 1184                                           l7265 1126  
                                         l7257 10E6                                           l7193 0F90  
                                         l7185 0F64                                           l7177 0F3A  
                                         l7169 0EFA                                           l7361 1320  
                                         l7097 0D74                                           l7089 0D62  
                                         l6801 068C                                           l6713 0440  
                                         l6705 040C                                           l6641 0202  
                                         l6633 01C8                                           l6625 0182  
                                         l6617 0148                                           l6609 00BA  
                                         l6299 2226                                           l5771 2172  
                                         l5923 19D6                                           l5915 19B2  
                                         l5907 1992                                           l5931 19E8  
                                         l6387 165C                                           l6379 163E  
                                         l6395 17F8                                           l7435 1498  
                                         l7427 1486                                           l7419 145E  
                                         l7355 12F0                                           l7339 12BC  
                                         l7291 11BC                                           l7275 1164  
                                         l7267 112C                                           l7259 10F8  
                                         l7187 0F76                                           l7195 0FA6  
                                         l7179 0F48                                           l6811 06BE  
                                         l6803 0690                                           l6731 04F8  
                                         l6723 0480                                           l6715 0458  
                                         l6707 0412                                           l6651 0246  
                                         l6643 0212                                           l6635 01D4  
                                         l6627 018E                                           l6619 0158  
                                         l5781 238A                                           l5773 2180  
                                         l5925 19DA                                           l5917 19BA  
                                         l5909 199A                                           l5941 2142  
                                         l6389 1664                                           l6397 1806  
                                         l7437 149C                                           l7429 148C  
                                         l7381 138E                                           l7357 12F4  
                                         l7349 12DA                                           l7293 11C2  
                                         l7277 116A                                           l7269 1132  
                                         l7197 0FB8                                           l7189 0F86  
                                         l6901 08D8                                           l6821 0704  
                                         l6813 06C4                                           l6805 069E  
                                         l6733 04FC                                           l6725 049E  
                                         l6741 0532                                           l6709 042C  
                                         l6717 045A                                           l7373 134C  
                                         l6661 02CA                                           l6653 025E  
                                         l6645 0218                                           l6637 01EC  
                                         l6629 01B6                                           l5871 1D4E  
                                         l5783 238E                                           l5951 1FF8  
                                         l5791 1EDA                                           l5775 2190  
                                         l5767 22E2                                           l5927 19DE  
                                         l5919 19C2                                           l5943 214A  
                                         l5935 21C6                                           l6399 180E  
                                         l7439 14A0                                           l7391 13D4  
                                         l7383 1392                                           l7375 1350  
                                         l7367 1336                                           l7359 1302  
                                         l7287 119A                                           l7279 116E  
                                         l7199 0FC8                                           l6911 0926  
                                         l6903 08E8                                           l6831 0738  
                                         l6823 0712                                           l6815 06D4  
                                         l6807 06AA                                           l6751 0568  
                                         l6743 0536                                           l6735 050A  
                                         l6727 04BC                                           l6719 046A  
                                         l6671 0318                                           l6663 02E6  
                                         l6647 0232                                           l6639 01F2  
                                         l6655 0260                                           l5769 2392  
                                         l5961 2020                                           l5953 1FFE  
                                         l5793 1EDE                                           l5785 1EC4  
                                         l5929 19E2                                           l5945 21DE  
                                         l5937 212A                                           l7641 1B44  
                                         l7393 13DA                                           l7385 13A2  
                                         l7377 1358                                           l7369 133A  
                                         l7289 11AC                                           l7297 11CA  
                                         l6921 0964                                           l6913 092C  
                                         l6905 08FA                                           l6841 0786  
                                         l6833 0748                                           l6825 071E  
                                         l6817 06E6                                           l6809 06B8  
                                         l6761 05A8                                           l6753 0578  
                                         l6745 0544                                           l6737 0526  
                                         l6729 04DA                                           l6681 035E  
                                         l6673 032A                                           l6665 02EA  
                                         l6657 0270                                           l6649 0240  
                                         l7643 1D88                                           l5875 1D72  
                                         l5867 2102                                           l5955 200C  
                                         l5795 1EEE                                           l5787 1ECA  
                                         l5947 2314                                           l5779 2382  
                                         l5891 1968                                           l5883 194E  
                                         l5939 213A                                           l7395 13DE  
                                         l7387 13B4                                           l7379 1380  
                                         l7299 11CE                                           l6931 09A4  
                                         l6923 0968                                           l6915 0932  
                                         l6907 08FE                                           l6851 07C4  
                                         l6843 078C                                           l6835 075A  
                                         l6827 072C                                           l6819 06EA  
                                         l6771 05E6                                           l6763 05B4  
                                         l6755 057E                                           l6747 0548  
                                         l6739 052A                                           l6691 03AC  
                                         l6683 036C                                           l6675 033C  
                                         l6667 02EC                                           l6659 02BC  
                                         l5869 2114                                           l5957 2010  
                                         l5797 1EF6                                           l5789 1ED8  
                                         l5893 196A                                           l5885 1954  
                                         l7637 1778                                           l7397 13EE  
                                         l7389 13C4                                           l6941 09D4  
                                         l6933 09BA                                           l6925 097E  
                                         l6917 0942                                           l6909 0918  
                                         l6861 0806                                           l6853 07C8  
                                         l6845 0792                                           l6837 075E  
                                         l6829 0732                                           l6781 061A  
                                         l6765 05C0                                           l6757 0588  
                                         l6749 0564                                           l6693 03B8  
                                         l6685 037C                                           l6677 0344  
                                         l6669 02FE                                           l5959 201C  
                                         l5799 1EFA                                           l5895 196C  
                                         l5887 1962                                           l7639 17CA  
                                         l7399 13F4                                           l6951 09FC  
                                         l6927 0990                                           l6919 0954  
                                         l6863 080C                                           l6855 07CE  
                                         l6847 07A2                                           l6839 0778  
                                         l6791 0664                                           l6783 0622  
                                         l6767 05C8                                           l6695 03D0  
                                         l6687 0396                                           l6679 0352  
                                         l5897 1970                                           l5889 1966  
                                         l6961 0A3C                                           l6953 0A0E  
                                         l6929 09A0                                           l6945 09E6  
                                         l6873 082A                                           l6849 07B4  
                                         l6857 07E4                                           l6793 066A  
                                         l6785 0632                                           l6769 05E2  
                                         l6777 0602                                           l6697 03D6  
                                         l6689 039E                                           l5899 1978  
                                         l6971 0AB8                                           l6963 0A76  
                                         l6955 0A12                                           l6939 09D0  
                                         l6891 08A4                                           l6875 082E  
                                         l6859 07F6                                           l6867 0814  
                                         l6787 0642                                           l6795 0672  
                                         l6779 0614                                           l6699 03E6  
                                         l6981 0AF6                                           l6973 0AC6  
                                         l6965 0A84                                           l6957 0A22  
                                         l6893 08B2                                           l6885 0872  
                                         l6877 083C                                           l6797 0682  
                                         l6789 0654                                           l6991 0B32  
                                         l6983 0AFC                                           l6975 0ACC  
                                         l6959 0A30                                           l6967 0AA2  
                                         l6895 08BE                                           l6887 0884  
                                         l6879 085C                                           l6799 0688  
                                         l6993 0B36                                           l6985 0B02  
                                         l6977 0AD2                                           l6969 0AB4  
                                         l6897 08CC                                           l6889 0888  
                                         l6987 0B12                                           l6979 0ADE  
                                         l6899 08D2                                           l6989 0B22  
                                         l6999 0B48                                           STR_1 FFF0  
                                         STR_2 FFD5                                           STR_3 FFBF  
                                         STR_4 FF25                                           STR_5 FF79  
                                         STR_6 FFB4                                           STR_7 FED7  
                                         STR_8 FF91                                           STR_9 FEC6  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           u4100 1A32  
                                         u4020 1502                                           u4101 1A2E  
                                         u4021 14FE                                           u4110 1A46  
                                         u4030 1558                                           u4111 1A42  
                                         u4031 1554                                           u4120 1A62  
                                         u4200 1636                                           u4040 1592  
                                         u5000 0C46                                           u4121 1A5E  
                                         u4201 1632                                           u4041 158E  
                                         u5001 0C42                                           u4130 2208  
                                         u4210 165C                                           u4050 15A4  
                                         u5010 0C8E                                           u4131 2204  
                                         u4211 1658                                           u4051 15A0  
                                         u5011 0C8A                                           u4140 1EB0  
                                         u4060 1FC2                                           u4220 1806  
                                         u5100 0DAE                                           u5020 0CA0  
                                         u4141 1EAC                                           u4061 1FBE  
                                         u4221 1802                                           u5101 0DAA  
                                         u5021 0C9C                                           u4070 1A02  
                                         u4230 1820                                           u5110 0DF8  
                                         u5030 0CE8                                           u4071 19FE  
                                         u4231 181C                                           u5111 0DF4  
                                         u5031 0CE4                                           u4080 1A12  
                                         u4160 15BC                                           u4240 183A  
                                         u5200 0F64                                           u5120 0E0A  
                                         u5040 0CFA                                           u4081 1A0E  
                                         u4161 15B8                                           u4241 1836  
                                         u5201 0F60                                           u5121 0E06  
                                         u5041 0CF6                                           u4090 1A22  
                                         u4170 15D6                                           u4250 1858  
                                         u5210 0F76                                           u5130 0E1A  
                                         u5050 0D0A                                           u4155 1EBC  
                                         u4091 1A1E                                           u4171 15D2  
                                         u4251 1854                                           u5211 0F72  
                                         u5131 0E16                                           u5051 0D06  
                                         u4156 1EBE                                           u4180 15FC  
                                         u4260 186E                                           u5300 10B2  
                                         u5220 0F86                                           u5140 0E4C  
                                         u5060 0D3C                                           u4500 0202  
                                         u4181 15F8                                           u4261 186A  
                                         u5301 10AE                                           u5221 0F82  
                                         u5141 0E48                                           u5061 0D38  
                                         u4501 01FE                                           u4190 161A  
                                         u4270 1892                                           u5310 10C2  
                                         u5230 0FB8                                           u5150 0E62  
                                         u5070 0D52                                           u4510 0270  
                                         u4191 1616                                           u4271 188E  
                                         u5311 10BE                                           u5231 0FB4  
                                         u5151 0E5E                                           u5071 0D4E  
                                         u4511 026C                                           u5400 123C  
                                         u5320 10F8                                           u5240 0FC8  
                                         u5160 0E72                                           u5080 0D62  
                                         u4600 04DA                                           u4520 032A  
                                         u5401 1238                                           u5321 10F4  
                                         u5241 0FC4                                           u5161 0E6E  
                                         u5081 0D5E                                           u4601 04D6  
                                         u4521 0326                                           u3810 2180  
                                         u5410 124E                                           u5330 1142  
                                         u5250 0FFE                                           u5170 0EA8  
                                         u5090 0D98                                           u4610 04F8  
                                         u4530 033A                                           u3811 217C  
                                         u5411 124A                                           u5331 113E  
                                         u5251 0FFA                                           u5171 0EA4  
                                         u5091 0D94                                           u4611 04F4  
                                         u4531 0336                                           u3820 1ED8  
                                         u5500 13C4                                           u5420 125E  
                                         u5340 1154                                           u5260 1048  
                                         u5180 0F0A                                           u4700 06D4  
                                         u4620 0578                                           u4540 03E6  
                                         u3821 1ED4                                           u5501 13C0  
                                         u5421 125A                                           u5341 1150  
                                         u5261 1044                                           u5181 0F06  
                                         u4701 06D0                                           u4621 0574  
                                         u4541 03E2                                           u3830 1EEE  
                                         u5510 13D4                                           u5430 1290  
                                         u5350 1164                                           u5270 105A  
                                         u5190 0F1C                                           u4710 06E6  
                                         u4630 05A4                                           u4550 03F8  
                                         u3831 1EEA                                           u5511 13D0  
                                         u5431 128C                                           u5351 1160  
                                         u5271 1056                                           u5191 0F18  
                                         u4711 06E2                                           u4631 05A0  
                                         u4551 03F4                                           u3840 1C02  
                                         u5600 14B8                                           u5520 13EE  
                                         u5440 12A6                                           u5360 1196  
                                         u5280 106A                                           u4800 086E  
                                         u4720 0748                                           u4640 0602  
                                         u4560 046A                                           u3841 1BFE  
                                         u5601 14B4                                           u5521 13EA  
                                         u5441 12A2                                           u5361 1192  
                                         u5281 1066                                           u4801 086A  
                                         u4721 0744                                           u4641 05FE  
                                         u4561 0466                                           u5530 140C  
                                         u5450 12B6                                           u5370 11AC  
                                         u5290 109C                                           u4810 0884  
                                         u4730 075A                                           u4650 0614  
                                         u4570 047C                                           u4490 0158  
                                         u5531 1408                                           u5451 12B2  
                                         u5371 11A8                                           u5291 1098  
                                         u4811 0880                                           u4731 0756  
                                         u4651 0610                                           u4571 0478  
                                         u4491 0154                                           u3860 1962  
                                         u5540 141E                                           u5460 12EC  
                                         u5380 11BC                                           u4900 09F8  
                                         u4820 08E8                                           u4740 07A2  
                                         u4660 0642                                           u4580 049E  
                                         u3861 195E                                           u5541 141A  
                                         u5461 12E8                                           u5381 11B8  
                                         u4901 09F4                                           u4821 08E4  
                                         u4741 079E                                           u4661 063E  
                                         u4581 049A                                           u3870 213A  
                                         u5550 142E                                           u5470 1332  
                                         u5390 11F2                                           u4910 0A0E  
                                         u4830 08FA                                           u4750 07B4  
                                         u4670 0654                                           u4590 04BC  
                                         u3871 2136                                           u5551 142A  
                                         u5471 132E                                           u5391 11EE  
                                         u4911 0A0A                                           u4831 08F6  
                                         u4751 07B0                                           u4671 0650  
                                         u4591 04B8                                           u3880 200C  
                                         u3960 1A92                                           u5560 143E  
                                         u5480 13A2                                           u4920 0A22  
                                         u4840 0942                                           u4760 07C4  
                                         u4680 0664                                           u3881 2008  
                                         u3961 1A8E                                           u5561 143A  
                                         u5481 139E                                           u4921 0A1E  
                                         u4841 093E                                           u4761 07C0  
                                         u4681 0660                                           u5617 0164  
                                         u3970 1AEC                                           u5570 1458  
                                         u5490 13B4                                           u4930 0AB4  
                                         u4850 0954                                           u4770 07F6  
                                         u4690 0682                                           u3971 1AE8  
                                         u5571 1454                                           u5491 13B0  
                                         u4931 0AB0                                           u4851 0950  
                                         u4771 07F2                                           u4691 067E  
                                         u5707 0516                                           u5627 01A8  
                                         u3980 1748                                           u5580 1476  
                                         u4940 0B12                                           u4860 0964  
                                         u4780 0806                                           u3981 1744  
                                         u5581 1472                                           u4941 0B0E  
                                         u4861 0960                                           u4781 0802  
                                         u5717 0554                                           u5637 0224  
                                         u5590 1486                                           u4950 0B22  
                                         u4870 0990                                           u4790 0826  
                                         u5591 1482                                           u5807 0B74  
                                         u4951 0B1E                                           u4871 098C  
                                         u4791 0822                                           u5727 05D4  
                                         u5647 0252                                           u4960 0B32  
                                         u4880 09A0                                           u5817 0C56  
                                         u4961 0B2E                                           u4881 099C  
                                         u5737 06F6                                           u5657 02D6  
                                         u4970 0B9C                                           u4890 09CC  
                                         u5907 20F2                                           u5827 0CB0  
                                         u4971 0B98                                           u4891 09C8  
                                         u5747 076A                                           u5667 030A  
                                         u4980 0BAC                                           u5917 210A  
                                         u5837 0DBE                                           u4981 0BA8  
                                         u5757 0848                                           u5677 0388  
                                         u4990 0BBC                                           u5927 211E  
                                         u5847 0EB8                                           u4991 0BB8  
                                         u5767 0894                                           u5687 041E  
                                         u5857 0F2C                                           u5777 090A  
                                         u5697 044C                                           u5867 100E  
                                         u5787 0A90                                           u5877 1108  
                                         u5797 0AEA                                           u5887 1202  
                                         u5897 1520                                           _WPUB 0F7C  
                      ??_wr2RegCompleteHandler 002E                                           _main 00BA  
                     ?_I2C_CallbackReturnReset 002C                                           fsr2h 0FDA  
                                         indf2 0FDF                                           fsr1l 0FE1  
                                         fsr2l 0FD9                               __end_of_I2C_Open 19EC  
                                         _rows 0044                                           btemp 004B  
                        ?i2_I2C_MasterClearIrq 0023                                           prodh 0FF4  
                                         prodl 0FF3                                           start 00B6  
                      _I2C_SetInterruptHandler 22E2                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 0000                               ?_I2C_MasterClose 0023  
 _RealTimeClockDS1307@RealTimeClockDS1307$F311 0001                                  ?_EUSART_Write 0023  
                             ?_I2C_MasterStart 0023                                  _I2C_DO_RX_ACK 233C  
                             ?_I2C_MasterWrite 0023                  __end_of_OSCILLATOR_Initialize 22F6  
                                        ?_main 0023                                __end_of___awdiv 166E  
                                        _EEADR 0FA9                                          STR_10 FF79  
                                        STR_11 FEF8                                          STR_12 FF07  
                                        STR_20 FE7F                                          STR_13 FF34  
                                        STR_21 FE6D                                          STR_30 FF9D  
                                        STR_22 FF85                                          STR_14 FEE8  
                                        STR_23 FF9D                                          STR_15 FEB5  
                                        STR_31 FE91                                          STR_40 FF6C  
                                        STR_32 FFCA                                          STR_16 FFE8  
                                        STR_24 FFDF                                          STR_41 FF9D  
                                        STR_33 FF9D                                          STR_25 FFF8  
                                        STR_17 FF5E                                          STR_42 FF6C  
                                        STR_18 FFCA                                          STR_26 FFA9  
                                        STR_34 FF6C                                          STR_43 FF9D  
                                        STR_35 FF9D                                          STR_19 FF9D  
                                        STR_27 FF42                                          STR_44 FF6C  
                                        STR_28 FF9D                                          STR_36 FEA3  
                              __end_of___awmod 18A4                                          STR_45 FF9D  
                                        STR_29 FF9D                                          STR_37 FF50  
                                        STR_38 FFCA                                          STR_46 FE5B  
                                        STR_39 FF9D                                          STR_47 FF16  
                                        STR_48 FF9D                                          _ANSEL 0F7E  
                        _I2C_Read1ByteRegister 1A70                                ___awdiv@divisor 009E  
                                        i2l260 2050                                          i2l501 1CD8  
                                        i2l254 20A8                                          i2l263 20D4  
                                        i2l511 22E0                                          i2l520 16F8  
                                        i2l504 2370                                          i2l257 207C  
                                        i2l266 1F86                                          i2l610 23A8  
                                        i2l514 229E                                          i2l523 1730  
                                        i2l508 1D48                                          i2l517 22BC  
                                        i2l607 23AC                                          i2l632 23B4  
                                        i2l536 18DA                                          i2l481 2224  
                                        i2l537 1948                                          i2l705 006A  
                                        i2l626 23A0                                          i2l650 2376  
                                        i2l554 1BE8                                          i2l644 23B0  
                                        i2l548 22D4                                          i2l572 2362  
                                        i2l653 237C                                          i2l629 236A  
                                        i2l581 234A                                          i2l709 008A  
                                        i2l478 2170                                          i2l638 23A4  
                                        i2l590 2332                                          i2l647 228E  
                                        i2l575 235A                                          i2l671 2398  
                                        i2l584 2342                                          i2l593 22C8  
                                        i2l674 239C                                          i2l578 2352  
                                        i2l587 233A                                          i2l599 1E14  
                              ___awdiv@counter 00A0                                          _RCREG 0FAE  
                                        _RCSTA 0FAB                                          _SPBRG 0FAF  
                                        _PORTA 0F80                                          _PORTB 0F81  
                                        _PORTC 0F82                                          _PORTD 0F83  
                            ??_I2C_DO_TX_EMPTY 002E                                          _TRISA 0F92  
                                        _TRISB 0F93                                          _TRISC 0F94  
                                        _TRISD 0F95                                          _TRISE 0F96  
                                        _TXREG 0FAD                                          _TXSTA 0FAC  
                     __end_of_keypad_get_value 15A8                              __end_of_I2C_DO_RX 194A  
                            __end_of_I2C_DO_TX 1732                                  _Full_Password 0040  
                              _DATAEE_ReadByte 2194                      _TempSensor_TC74_Read_Temp 21AE  
                               _DIO_write_port 1D4A                              __end_of_I2C_Close 2026  
                             fp__I2C_MasterIsr 0000                 I2C_MasterOperation@returnValue 009D  
                                        main@i 00AC                        _I2C_MasterEnableRestart 23B2  
                                        pclath 0FFA                                          pclatu 0FFB  
                                        tablat 0FF5                               ?_I2C_SetCallback 009C  
                 I2C_SetAddressNackCallback@cb 00A1                                          ttemp5 004C  
                                        ttemp6 004F                                          ttemp7 0053  
                                        status 0FD8                                          wtemp8 004C  
                            ?_I2C_DO_SEND_STOP 0023                                  _LCD_vSend_cmd 2252  
            keypad_get_value@l_columns_counter 00A6                             ??_I2C_DO_SEND_STOP 0023  
                     fp__rd1RegCompleteHandler 0000                                __initialization 1E16  
                        i2I2C_SetBuffer@buffer 0023                                   __end_of_main 14C0  
                     fp__wr1RegCompleteHandler 0000                              _Password_Approval 001B  
                    ?_I2C_DO_SEND_RESTART_READ 0023                                 ??_EUSART_Write 009C  
                               ?_I2C_DO_RX_ACK 0023                              ??_LCD_clearscreen 00A1  
                                       ??_main 00AA                              ?_I2C_MasterIsNack 0023  
                                __activetblptr 0003                              ?_I2C_MasterSetIrq 0023  
                           ??_I2C_MasterIsNack 0023                         __end_of_DIO_write_port 1DB0  
                            __end_of_LCD_vInit 2100                             ??_I2C_MasterSetIrq 0023  
                                   _Input_temp 004A              _EUSART_DefaultFramingErrorHandler 0000  
                           _pass_entry_counter 001C                     _EUSART_OverrunErrorHandler 0009  
              __end_of_I2C_CallbackReturnReset 23AA                                         _EEADRH 0FAA  
                                       _EEDATA 0FA8                                         _EECON2 0FA7  
                             ___awdiv@dividend 009C                i2I2C_SetDataCompleteCallback@cb 0028  
                I2C_SetDataCompleteCallback@cb 00A1                                         _ANSELH 0F7F  
                                       i2l4051 22DE                                         i2l4047 22D6  
                                       i2l4135 22CA                                         i2l4207 2396  
                                       i2l4049 22DA                                         i2l6001 16FC  
                                       i2l4137 22CE                                         i2l6003 170E  
                                       i2l4139 22D2                                         i2l6005 1728  
                                       i2l6021 18D0                                         i2l4173 22BE  
                                       i2l6007 172E                                         i2l6023 18D4  
                                       i2l6015 18A4                                         i2l4175 22C2  
                                       i2l6033 18E8                                         i2l6017 18B2  
                                       i2l4177 22C6                                         i2l6201 1D02  
                                       i2l6051 1B7E                                         i2l6019 18B8  
                                       i2l6203 1D08                                         i2l6053 1B82  
                                       i2l6045 1B6E                                         i2l6029 18E0  
                                       i2l6047 1B76                                         i2l6063 1B90  
                                       i2l6039 18F0                                         i2l6071 2340  
                                       i2l6057 1B88                                         i2l6083 1DC4  
                                       i2l6075 1DB0                                         i2l6307 236C  
                                       i2l6069 233C                                         i2l6077 1DB4  
                                       i2l5711 23B2                                         i2l5703 1C66  
                                       i2l6079 1DBC                                         i2l5713 23AE  
                                       i2l5721 2166                                         i2l5705 1C78  
                                       i2l3937 23A2                                         i2l3945 239A  
                                       i2l6089 1DCC                                         i2l6601 0040  
                                       i2l5723 216E                                         i2l5707 1CAC  
                                       i2l5731 20A6                                         i2l5715 2378  
                                       i2l5811 227C                                         i2l6195 1CDA  
                                       i2l6603 004E                                         i2l5717 214E  
                                       i2l5725 220E                                         i2l6197 1CDE  
                                       i2l6605 0078                                         i2l5719 215E  
                                       i2l5751 20AA                                         i2l5727 207E  
                                       i2l5735 2052                                         i2l5743 2026  
                                       i2l5815 2366                                         i2l5823 2354  
                                       i2l5831 2348                                         i2l6199 1CEE  
                                       i2l5753 20BE                                         i2l5729 2092  
                                       i2l5737 2066                                         i2l5745 203A  
                                       i2l5761 1F70                                         i2l5817 235C  
                                       i2l5825 2358                                         i2l5841 232C  
                                       i2l5755 20D2                                         i2l5739 207A  
                                       i2l5747 204E                                         i2l5763 1F84  
                                       i2l5835 239E                                         i2l5819 2360  
                                       i2l5843 2330                                         i2l5853 234C  
                                       i2l5829 2344                                         _TABLAT 0FF5  
                                       i2l5759 1F48                                         i2l5863 23A6  
                                       i2l5839 2372                                         i2l5855 2350  
                                       i2l5847 2334                                         i2l5849 2338  
                                       i2l5859 23AA                                         i2l7651 1BC2  
                                       i2l5965 2290                                         i2l5973 22B0  
                                       i2l5981 166E                                         i2l7645 1DFE  
                                       i2l5967 2294                                         i2l5975 22B4  
                                       i2l7647 1922                                         i2l6599 0032  
                                       i2l5969 229C                                         i2l5977 22BA  
                                       i2l7649 16D2                                         i2l5993 1696  
                                       i2l5985 1686                                         i2l5989 168E  
                                       i2l5999 169E                                         _OSCCON 0FD3  
                       ??i2_I2C_MasterClearIrq 0023                      ??_I2C_SetInterruptHandler 009E  
                                       _SPBRGH 0FB0                               LCD_vSend_cmd@cmd 00A0  
                                       _SSPADD 0FC8                                         _SSPBUF 0FC9  
                    keypad_get_value@l_counter 00A4                                 ?_LCD_vSend_cmd 0023  
                          _I2C_MasterEnableIrq 2382                            _I2C_MasterGetRxData 239E  
                                _I2C_MasterFsm 1CDA                                      ??___awdiv 00A0  
                                _I2C_MasterIsr 236C                                      ??___awmod 00A0  
                                       clear_0 1E5C                                         clear_1 1E68  
                            I2C_SetCallback@cb 009C                               ___awdiv@quotient 00A2  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 009E  
                       ?_I2C_Read1ByteRegister 00A5                              _conditioner_state 001A  
                                       isa$std 0001                                ___awmod@counter 00A0  
                           LCD_movecursor@data 00A2                                 _windows1_state 0013  
                                _I2C_SetBuffer 212A                                 _windows2_state 0012  
                      __end_of_DATAEE_ReadByte 21AE                   __end_of_I2C_MasterDisableIrq 238E  
                         ?_I2C_MasterEnableIrq 0023                            _I2C_DO_ADDRESS_NACK 1DB0  
                                 __pdataCOMRAM 003C                           ?_I2C_MasterGetRxData 0023  
                                    ?_I2C_Open 0023             __end_of_I2C_SetAddressNackCallback 21F6  
                   _I2C_SetAddressNackCallback 21DE                                   __mediumconst FE2A  
                              ?_DIO_write_port 009C                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                    ??_I2C_MasterEnableRestart 0023                              _TC74_A7_TempValue 001F  
      I2C_SetInterruptHandler@InterruptHandler 009C               ??_INTERRUPT_InterruptManagerHigh 0032  
              ?_INTERRUPT_InterruptManagerHigh 0023                              _SYSTEM_Initialize 2226  
                                   __accesstop 0060                        __end_of__initialization 1E6E  
                               _LCD_vSend_char 223C                            _I2C_MasterOperation 1EC0  
                           ?_SYSTEM_Initialize 0023                                  ___rparam_used 0001  
                         ?_I2C_DO_ADDRESS_NACK 0023                       __end_of_LCD_vSend_string 1FC4  
                      _rdBlkRegCompleteHandler 1F48                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0023                                 ?_I2C_MasterFsm 0023  
                               ?_I2C_MasterIsr 0023                                ??_I2C_DO_RX_ACK 0023  
                                 __pidataBANK0 237E                         _I2C_CallbackReturnStop 23AA  
                          ??_SYSTEM_Initialize 009E                               _DATAEE_WriteByte 1E78  
                               ?_I2C_SetBuffer 009C                  __end_of_I2C_DO_SEND_ADR_WRITE 22BE  
                   ?_I2C_DO_SEND_RESTART_WRITE 0023                           ?_I2C_MasterOperation 0023  
                        ??_I2C_MasterEnableIrq 009C                          ??_I2C_MasterGetRxData 0023  
                                   ??_I2C_Open 009E                     __end_of_I2C_MasterClearIrq 2396  
              ??_EUSART_SetOverrunErrorHandler 009E                      __end_of_SYSTEM_Initialize 223C  
                            _I2C_MasterSendAck 2372                         __end_of_LCD_vSend_char 2252  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 220E  
                                ??_I2C_DO_IDLE 0023                                ??_LCD_vSend_cmd 00A0  
                                ??_I2C_DO_RCEN 0023                  __end_of_rd2RegCompleteHandler 207E  
                 __end_of_I2C_MasterSendTxData 236C                             ?_I2C_MasterSendAck 0023  
                            _I2C_MasterStartRx 23A2                          ??_I2C_DO_ADDRESS_NACK 002E  
                                   _led1_state 0017                  __end_of_wr2RegCompleteHandler 20D6  
                                   _led2_state 0016                                     _led3_state 0015  
                          _I2C_DO_RX_NACK_STOP 2334                          _rd1RegCompleteHandler 207E  
                           ?_I2C_MasterStartRx 0023                                 _opened_in_flag 0018  
                   __end_of_I2C_MasterSendNack 237E                                 _LCD_movecursor 19EC  
                        _wr1RegCompleteHandler 2026                            ??_I2C_MasterSendAck 0023  
                     rd1RegCompleteHandler@ptr 002C                    __end_of_I2C_DO_SEND_RESTART 2354  
                              _I2C_DO_TX_EMPTY 1B6E                            I2C_SetBuffer@buffer 009C  
                          ??_I2C_MasterStartRx 0023                                        _BAUDCON 0FB8  
                        ??_I2C_MasterOperation 009C               i2I2C_SetDataCompleteCallback@ptr 002A  
               I2C_SetDataCompleteCallback@ptr 00A3                       ??_I2C_DO_RX_NACK_RESTART 0023  
                             ?_DATAEE_ReadByte 009C              __end_of_I2C_DO_SEND_RESTART_WRITE 235C  
                         ?_I2C_DO_RX_NACK_STOP 0023                                        _TBLPTRH 0FF7  
                                      _TBLPTRL 0FF6                                        _TBLPTRU 0FF8  
                                   _fire_alarm 0010                      __end_of_I2C_MasterSendAck 2378  
                                      _OSCTUNE 0F9B                              ?_keypad_get_value 0023  
                     ??_EUSART_SetErrorHandler 009E                                        _SSPCON1 0FC6  
                                      _SSPCON2 0FC5                                        _SSPSTAT 0FC7  
                    __end_of_I2C_MasterStartRx 23A6                             ??_keypad_get_value 00A0  
                         I2C_Close@returnValue 009C                                     _btn_values FE4B  
                 ?_I2C_SetDataCompleteCallback 00A1                                ?_LCD_vSend_char 0023  
                                    _I2C_DO_RX 18A4                                      _I2C_DO_TX 166E  
             __end_of_I2C_DO_SEND_RESTART_READ 2364                           DATAEE_WriteByte@bAdd 00A4  
                 I2C_Read1ByteRegister@address 00A6                                      _I2C_Close 1FF8  
                    ??_rdBlkRegCompleteHandler 002E                         __end_of_LCD_movecursor 1A70  
                         _I2C_MasterDisableIrq 238A                              ??i2_I2C_SetBuffer 0027  
                                   _first_time 000F                                ??_I2C_MasterFsm 0030  
                              ??_I2C_MasterIsr 0032                                        __Hparam 0000  
                              _LCD_clearscreen 2324                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 22E2                            __end_of_I2C_DO_RCEN 22D6  
                                      ___awdiv 15A8                                        ___awmod 17F2  
                              ??_I2C_SetBuffer 00A0                        I2C_SetBuffer@bufferSize 009E  
                               _I2C_MasterOpen 2172                                        __pcinit 1E16  
                               _I2C_MasterStop 23AE                                 _I2C_Initialize 2268  
                                      __ramtop 1000                                        __ptext0 00BA  
                                      __ptext1 14C0                                        __ptext2 1732  
                                      __ptext3 1AF2                                        __ptext4 17F2  
                                      __ptext5 15A8                                        __ptext6 21AE  
                                      __ptext7 1A70                                        __ptext8 21C6  
                                      __ptext9 212A                          ??_I2C_DO_RX_NACK_STOP 0023  
                                      _columns 00AE                          _OSCILLATOR_Initialize 22EC  
                             ___awmod@dividend 009C                             I2C_SetCallback@idx 00A0  
                     ??_PIN_MANAGER_Initialize 009C                  I2C_CallbackReturnReset@funPtr 002C  
                           I2C_SetCallback@ptr 009E                       wr1RegCompleteHandler@ptr 002C  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                           end_of_initialization 1E6E  
                                    _LCD_vInit 20D6                                     ?_I2C_DO_RX 0023  
                                   ?_I2C_DO_TX 0023          __end_of_EUSART_SetOverrunErrorHandler 2300  
                _EUSART_SetOverrunErrorHandler 22F6                                     ?_I2C_Close 0023  
                         LCD_vSend_string@data 00A1                         ?_rd1RegCompleteHandler 002C  
                      __end_of_I2C_DO_TX_EMPTY 1BEA                                ?_LCD_movecursor 00A1  
                        ?_I2C_MasterDisableIrq 0023                              _EUSART_Initialize 1F04  
                       ?_wr1RegCompleteHandler 002C                       ??_column_pin_read__logic 009C  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0023  
                                    _RCSTAbits 0FAB                                        postdec1 0FE5  
                                      postdec2 0FDD                        ??_I2C_Read1ByteRegister 00A6  
                       __end_of_I2C_MasterOpen 2194                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 0FEE                                        postinc2 0FDE  
                       __end_of_I2C_MasterStop 23B2                         __end_of_I2C_Initialize 227C  
                    row_pin_write__logic@value 009F                                 _back_to_safety 0048  
                    row_pin_write__logic@state 009C                      fp__I2C_CallbackReturnStop 0000  
                          ??_EUSART_Initialize 009E                               ??_DIO_write_port 009D  
                                    _PORTBbits 0F81                __end_of_rdBlkRegCompleteHandler 1F88  
                         _I2C_MasterSendTxData 2364                                fp__I2C_DO_RESET 0000  
                 keypad_get_value@column_logic 00A3                    ?_I2C_SetAddressNackCallback 00A1  
                     __end_of_DATAEE_WriteByte 1EC0                                     ?_LCD_vInit 0023  
                      __end_of_LCD_clearscreen 232C                      __end_of_EUSART_Initialize 1F48  
                                  _I2C_DO_IDLE 22D6                                    _I2C_DO_RCEN 22CA  
                   rdBlkRegCompleteHandler@ptr 002C                                      _TXSTAbits 0FAC  
                      ?_I2C_CallbackReturnStop 002C                       _I2C_DO_SEND_RESTART_READ 235C  
                  fp__I2C_DO_SEND_RESTART_READ 0000                              ?_LCD_vSend_string 00A1  
                            i2_I2C_SetCallback 1C64                   I2C_CallbackReturnStop@funPtr 002C  
                           ??_LCD_vSend_string 00A3                                ?_I2C_MasterOpen 0023  
                 __end_of_INTERRUPT_Initialize 2324                                ?_I2C_MasterStop 0023  
                              ?_I2C_Initialize 0023                   __end_of_row_pin_write__logic 17F2  
                      _I2C_CallbackReturnReset 23A6                       I2C_Read1ByteRegister@reg 00A5  
                   fp__I2C_CallbackReturnReset 0000                        DIO_write_port@portvalue 009C  
                   _EUSART_DefaultErrorHandler 0000                             ?i2_I2C_SetCallback 0023  
              ??i2_I2C_SetDataCompleteCallback 002C                                  __pidataCOMRAM 22A0  
                                 _EUSART_Write 21F6                          ?_I2C_MasterSendTxData 0023  
                       ?_OSCILLATOR_Initialize 0023                    ??_I2C_DO_SEND_RESTART_WRITE 0023  
                          ??i2_I2C_SetCallback 0027                            start_initialization 1E16  
                                ?_I2C_DO_RESET 0023                       ?_I2C_SetInterruptHandler 009C  
                                  ??_I2C_DO_RX 002E                                    ??_I2C_DO_TX 002E  
                            ??_I2C_MasterClose 009C                         ??_I2C_MasterDisableIrq 009C  
                                  ??_I2C_Close 009C                              ??_I2C_MasterStart 009C  
                            ??_I2C_MasterWrite 009E                 __end_of_I2C_CallbackReturnStop 23AE  
                       _I2C_DO_RX_NACK_RESTART 232C                               ?_I2C_DO_TX_EMPTY 0023  
                          DATAEE_ReadByte@bAdd 009C                             _I2C_MasterClearIrq 2392  
                    __end_ofi2_I2C_SetCallback 1CDA                 ?_EUSART_SetOverrunErrorHandler 009C  
                   _EUSART_FramingErrorHandler 000B                         _EUSART_SetErrorHandler 230A  
              column_pin_read__logic@pin_state 009F                    __end_of_I2C_MasterEnableIrq 2386  
                          ?_I2C_MasterClearIrq 0023                    __end_of_I2C_MasterGetRxData 23A2  
                            LCD_movecursor@row 00A3                                    __pdataBANK0 00AE  
                        __end_of_I2C_DO_RX_ACK 2344                               _I2C_DO_SEND_STOP 2344  
                            ??_I2C_SetCallback 00A0                            I2C_Open@returnValue 009F  
                           _I2C_MasterSendNack 2378                       ?_I2C_MasterEnableRestart 0023  
                            _i2c_fsmStateTable FE2B                         fp__I2C_DO_SEND_RESTART 0000  
                        _I2C_DO_SEND_ADR_WRITE 22B0                                    __pbssCOMRAM 0001  
                             ??_LCD_vSend_char 00A0                                  __pcstackBANK0 009C  
                               ??_I2C_DO_RESET 0023                            ?_I2C_MasterSendNack 0023  
                              i2_I2C_SetBuffer 214E                   __end_of_I2C_DO_SEND_ADR_READ 22A0  
                         ??_I2C_MasterClearIrq 009C                    __end_of_I2C_DO_ADDRESS_NACK 1E16  
                                  ??_LCD_vInit 00A1                               ?_LCD_clearscreen 0023  
                             _I2C_MasterIsNack 227C                      _I2C_DO_SEND_RESTART_WRITE 2354  
                keypad_get_value@clicked_value 00A2                               _I2C_MasterSetIrq 239A  
                        __end_of_LCD_vSend_cmd 2268                          _rd2RegCompleteHandler 2052  
                       _PIN_MANAGER_Initialize 1FC4                          _wr2RegCompleteHandler 20AA  
                    ??_I2C_CallbackReturnReset 002E                    __end_of_I2C_MasterOperation 1F04  
                         ??_I2C_MasterSendNack 0023                       rd2RegCompleteHandler@ptr 002C  
                                    __pintcode 0008                                  __pmediumconst FE2A  
                                     ?___awdiv 009C                                       ?___awmod 009C  
                       ??_I2C_MasterSendTxData 0023                      __end_of_i2c_fsmStateTable FE4B  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
              __end_of_I2C_SetInterruptHandler 22EC                         _column_pin_read__logic 1AF2  
        __end_ofi2_I2C_SetDataCompleteCallback 2226                  i2_I2C_SetDataCompleteCallback 220E  
                      I2C_MasterOperation@read 009C                                       _I2C_Open 194A  
                             ??_LCD_movecursor 00A2                        ??_rd1RegCompleteHandler 002E  
                         _INTERRUPT_Initialize 231C          TempSensor_TC74_Read_Temp@TC74_Address 00A8  
                         _row_pin_write__logic 1732                        ??_wr1RegCompleteHandler 002E  
       EUSART_SetErrorHandler@interruptHandler 009C                                       _LATBbits 0F8A  
                                     _LATCbits 0F8B                                       _IPR1bits 0F9F  
                                     _IPR2bits 0FA2                                       _PIE1bits 0F9D  
                                     _PIE2bits 0FA0                              _eusartRxLastError 0022  
                                     i2u400_40 1D02                                       i2u400_41 1CFE  
                                     i2u401_48 1D32                                       i2u401_49 1D44  
                                     _PIR1bits 0F9E                ??_EUSART_SetFramingErrorHandler 009E  
                                     _PIR2bits 0FA1                                       i2u380_40 215E  
                                     i2u444_40 0040                                       i2u380_41 215A  
                                     i2u444_41 003C                                       i2u445_40 004E  
                                     i2u445_41 004A                                       i2u391_40 1728  
                                     i2u390_48 16AC                                       i2u447_40 0078  
                                     i2u446_48 0054                                       i2u391_41 1724  
                                     i2u390_49 16C0                                       i2u447_41 0074  
                                     i2u446_49 0066                                       i2u392_40 18D0  
                                     i2u448_40 0086                                       i2u392_41 18CC  
                                     i2u448_41 0082                                       i2u385_40 228C  
                                     i2u385_41 2286                                       i2u385_46 228E  
                                     i2u393_48 18FE                                       i2u393_49 1910  
                                     i2u379_40 1C78                                       i2u394_48 1B9E  
                                     i2u379_41 1C74                                       i2u394_49 1BB0  
                                     i2u395_48 1DDA                                       i2u395_49 1DEC  
                                     i2u389_40 1682                                       i2u389_41 167E  
                                     i2u399_40 1CEE                                       i2u399_41 1CEA  
                        __end_of_I2C_MasterFsm 1D4A                          __end_of_I2C_MasterIsr 2372  
                                     _RCONbits 0FD0                    __end_of_I2C_DO_RX_NACK_STOP 233C  
                   ?_TempSensor_TC74_Read_Temp 0023              _EUSART_DefaultOverrunErrorHandler 0000  
              __end_of_I2C_MasterEnableRestart 23B6                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                  __end_of_I2C_Read1ByteRegister 1AF2  
                           LCD_vSend_char@data 00A0                          __end_of_I2C_SetBuffer 214E  
                                 _pass_counter 001D                         ?_I2C_DO_SEND_ADR_WRITE 0023  
                        LCD_movecursor@coloumn 00A1                        __end_ofi2_I2C_SetBuffer 2172  
                     I2C_MasterSendTxData@data 0023                       wr2RegCompleteHandler@ptr 002C  
                        DATAEE_WriteByte@bData 00A6                         DIO_write_port@portname 009F  
                                  _INTCON2bits 0FF1                     ??_I2C_DO_SEND_RESTART_READ 0023  
                                    copy_data0 1E2A                                      copy_data1 1E4A  
                        ?_INTERRUPT_Initialize 0023                       ?_rdBlkRegCompleteHandler 002C  
                    i2I2C_SetBuffer@bufferSize 0025                          ?_row_pin_write__logic 009C  
                            ?_DATAEE_WriteByte 00A4                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0023                                   ?_I2C_DO_RCEN 0023  
                       ?_rd2RegCompleteHandler 002C                             ??_DATAEE_WriteByte 00A7  
                                   _EECON1bits 0FA6                               ??_I2C_MasterOpen 009C  
                       ?_wr2RegCompleteHandler 002C                               ??_I2C_MasterStop 0023  
                             ??_I2C_Initialize 009C                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                       __Lrparam 0000  
                         __end_of_I2C_DO_RESET 22CA                                 _pressed_button 0049  
                      ??_OSCILLATOR_Initialize 009C                            _EUSART_ErrorHandler 0007  
            __end_of_TempSensor_TC74_Read_Temp 21C6                            _RealTimeClockDS1307 0084  
                         _I2C_DO_SEND_ADR_READ 2290                              _send_falling_edge 2100  
                           __end_of_btn_values FE5B               I2C_Read1ByteRegister@returnValue 00A7  
                 __end_ofi2_I2C_MasterClearIrq 239A                             ?_send_falling_edge 0023  
                              _I2C_MasterClose 238E                  I2C_SetAddressNackCallback@ptr 00A3  
                              I2C_Open@address 009E                            fp__I2C_DO_SEND_STOP 0000  
                         i2I2C_SetCallback@idx 0027                                _I2C_MasterStart 2386  
                         i2I2C_SetCallback@ptr 0025                                _I2C_MasterWrite 2314  
                                     __ptext10 21DE                                       __ptext11 1BEA  
                                     __ptext20 238A                                       __ptext12 194A  
                                     __ptext21 238E                                       __ptext13 22E2  
                                     __ptext30 2300                                       __ptext22 2392  
                                     __ptext14 2172                                       __ptext31 230A  
                                     __ptext23 2226                                       __ptext15 2382  
                                     __ptext40 21F6                                       __ptext32 1F88  
                                     __ptext24 1FC4                                       __ptext16 2314  
                                     __ptext41 1E78                                       __ptext33 223C  
                                     __ptext25 22EC                                       __ptext17 1EC0  
                                     __ptext50 2334                                       __ptext42 2194  
                                     __ptext34 20D6                                       __ptext26 231C  
                                     __ptext18 2386                                       __ptext51 233C  
                                     __ptext35 19EC                                       __ptext27 2268  
                                     __ptext19 1FF8                                       __ptext60 2290  
                                     __ptext52 2344                                       __ptext44 236C  
                                     __ptext36 2324                                       __ptext28 1F04  
                                     __ptext61 22D6                                       __ptext53 234C  
                                     __ptext45 1CDA                                       __ptext37 2252  
                                     __ptext29 22F6                                       __ptext70 23A6  
                                     __ptext62 1B6E                                       __ptext54 2354  
                                     __ptext46 2396                                       __ptext38 2100  
                                     __ptext71 23AA                                       __ptext63 239A  
                                     __ptext55 235C                                       __ptext47 1DB0  
                                     __ptext39 1D4A                                       __ptext80 23AE  
                                     __ptext72 1F48                                       __ptext64 227C  
                                     __ptext56 22CA                                       __ptext48 22BE  
                                     __ptext81 23B2                                       __ptext73 2026  
                                     __ptext65 2364                                       __ptext57 18A4  
                                     __ptext49 232C                                       __ptext82 0000  
                                     __ptext74 2052                                       __ptext66 2372  
                                     __ptext58 166E                                       __ptext75 207E  
                                     __ptext67 239E                                       __ptext59 22B0  
                                     __ptext76 20AA                                       __ptext68 2378  
                                     __ptext77 220E                                       __ptext69 23A2  
                                     __ptext78 1C64                                       __ptext79 214E  
                          ??_send_falling_edge 009C                                    _radio_state 0011  
          __end_of_I2C_SetDataCompleteCallback 21DE                 ?i2_I2C_SetDataCompleteCallback 0028  
                  _I2C_SetDataCompleteCallback 21C6                        ?_I2C_DO_RX_NACK_RESTART 0023  
                  DATAEE_WriteByte@GIEBitValue 00A7                       __end_of_I2C_DO_SEND_STOP 234C  
                            ??_DATAEE_ReadByte 009E                        ?_EUSART_SetErrorHandler 009C  
                              _I2C_SetCallback 1BEA                  ??_I2C_SetDataCompleteCallback 00A5  
                             _keypad_get_value 14C0  EUSART_SetOverrunErrorHandler@interruptHandler 009C  
                                     isa$xinst 0000                      __end_of_send_falling_edge 212A  
                                     int$flags 004B                          ?_I2C_DO_SEND_ADR_READ 0023  
        __end_of_EUSART_SetFramingErrorHandler 230A                  _EUSART_SetFramingErrorHandler 2300  
                                     _tv_state 0014                       __end_of_I2C_MasterIsNack 2290  
                     __end_of_I2C_MasterSetIrq 239E                               ?i2_I2C_SetBuffer 0023  
                               _Password_Check 003C                                     _INTCONbits 0FF2  
               keypad_get_value@l_rows_counter 00A5                         ??_INTERRUPT_Initialize 009C  
               __end_of_I2C_DO_RX_NACK_RESTART 2334                         ??_row_pin_write__logic 009D  
                                     intlevel2 0000                            i2I2C_SetCallback@cb 0023  
                                  _opened_flag 0019                        ?_PIN_MANAGER_Initialize 0023  
               __end_of_EUSART_SetErrorHandler 2314                            _I2C_DO_SEND_RESTART 234C  
                       fp__I2C_DO_ADDRESS_NACK 0000                                     _U4RecValue 0021  
                  column_pin_read__logic@value 009E                                     _U5RecValue 0020  
      TempSensor_TC74_Read_Temp@TC74_TempValue 00A9  EUSART_SetFramingErrorHandler@interruptHandler 009C  
                      __end_of_I2C_MasterClose 2392                             fp__I2C_DO_TX_EMPTY 0000  
                      __end_of_I2C_MasterStart 238A                        __end_of_I2C_MasterWrite 231C  
                      ?_column_pin_read__logic 0023         __end_of_INTERRUPT_InterruptManagerHigh 00B6  
               _INTERRUPT_InterruptManagerHigh 0008                       _RealTimeClockDS1307_Pack 008A  
                         ?_I2C_DO_SEND_RESTART 0023                                    _SSPCON1bits 0FC6  
                                  _SSPCON2bits 0FC5                             EUSART_Write@txData 009C  
                      __end_of_I2C_SetCallback 1C64                 __end_of_PIN_MANAGER_Initialize 1FF8  
                __end_of_rd1RegCompleteHandler 20AA                               fp__I2C_DO_RX_ACK 0000  
                __end_of_wr1RegCompleteHandler 2052                          _MSSP_InterruptHandler 000D  
                         i2_I2C_MasterClearIrq 2396  
